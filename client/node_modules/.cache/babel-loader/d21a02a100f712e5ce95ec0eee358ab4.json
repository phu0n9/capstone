{"ast":null,"code":"/*\nCopyright (c) Daybrush\nname: react-simple-compat\nlicense: MIT\nauthor: Daybrush\nrepository: git+https://github.com/daybrush/react-simple-compat.git\nversion: 1.2.1\n*/\nimport { diff } from '@egjs/list-differ';\nimport { isArray, isString, isNumber, isUndefined, decamelize } from '@daybrush/utils';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nfunction __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n}\n\nfunction isDiff(a, b) {\n  if (a === b) {\n    return false;\n  }\n\n  for (var i in a) {\n    if (!(i in b)) {\n      return true;\n    }\n  }\n\n  for (var i in b) {\n    if (a[i] !== b[i]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction diffObject(a, b) {\n  var keys1 = Object.keys(a);\n  var keys2 = Object.keys(b);\n  var result = diff(keys1, keys2, function (key) {\n    return key;\n  });\n  var added = {};\n  var removed = {};\n  var changed = {};\n  result.added.forEach(function (index) {\n    var name = keys2[index];\n    added[name] = b[name];\n  });\n  result.removed.forEach(function (index) {\n    var name = keys1[index];\n    removed[name] = a[name];\n  });\n  result.maintained.forEach(function (_a) {\n    var index = _a[0];\n    var name = keys1[index];\n    var values = [a[name], b[name]];\n\n    if (a[name] !== b[name]) {\n      changed[name] = values;\n    }\n  });\n  return {\n    added: added,\n    removed: removed,\n    changed: changed\n  };\n}\n\nfunction executeHooks(hooks) {\n  hooks.forEach(function (hook) {\n    hook();\n  });\n}\n\nfunction fillKeys(keys) {\n  var index = 0;\n  return keys.map(function (key) {\n    return key == null ? \"$compat\" + ++index : \"\" + key;\n  });\n}\n\nfunction createProvider(el, key, index, container) {\n  if (isString(el) || isNumber(el)) {\n    return new TextProvider(\"text_\" + el, key, index, container, null, {});\n  }\n\n  var providerClass = typeof el.type === \"string\" ? ElementProvider : el.type.prototype.render ? ComponentProvider : FunctionProvider;\n  return new providerClass(el.type, key, index, container, el.ref, el.props);\n}\n\nfunction flat(arr) {\n  var arr2 = [];\n  arr.forEach(function (el) {\n    arr2 = arr2.concat(isArray(el) ? flat(el) : el);\n  });\n  return arr2;\n}\n\nfunction getAttributes(props) {\n  var className = props.className,\n      otherProps = __rest(props, [\"className\"]);\n\n  if (className != null) {\n    otherProps.class = className;\n  }\n\n  delete otherProps.style;\n  delete otherProps.children;\n  return otherProps;\n}\n\nfunction fillProps(props, defaultProps) {\n  if (!defaultProps) {\n    return props;\n  }\n\n  for (var name in defaultProps) {\n    if (isUndefined(props[name])) {\n      props[name] = defaultProps[name];\n    }\n  }\n\n  return props;\n}\n\nfunction createElement(type, props) {\n  var children = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    children[_i - 2] = arguments[_i];\n  }\n\n  var _a = props || {},\n      key = _a.key,\n      ref = _a.ref,\n      otherProps = __rest(_a, [\"key\", \"ref\"]);\n\n  return {\n    type: type,\n    key: key,\n    ref: ref,\n    props: __assign(__assign({}, otherProps), {\n      children: flat(children).filter(function (child) {\n        return child != null && child !== false;\n      })\n    })\n  };\n}\n\nvar Provider = /*#__PURE__*/function () {\n  function Provider(type, key, index, container, ref, props) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    this.type = type;\n    this.key = key;\n    this.index = index;\n    this.container = container;\n    this.ref = ref;\n    this.props = props;\n    this._providers = [];\n  }\n\n  var __proto = Provider.prototype;\n\n  __proto._should = function (nextProps, nextState) {\n    return true;\n  };\n\n  __proto._update = function (hooks, nextElement, nextState, isForceUpdate) {\n    if (this.base && !isString(nextElement) && !isForceUpdate && !this._should(nextElement.props, nextState)) {\n      return false;\n    }\n\n    this.original = nextElement;\n\n    this._setState(nextState); // render\n\n\n    var prevProps = this.props;\n\n    if (!isString(nextElement)) {\n      this.props = nextElement.props;\n      this.ref = nextElement.ref;\n    }\n\n    this._render(hooks, this.base ? prevProps : {}, nextState);\n\n    return true;\n  };\n\n  __proto._mounted = function () {\n    var ref = this.ref;\n    ref && ref(this.base);\n  };\n\n  __proto._setState = function (nextstate) {\n    return;\n  };\n\n  __proto._updated = function () {\n    var ref = this.ref;\n    ref && ref(this.base);\n  };\n\n  __proto._destroy = function () {\n    var ref = this.ref;\n    ref && ref(null);\n  };\n\n  return Provider;\n}();\n\nfunction diffAttributes(attrs1, attrs2, el) {\n  var _a = diffObject(attrs1, attrs2),\n      added = _a.added,\n      removed = _a.removed,\n      changed = _a.changed;\n\n  for (var name in added) {\n    el.setAttribute(name, added[name]);\n  }\n\n  for (var name in changed) {\n    el.setAttribute(name, changed[name][1]);\n  }\n\n  for (var name in removed) {\n    el.removeAttribute(name);\n  }\n}\n\nfunction diffEvents(events1, events2, provier) {\n  var _a = diffObject(events1, events2),\n      added = _a.added,\n      removed = _a.removed,\n      changed = _a.changed;\n\n  for (var name in removed) {\n    provier.removeEventListener(name);\n  }\n\n  for (var name in added) {\n    provier.addEventListener(name, added[name]);\n  }\n\n  for (var name in changed) {\n    provier.removeEventListener(name);\n    provier.addEventListener(name, changed[name][1]);\n  }\n\n  for (var name in removed) {\n    provier.removeEventListener(name);\n  }\n}\n\nfunction diffStyle(style1, style2, el) {\n  var style = el.style;\n\n  var _a = diffObject(style1, style2),\n      added = _a.added,\n      removed = _a.removed,\n      changed = _a.changed;\n\n  for (var beforeName in added) {\n    var name = decamelize(beforeName, \"-\");\n\n    if (style.setProperty) {\n      style.setProperty(name, added[beforeName]);\n    } else {\n      style[name] = added[beforeName];\n    }\n  }\n\n  for (var beforeName in changed) {\n    var name = decamelize(beforeName, \"-\");\n\n    if (style.setProperty) {\n      style.setProperty(name, changed[beforeName][1]);\n    } else {\n      style[name] = changed[beforeName][1];\n    }\n  }\n\n  for (var beforeName in removed) {\n    var name = decamelize(beforeName, \"-\");\n\n    if (style.removeProperty) {\n      style.removeProperty(name);\n    } else {\n      style[name] = \"\";\n    }\n  }\n}\n\nfunction splitProps(props) {\n  var attributes = {};\n  var events = {};\n\n  for (var name in props) {\n    if (name.indexOf(\"on\") === 0) {\n      events[name.replace(\"on\", \"\").toLowerCase()] = props[name];\n    } else {\n      attributes[name] = props[name];\n    }\n  }\n\n  return {\n    attributes: attributes,\n    events: events\n  };\n}\n\nvar TextProvider = /*#__PURE__*/function (_super) {\n  __extends(TextProvider, _super);\n\n  function TextProvider() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  var __proto = TextProvider.prototype;\n\n  __proto._render = function (hooks) {\n    var _this = this;\n\n    var isMount = !this.base;\n\n    if (isMount) {\n      this.base = document.createTextNode(this.type.replace(\"text_\", \"\"));\n    }\n\n    hooks.push(function () {\n      if (isMount) {\n        _this._mounted();\n      } else {\n        _this._updated();\n      }\n    });\n    return true;\n  };\n\n  __proto._unmount = function () {\n    this.base.parentNode.removeChild(this.base);\n  };\n\n  return TextProvider;\n}(Provider);\n\nvar ElementProvider = /*#__PURE__*/function (_super) {\n  __extends(ElementProvider, _super);\n\n  function ElementProvider() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.events = {};\n    _this._isSVG = false;\n    return _this;\n  }\n\n  var __proto = ElementProvider.prototype;\n\n  __proto.addEventListener = function (name, callback) {\n    var events = this.events;\n\n    events[name] = function (e) {\n      e.nativeEvent = e;\n      callback(e);\n    };\n\n    this.base.addEventListener(name, events[name]);\n  };\n\n  __proto.removeEventListener = function (name) {\n    var events = this.events;\n    this.base.removeEventListener(name, events[name]);\n    delete events[name];\n  };\n\n  __proto._should = function (nextProps) {\n    return isDiff(this.props, nextProps);\n  };\n\n  __proto._render = function (hooks, prevProps) {\n    var _this = this;\n\n    var isMount = !this.base;\n\n    if (isMount) {\n      var isSVG = this._hasSVG();\n\n      this._isSVG = isSVG;\n      var element = this.props.portalContainer;\n\n      if (!element) {\n        var type = this.type;\n\n        if (isSVG) {\n          element = document.createElementNS(\"http://www.w3.org/2000/svg\", type);\n        } else {\n          element = document.createElement(type);\n        }\n      }\n\n      this.base = element;\n    }\n\n    renderProviders(this, this._providers, this.props.children, hooks, null);\n    var base = this.base;\n\n    var _a = splitProps(prevProps),\n        prevAttributes = _a.attributes,\n        prevEvents = _a.events;\n\n    var _b = splitProps(this.props),\n        nextAttributes = _b.attributes,\n        nextEvents = _b.events;\n\n    diffAttributes(getAttributes(prevAttributes), getAttributes(nextAttributes), base);\n    diffEvents(prevEvents, nextEvents, this);\n    diffStyle(prevProps.style || {}, this.props.style || {}, base);\n    hooks.push(function () {\n      if (isMount) {\n        _this._mounted();\n      } else {\n        _this._updated();\n      }\n    });\n    return true;\n  };\n\n  __proto._unmount = function () {\n    var events = this.events;\n    var base = this.base;\n\n    for (var name in events) {\n      base.removeEventListener(name, events[name]);\n    }\n\n    this._providers.forEach(function (provider) {\n      provider._unmount();\n    });\n\n    this.events = {};\n\n    if (!this.props.portalContainer) {\n      base.parentNode.removeChild(base);\n    }\n  };\n\n  __proto._hasSVG = function () {\n    if (this._isSVG || this.type === \"svg\") {\n      return true;\n    }\n\n    var containerNode = findContainerNode(this.container);\n    return containerNode && \"ownerSVGElement\" in containerNode;\n  };\n\n  return ElementProvider;\n}(Provider);\n\nfunction findContainerNode(provider) {\n  if (!provider) {\n    return null;\n  }\n\n  var base = provider.base;\n\n  if (base instanceof Node) {\n    return base;\n  }\n\n  return findContainerNode(provider.container);\n}\n\nfunction findDOMNode(comp) {\n  if (!comp) {\n    return null;\n  }\n\n  if (comp instanceof Node) {\n    return comp;\n  }\n\n  var providers = comp.$_provider._providers;\n\n  if (!providers.length) {\n    return null;\n  }\n\n  return findDOMNode(providers[0].base);\n}\n\nvar FunctionProvider = /*#__PURE__*/function (_super) {\n  __extends(FunctionProvider, _super);\n\n  function FunctionProvider() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  var __proto = FunctionProvider.prototype;\n\n  __proto._render = function (hooks) {\n    var template = this.type(this.props);\n    renderProviders(this, this._providers, template ? [template] : [], hooks);\n    return true;\n  };\n\n  __proto._unmount = function () {\n    this._providers.forEach(function (provider) {\n      provider._unmount();\n    });\n  };\n\n  return FunctionProvider;\n}(Provider);\n\nvar ContainerProvider = /*#__PURE__*/function (_super) {\n  __extends(ContainerProvider, _super);\n\n  function ContainerProvider(base) {\n    var _this = _super.call(this, \"container\", \"container\", 0, null) || this;\n\n    _this.base = base;\n    return _this;\n  }\n\n  var __proto = ContainerProvider.prototype;\n\n  __proto._render = function () {\n    return true;\n  };\n\n  __proto._unmount = function () {\n    return;\n  };\n\n  return ContainerProvider;\n}(Provider);\n\nvar ComponentProvider = /*#__PURE__*/function (_super) {\n  __extends(ComponentProvider, _super);\n\n  function ComponentProvider(type, key, index, container, ref, props) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    return _super.call(this, type, key, index, container, ref, fillProps(props, type.defaultProps)) || this;\n  }\n\n  var __proto = ComponentProvider.prototype;\n\n  __proto._should = function (nextProps, nextState) {\n    return this.base.shouldComponentUpdate(fillProps(nextProps, this.type.defaultProps), nextState || this.base.state);\n  };\n\n  __proto._render = function (hooks, prevProps, nextState) {\n    var _this = this;\n\n    this.props = fillProps(this.props, this.type.defaultProps);\n    var isMount = !this.base;\n\n    if (isMount) {\n      this.base = new this.type(this.props);\n      this.base.$_provider = this;\n    } else {\n      this.base.props = this.props;\n    }\n\n    var base = this.base;\n    var prevState = base.state;\n    var template = base.render();\n\n    if (template && template.props && !template.props.children.length) {\n      template.props.children = this.props.children;\n    }\n\n    renderProviders(this, this._providers, template ? [template] : [], hooks, nextState, null);\n    hooks.push(function () {\n      if (isMount) {\n        _this._mounted();\n\n        base.componentDidMount();\n      } else {\n        _this._updated();\n\n        base.componentDidUpdate(prevProps, prevState);\n      }\n    });\n  };\n\n  __proto._setState = function (nextState) {\n    if (!nextState) {\n      return;\n    }\n\n    var base = this.base;\n    base.state = nextState;\n  };\n\n  __proto._unmount = function () {\n    this._providers.forEach(function (provider) {\n      provider._unmount();\n    });\n\n    clearTimeout(this.base.$_timer);\n    this.base.componentWillUnmount();\n  };\n\n  return ComponentProvider;\n}(Provider);\n\nvar Component = /*#__PURE__*/function () {\n  function Component(props) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    this.props = props;\n    this.state = {};\n    this.$_timer = 0;\n    this.$_state = {};\n  }\n\n  var __proto = Component.prototype;\n\n  __proto.shouldComponentUpdate = function (props, state) {\n    return true;\n  };\n\n  __proto.render = function () {\n    return null;\n  };\n\n  __proto.setState = function (state, callback, isForceUpdate) {\n    var _this = this;\n\n    if (!this.$_timer) {\n      this.$_state = {};\n    }\n\n    clearTimeout(this.$_timer);\n    this.$_timer = 0;\n    this.$_state = __assign(__assign({}, this.$_state), state);\n\n    if (!isForceUpdate) {\n      this.$_timer = setTimeout(function () {\n        _this.$_timer = 0;\n\n        _this.$_setState(callback, isForceUpdate);\n      });\n    } else {\n      this.$_setState(callback, isForceUpdate);\n    }\n\n    return;\n  };\n\n  __proto.forceUpdate = function (callback) {\n    this.setState({}, callback, true);\n  };\n\n  __proto.componentDidMount = function () {};\n\n  __proto.componentDidUpdate = function (prevProps, prevState) {};\n\n  __proto.componentWillUnmount = function () {};\n\n  __proto.$_setState = function (callback, isForceUpdate) {\n    var hooks = [];\n    var provider = this.$_provider;\n    var isUpdate = renderProviders(provider.container, [provider], [provider.original], hooks, __assign(__assign({}, this.state), this.$_state), isForceUpdate);\n\n    if (isUpdate) {\n      if (callback) {\n        hooks.push(callback);\n      }\n\n      executeHooks(hooks);\n    }\n  };\n\n  return Component;\n}();\n\nvar PureComponent = /*#__PURE__*/function (_super) {\n  __extends(PureComponent, _super);\n\n  function PureComponent() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  var __proto = PureComponent.prototype;\n\n  __proto.shouldComponentUpdate = function (props, state) {\n    return isDiff(this.props, props) || isDiff(this.state, state);\n  };\n\n  return PureComponent;\n}(Component);\n\nvar _Portal = /*#__PURE__*/function (_super) {\n  __extends(_Portal, _super);\n\n  function _Portal() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  var __proto = _Portal.prototype;\n\n  __proto.componentDidMount = function () {\n    var _a = this.props,\n        element = _a.element,\n        container = _a.container;\n    this._portalProvider = new ContainerProvider(container);\n    renderProvider(element, container, this._portalProvider);\n  };\n\n  __proto.componentDidUpdate = function () {\n    var _a = this.props,\n        element = _a.element,\n        container = _a.container;\n    renderProvider(element, container, this._portalProvider);\n  };\n\n  __proto.componentWillUnmount = function () {\n    var container = this.props.container;\n    renderProvider(null, container, this._portalProvider);\n    this._portalProvider = null;\n  };\n\n  return _Portal;\n}(PureComponent);\n\nfunction updateProvider(provider, children, nextState) {\n  var hooks = [];\n  renderProviders(provider, provider._providers, children, hooks, nextState);\n  executeHooks(hooks);\n}\n\nfunction getNextSibiling(provider, childProvider) {\n  var childProviders = provider._providers;\n  var length = childProviders.length;\n\n  for (var i = childProvider.index + 1; i < length; ++i) {\n    var el = findDOMNode(childProviders[i].base);\n\n    if (el) {\n      return el;\n    }\n  }\n\n  return null;\n}\n\nfunction diffProviders(containerProvider, providers, children) {\n  var childrenKeys = children.map(function (p) {\n    return isString(p) ? null : p.key;\n  });\n  var keys1 = fillKeys(providers.map(function (p) {\n    return p.key;\n  }));\n  var keys2 = fillKeys(childrenKeys);\n  var result = diff(keys1, keys2, function (key) {\n    return key;\n  });\n  result.removed.forEach(function (index) {\n    providers.splice(index, 1)[0]._unmount();\n  });\n  result.ordered.forEach(function (_a) {\n    var from = _a[0],\n        to = _a[1];\n    var childrenProvider = providers.splice(from, 1)[0];\n    providers.splice(to, 0, childrenProvider);\n    var el = findDOMNode(childrenProvider.base);\n    var next = findDOMNode(providers[to + 1] && providers[to + 1].base);\n\n    if (el) {\n      el.parentNode.insertBefore(el, next);\n    }\n  });\n  result.added.forEach(function (index) {\n    providers.splice(index, 0, createProvider(children[index], childrenKeys[index], index, containerProvider));\n  });\n  var changed = result.maintained.filter(function (_a) {\n    var _ = _a[0],\n        to = _a[1];\n    var el = children[to];\n    var childProvider = providers[to];\n    var type = isString(el) ? \"text_\" + el : el.type;\n\n    if (type !== childProvider.type) {\n      childProvider._unmount();\n\n      providers.splice(to, 1, createProvider(el, childrenKeys[to], to, containerProvider));\n      return true;\n    }\n\n    childProvider.index = to;\n    return false;\n  });\n  return __spreadArrays(result.added, changed.map(function (_a) {\n    var _ = _a[0],\n        to = _a[1];\n    return to;\n  }));\n}\n\nfunction renderProviders(containerProvider, providers, children, updatedHooks, nextState, isForceUpdate) {\n  var result = diffProviders(containerProvider, providers, children);\n  var updated = providers.filter(function (childProvider, i) {\n    return childProvider._update(updatedHooks, children[i], nextState, isForceUpdate);\n  });\n  var containerNode = findContainerNode(containerProvider);\n\n  if (containerNode) {\n    result.reverse().forEach(function (index) {\n      var childProvider = providers[index];\n      var el = findDOMNode(childProvider.base);\n\n      if (!el) {\n        return;\n      }\n\n      if (containerNode !== el && !el.parentNode) {\n        var nextElement = getNextSibiling(containerProvider, childProvider);\n        containerNode.insertBefore(el, nextElement);\n      }\n    });\n  }\n\n  return updated.length > 0;\n}\n\nfunction renderProvider(element, container, provider) {\n  if (provider === void 0) {\n    provider = container.__REACT_COMPAT__;\n  }\n\n  var isProvider = !!provider;\n\n  if (!provider) {\n    provider = new ContainerProvider(container);\n  }\n\n  updateProvider(provider, element ? [element] : []);\n\n  if (!isProvider) {\n    container.__REACT_COMPAT__ = provider;\n  }\n\n  return provider;\n}\n\nfunction render(element, container, callback) {\n  var provider = container.__REACT_COMPAT__;\n\n  if (element && !provider) {\n    container.innerHTML = \"\";\n  }\n\n  renderProvider(element, container, provider);\n  callback && callback();\n}\n\nfunction createPortal(el, container) {\n  return createElement(_Portal, {\n    element: el,\n    container: container\n  });\n}\n\nvar version = \"simple-1.1.0\";\nexport { Component, PureComponent, createElement, createPortal, findDOMNode, render, version };","map":{"version":3,"sources":["../src/Compat.tsx"],"names":["a","i","b","keys1","Object","keys2","result","diff","added","removed","changed","name","index","values","hooks","hook","isString","isNumber","providerClass","el","arr2","arr","isArray","flat","otherProps","className","isUndefined","props","defaultProps","createElement","type","_a","key","ref","children","child","nextElement","prevProps","provier","style","decamelize","attributes","events","__extends","isMount","document","_this","e","callback","isDiff","isSVG","element","renderProviders","base","prevAttributes","prevEvents","nextAttributes","nextEvents","diffAttributes","getAttributes","diffEvents","diffStyle","provider","containerNode","findContainerNode","findDOMNode","comp","providers","template","_super","fillProps","nextState","prevState","clearTimeout","$_state","setTimeout","isUpdate","state","executeHooks","container","renderProvider","childProviders","length","childProvider","childrenKeys","p","fillKeys","from","to","childrenProvider","next","createProvider","_","diffProviders","updated","getNextSibiling","isProvider","updateProvider","render","createPortal","_Portal","version"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,SAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AACI,MAAIA,CAAC,KAAL,CAAA,EAAa;AAAE,WAAA,KAAA;AAAe;;AAC9B,OAAK,IAAL,CAAA,IAAA,CAAA,EAAmB;AACf,QAAI,EAAEC,CAAC,IAAP,CAAI,CAAJ,EAAe;AACX,aAAA,IAAA;AACH;AACJ;;AACD,OAAK,IAAL,CAAA,IAAA,CAAA,EAAmB;AACf,QAAID,CAAC,CAADA,CAAC,CAADA,KAASE,CAAC,CAAd,CAAc,CAAd,EAAmB;AACf,aAAA,IAAA;AACH;AACJ;;AACD,SAAA,KAAA;AACH;;AACD,SAAA,UAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AACI,MAAMC,KAAK,GAAGC,MAAM,CAANA,IAAAA,CAAd,CAAcA,CAAd;AACA,MAAMC,KAAK,GAAGD,MAAM,CAANA,IAAAA,CAAd,CAAcA,CAAd;AAEA,MAAME,MAAM,GAAGC,IAAI,CAAA,KAAA,EAAA,KAAA,EAAe,UAAA,GAAA,EAAA;AAAO,WAAA,GAAA;AAAzC,GAAmB,CAAnB;AAEA,MAAMC,KAAK,GAAX,EAAA;AACA,MAAMC,OAAO,GAAb,EAAA;AACA,MAAMC,OAAO,GAAb,EAAA;AAEAJ,EAAAA,MAAM,CAANA,KAAAA,CAAAA,OAAAA,CAAqB,UAAA,KAAA,EAAA;AACjB,QAAMK,IAAI,GAAGN,KAAK,CAAlB,KAAkB,CAAlB;AAEAG,IAAAA,KAAK,CAALA,IAAK,CAALA,GAAcN,CAAC,CAAfM,IAAe,CAAfA;AAHJF,GAAAA;AAKAA,EAAAA,MAAM,CAANA,OAAAA,CAAAA,OAAAA,CAAuB,UAAA,KAAA,EAAA;AACnB,QAAMK,IAAI,GAAGR,KAAK,CAAlB,KAAkB,CAAlB;AAEAM,IAAAA,OAAO,CAAPA,IAAO,CAAPA,GAAgBT,CAAC,CAAjBS,IAAiB,CAAjBA;AAHJH,GAAAA;AAKAA,EAAAA,MAAM,CAANA,UAAAA,CAAAA,OAAAA,CAA0B,UAAA,EAAA,EAAA;QAAEM,KAAAA,GAAAA,EAAAA,CAAAA,CAAAA,C;AACxB,QAAMD,IAAI,GAAGR,KAAK,CAAlB,KAAkB,CAAlB;AACA,QAAMU,MAAM,GAAG,CAACb,CAAC,CAAF,IAAE,CAAF,EAAUE,CAAC,CAA1B,IAA0B,CAAX,CAAf;;AAEA,QAAIF,CAAC,CAADA,IAAC,CAADA,KAAYE,CAAC,CAAjB,IAAiB,CAAjB,EAAyB;AACrBQ,MAAAA,OAAO,CAAPA,IAAO,CAAPA,GAAAA,MAAAA;AACH;AANLJ,GAAAA;AAQA,SAAO;AACHE,IAAAA,KAAK,EADF,KAAA;AAEHC,IAAAA,OAAO,EAFJ,OAAA;AAGHC,IAAAA,OAAO,EAAA;AAHJ,GAAP;AAKH;;AACD,SAAA,YAAA,CAAA,KAAA,EAAA;AACII,EAAAA,KAAK,CAALA,OAAAA,CAAc,UAAA,IAAA,EAAA;AACVC,IAAAA,IAAI;AADRD,GAAAA;AAGH;;AACD,SAAA,QAAA,CAAA,IAAA,EAAA;AACI,MAAIF,KAAK,GAAT,CAAA;AAEA,SAAO,IAAI,CAAJ,GAAA,CAAS,UAAA,GAAA,EAAA;AAAO,WAAA,GAAG,IAAH,IAAA,GAAc,YAAU,EAAxB,KAAA,GAAoC,KAApC,GAAA;AAAvB,GAAO,CAAP;AACH;;AACD,SAAA,cAAA,CAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,SAAA,EAAA;AACI,MAAII,QAAQ,CAARA,EAAQ,CAARA,IAAgBC,QAAQ,CAA5B,EAA4B,CAA5B,EAAkC;AAC9B,WAAO,IAAA,YAAA,CAAiB,UAAjB,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,SAAA,EAAA,IAAA,EAAP,EAAO,CAAP;AACH;;AACD,MAAMC,aAAa,GACb,OAAOC,EAAE,CAAT,IAAA,KAAA,QAAA,GAAA,eAAA,GAEIA,EAAE,CAAFA,IAAAA,CAAAA,SAAAA,CAAAA,MAAAA,GAAAA,iBAAAA,GAHV,gBAAA;AAOA,SAAO,IAAA,aAAA,CACHA,EAAE,CADC,IAAA,EAAA,GAAA,EAAA,KAAA,EAAA,SAAA,EAKHA,EAAE,CALC,GAAA,EAMHA,EAAE,CANN,KAAO,CAAP;AAQH;;AACD,SAAA,IAAA,CAAA,GAAA,EAAA;AACI,MAAIC,IAAI,GAAR,EAAA;AAEAC,EAAAA,GAAG,CAAHA,OAAAA,CAAY,UAAA,EAAA,EAAA;AACRD,IAAAA,IAAI,GAAGA,IAAI,CAAJA,MAAAA,CAAYE,OAAO,CAAPA,EAAO,CAAPA,GAAcC,IAAI,CAAlBD,EAAkB,CAAlBA,GAAnBF,EAAOA,CAAPA;AADJC,GAAAA;AAIA,SAAA,IAAA;AACH;;AACD,SAAA,aAAA,CAAA,KAAA,EAAA;AACY,MAAA,SAAA,GAAA,KAAA,CAAA,SAAA;AAAA,MAAWG,UAAAA,GAAAA,MAAAA,CAAAA,KAAAA,EAAAA,CAAX,WAAWA,CAAAA,CAAX;;AAER,MAAIC,SAAS,IAAb,IAAA,EAAuB;AACnBD,IAAAA,UAAU,CAAVA,KAAAA,GAAAA,SAAAA;AACH;;AACD,SAAOA,UAAU,CAAjB,KAAA;AACA,SAAOA,UAAU,CAAjB,QAAA;AACA,SAAA,UAAA;AACH;;AACD,SAAA,SAAA,CAAA,KAAA,EAAA,YAAA,EAAA;AACI,MAAI,CAAJ,YAAA,EAAmB;AACf,WAAA,KAAA;AACH;;AACD,OAAK,IAAL,IAAA,IAAA,YAAA,EAAiC;AAC7B,QAAIE,WAAW,CAACC,KAAK,CAArB,IAAqB,CAAN,CAAf,EAA8B;AAC1BA,MAAAA,KAAK,CAALA,IAAK,CAALA,GAAcC,YAAY,CAA1BD,IAA0B,CAA1BA;AACH;AACJ;;AACD,SAAA,KAAA;AACH;;SACeE,a,CACZC,I,EACAH,K,EAAAA;AACA,MAAA,QAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAA;AAAA,IAAA,QAAA,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAEA,MAAMI,EAAAA,GAAAA,KAAAA,IAAN,EAAA;AAAA,MAAQC,GAAAA,GAAAA,EAAAA,CAAR,GAAA;AAAA,MAAaC,GAAAA,GAAAA,EAAAA,CAAb,GAAA;AAAA,MAAkBT,UAAAA,GAAAA,MAAAA,CAAAA,EAAAA,EAAAA,CAAAA,KAAAA,EAAlB,KAAkBA,CAAAA,CAAlB;;AAEA,SAAO;AACHM,IAAAA,IAAI,EADD,IAAA;AAEHE,IAAAA,GAAG,EAFA,GAAA;AAGHC,IAAAA,GAAG,EAHA,GAAA;AAIHN,IAAAA,KAAK,EAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAOH,UAAP,CAAA,EAAOA;AAAYU,MAAAA,QAAQ,EAAE,IAAI,CAAJ,QAAI,CAAJ,CAAA,MAAA,CAAsB,UAAA,KAAA,EAAA;AAAS,eAAA,KAAK,IAAL,IAAA,IAAiBC,KAAK,KAAtB,KAAA;AAA/B,OAAA;AAAtBX,KAAP;AAJF,GAAP;AAMH;;AACD,IAAA,QAAA,G;AAII,WAAA,QAAA,CAAA,IAAA,EAAA,GAAA,EAAA,KAAA,EAAA,SAAA,EAAA,GAAA,EAAA,KAAA,EAAA;AAMW,QAAA,KAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,KAAA,GAAA,EAAA;;;AALA,SAAA,IAAA,GAAA,IAAA;AACA,SAAA,GAAA,GAAA,GAAA;AACA,SAAA,KAAA,GAAA,KAAA;AACA,SAAA,SAAA,GAAA,SAAA;AACA,SAAA,GAAA,GAAA,GAAA;AACA,SAAA,KAAA,GAAA,KAAA;AAPJ,SAAA,UAAA,GAAA,EAAA;AAQF;;;;AAGE,EAAA,OAAA,CAAA,OAAA,GAAP,UAAA,SAAA,EAAA,SAAA,EAAA;AACI,WAAA,IAAA;AADG,GAAA;;AAGA,EAAA,OAAA,CAAA,OAAA,GAAP,UAAA,KAAA,EAAA,WAAA,EAAA,SAAA,EAAA,aAAA,EAAA;AAMI,QACI,KAAA,IAAA,IACG,CAACR,QAAQ,CADZ,WACY,CADZ,IAEG,CAFH,aAAA,IAGG,CAAC,KAAA,OAAA,CAAaoB,WAAW,CAAxB,KAAA,EAJR,SAIQ,CAJR,EAKE;AACE,aAAA,KAAA;AACH;;AACD,SAAA,QAAA,GAAA,WAAA;;AACA,SAAA,SAAA,CAAA,SAAA,EAfJ,CAeI;;;AAEA,QAAMC,SAAS,GAAG,KAAlB,KAAA;;AAEA,QAAI,CAACrB,QAAQ,CAAb,WAAa,CAAb,EAA4B;AACxB,WAAA,KAAA,GAAaoB,WAAW,CAAxB,KAAA;AACA,WAAA,GAAA,GAAWA,WAAW,CAAtB,GAAA;AACH;;AACD,SAAA,OAAA,CAAA,KAAA,EAAoB,KAAA,IAAA,GAAA,SAAA,GAApB,EAAA,EAAA,SAAA;;AACA,WAAA,IAAA;AAxBG,GAAA;;AA0BA,EAAA,OAAA,CAAA,QAAA,GAAP,YAAA;AACI,QAAMH,GAAG,GAAG,KAAZ,GAAA;AACAA,IAAAA,GAAG,IAAIA,GAAG,CAAC,KAAXA,IAAU,CAAVA;AAFG,GAAA;;AAIA,EAAA,OAAA,CAAA,SAAA,GAAP,UAAA,SAAA,EAAA;AACI;AADG,GAAA;;AAGA,EAAA,OAAA,CAAA,QAAA,GAAP,YAAA;AACI,QAAMA,GAAG,GAAG,KAAZ,GAAA;AACAA,IAAAA,GAAG,IAAIA,GAAG,CAAC,KAAXA,IAAU,CAAVA;AAFG,GAAA;;AAIA,EAAA,OAAA,CAAA,QAAA,GAAP,YAAA;AACI,QAAMA,GAAG,GAAG,KAAZ,GAAA;AACAA,IAAAA,GAAG,IAAIA,GAAG,CAAVA,IAAU,CAAVA;AAFG,GAAA;;AAIX,SAAA,QAAA;AA1DA,C,EAAA;;AA2DA,SAAA,cAAA,CAAA,MAAA,EAAA,MAAA,EAAA,EAAA,EAAA;AACU,MAAA,EAAA,GAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA;AAAA,MAAEzB,KAAAA,GAAAA,EAAAA,CAAF,KAAA;AAAA,MAASC,OAAAA,GAAAA,EAAAA,CAAT,OAAA;AAAA,MAAkBC,OAAAA,GAAAA,EAAAA,CAAlB,OAAA;;AACN,OAAK,IAAL,IAAA,IAAA,KAAA,EAA0B;AACtBS,IAAAA,EAAE,CAAFA,YAAAA,CAAAA,IAAAA,EAAsBX,KAAK,CAA3BW,IAA2B,CAA3BA;AACH;;AACD,OAAK,IAAL,IAAA,IAAA,OAAA,EAA4B;AACxBA,IAAAA,EAAE,CAAFA,YAAAA,CAAAA,IAAAA,EAAsBT,OAAO,CAAPA,IAAO,CAAPA,CAAtBS,CAAsBT,CAAtBS;AACH;;AACD,OAAK,IAAL,IAAA,IAAA,OAAA,EAA4B;AACxBA,IAAAA,EAAE,CAAFA,eAAAA,CAAAA,IAAAA;AACH;AACJ;;AACD,SAAA,UAAA,CAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA;AAKU,MAAA,EAAA,GAAA,UAAA,CAAA,OAAA,EAAA,OAAA,CAAA;AAAA,MAAEX,KAAAA,GAAAA,EAAAA,CAAF,KAAA;AAAA,MAASC,OAAAA,GAAAA,EAAAA,CAAT,OAAA;AAAA,MAAkBC,OAAAA,GAAAA,EAAAA,CAAlB,OAAA;;AAEN,OAAK,IAAL,IAAA,IAAA,OAAA,EAA4B;AACxB4B,IAAAA,OAAO,CAAPA,mBAAAA,CAAAA,IAAAA;AACH;;AACD,OAAK,IAAL,IAAA,IAAA,KAAA,EAA0B;AACtBA,IAAAA,OAAO,CAAPA,gBAAAA,CAAAA,IAAAA,EAA+B9B,KAAK,CAApC8B,IAAoC,CAApCA;AACH;;AACD,OAAK,IAAL,IAAA,IAAA,OAAA,EAA4B;AACxBA,IAAAA,OAAO,CAAPA,mBAAAA,CAAAA,IAAAA;AACAA,IAAAA,OAAO,CAAPA,gBAAAA,CAAAA,IAAAA,EAA+B5B,OAAO,CAAPA,IAAO,CAAPA,CAA/B4B,CAA+B5B,CAA/B4B;AACH;;AACD,OAAK,IAAL,IAAA,IAAA,OAAA,EAA4B;AACxBA,IAAAA,OAAO,CAAPA,mBAAAA,CAAAA,IAAAA;AACH;AACJ;;AACD,SAAA,SAAA,CAAA,MAAA,EAAA,MAAA,EAAA,EAAA,EAAA;AACI,MAAMC,KAAK,GAAGpB,EAAE,CAAhB,KAAA;;AACM,MAAA,EAAA,GAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA;AAAA,MAAEX,KAAAA,GAAAA,EAAAA,CAAF,KAAA;AAAA,MAASC,OAAAA,GAAAA,EAAAA,CAAT,OAAA;AAAA,MAAkBC,OAAAA,GAAAA,EAAAA,CAAlB,OAAA;;AAEN,OAAK,IAAL,UAAA,IAAA,KAAA,EAAgC;AAC5B,QAAMC,IAAI,GAAG6B,UAAU,CAAA,UAAA,EAAvB,GAAuB,CAAvB;;AAEA,QAAID,KAAK,CAAT,WAAA,EAAuB;AACnBA,MAAAA,KAAK,CAALA,WAAAA,CAAAA,IAAAA,EAAwB/B,KAAK,CAA7B+B,UAA6B,CAA7BA;AADJ,KAAA,MAEO;AACHA,MAAAA,KAAK,CAALA,IAAK,CAALA,GAAc/B,KAAK,CAAnB+B,UAAmB,CAAnBA;AACH;AACJ;;AACD,OAAK,IAAL,UAAA,IAAA,OAAA,EAAkC;AAC9B,QAAM5B,IAAI,GAAG6B,UAAU,CAAA,UAAA,EAAvB,GAAuB,CAAvB;;AAEA,QAAID,KAAK,CAAT,WAAA,EAAuB;AACnBA,MAAAA,KAAK,CAALA,WAAAA,CAAAA,IAAAA,EAAwB7B,OAAO,CAAPA,UAAO,CAAPA,CAAxB6B,CAAwB7B,CAAxB6B;AADJ,KAAA,MAEO;AACHA,MAAAA,KAAK,CAALA,IAAK,CAALA,GAAc7B,OAAO,CAAPA,UAAO,CAAPA,CAAd6B,CAAc7B,CAAd6B;AACH;AACJ;;AACD,OAAK,IAAL,UAAA,IAAA,OAAA,EAAkC;AAC9B,QAAM5B,IAAI,GAAG6B,UAAU,CAAA,UAAA,EAAvB,GAAuB,CAAvB;;AAEA,QAAID,KAAK,CAAT,cAAA,EAA0B;AACtBA,MAAAA,KAAK,CAALA,cAAAA,CAAAA,IAAAA;AADJ,KAAA,MAEO;AACHA,MAAAA,KAAK,CAALA,IAAK,CAALA,GAAAA,EAAAA;AACH;AACJ;AACJ;;AACD,SAAA,UAAA,CAAA,KAAA,EAAA;AACI,MAAME,UAAU,GAAhB,EAAA;AACA,MAAMC,MAAM,GAAZ,EAAA;;AAEA,OAAK,IAAL,IAAA,IAAA,KAAA,EAA0B;AACtB,QAAI/B,IAAI,CAAJA,OAAAA,CAAAA,IAAAA,MAAJ,CAAA,EAA8B;AAC1B+B,MAAAA,MAAM,CAAC/B,IAAI,CAAJA,OAAAA,CAAAA,IAAAA,EAAAA,EAAAA,EAAP+B,WAAO/B,EAAD,CAAN+B,GAA+Cf,KAAK,CAApDe,IAAoD,CAApDA;AADJ,KAAA,MAEO;AACHD,MAAAA,UAAU,CAAVA,IAAU,CAAVA,GAAmBd,KAAK,CAAxBc,IAAwB,CAAxBA;AACH;AACJ;;AACD,SAAO;AACHA,IAAAA,UAAU,EADP,UAAA;AAEHC,IAAAA,MAAM,EAAA;AAFH,GAAP;AAIH;;AACD,IAAA,YAAA,G;AAA2BC,EAAAA,SAAAA,CAAAA,YAAAA,EAAAA,MAAAA,CAAAA;;AAA3B,WAAA,YAAA,GAAA;;AAmBC;;;;AAlBU,EAAA,OAAA,CAAA,OAAA,GAAP,UAAA,KAAA,EAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACI,QAAMC,OAAO,GAAG,CAAC,KAAjB,IAAA;;AAEA,QAAA,OAAA,EAAa;AACT,WAAA,IAAA,GAAYC,QAAQ,CAARA,cAAAA,CAAwB,KAAA,IAAA,CAAA,OAAA,CAAA,OAAA,EAApC,EAAoC,CAAxBA,CAAZ;AACH;;AACD/B,IAAAA,KAAK,CAALA,IAAAA,CAAW,YAAA;AACP,UAAA,OAAA,EAAa;AACTgC,QAAAA,KAAI,CAAJA,QAAAA;AADJ,OAAA,MAEO;AACHA,QAAAA,KAAI,CAAJA,QAAAA;AACH;AALLhC,KAAAA;AAOA,WAAA,IAAA;AAbG,GAAA;;AAeA,EAAA,OAAA,CAAA,QAAA,GAAP,YAAA;AACI,SAAA,IAAA,CAAA,UAAA,CAAA,WAAA,CAAiC,KAAjC,IAAA;AADG,GAAA;;AAGX,SAAA,YAAA;AAnBA,C,CAAA,Q,CAAA;;AAoBA,IAAA,eAAA,G;AAA8B6B,EAAAA,SAAAA,CAAAA,eAAAA,EAAAA,MAAAA,CAAAA;;AAA9B,WAAA,eAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AACWG,IAAAA,KAAAA,CAAAA,MAAAA,GAAAA,EAAAA;AACAA,IAAAA,KAAAA,CAAAA,MAAAA,GAAAA,KAAAA;;AAoGV;;;;AAlGU,EAAA,OAAA,CAAA,gBAAA,GAAP,UAAA,IAAA,EAAA,QAAA,EAAA;AACI,QAAMJ,MAAM,GAAG,KAAf,MAAA;;AAEAA,IAAAA,MAAM,CAANA,IAAM,CAANA,GAAe,UAAA,CAAA,EAAA;AACXK,MAAAA,CAAC,CAADA,WAAAA,GAAAA,CAAAA;AACAC,MAAAA,QAAQ,CAARA,CAAQ,CAARA;AAFJN,KAAAA;;AAIA,SAAA,IAAA,CAAA,gBAAA,CAAA,IAAA,EAAiCA,MAAM,CAAvC,IAAuC,CAAvC;AAPG,GAAA;;AASA,EAAA,OAAA,CAAA,mBAAA,GAAP,UAAA,IAAA,EAAA;AACI,QAAMA,MAAM,GAAG,KAAf,MAAA;AAEA,SAAA,IAAA,CAAA,mBAAA,CAAA,IAAA,EAAoCA,MAAM,CAA1C,IAA0C,CAA1C;AAEA,WAAOA,MAAM,CAAb,IAAa,CAAb;AALG,GAAA;;AAOA,EAAA,OAAA,CAAA,OAAA,GAAP,UAAA,SAAA,EAAA;AACI,WAAOO,MAAM,CAAC,KAAD,KAAA,EAAb,SAAa,CAAb;AADG,GAAA;;AAGA,EAAA,OAAA,CAAA,OAAA,GAAP,UAAA,KAAA,EAAA,SAAA,EAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACI,QAAML,OAAO,GAAG,CAAC,KAAjB,IAAA;;AAEA,QAAA,OAAA,EAAa;AACT,UAAMM,KAAK,GAAG,KAAd,OAAc,EAAd;;AAEA,WAAA,MAAA,GAAA,KAAA;AAEA,UAAIC,OAAO,GAAG,KAAA,KAAA,CAAd,eAAA;;AAEA,UAAI,CAAJ,OAAA,EAAc;AACV,YAAMrB,IAAI,GAAG,KAAb,IAAA;;AACA,YAAA,KAAA,EAAW;AACPqB,UAAAA,OAAO,GAAGN,QAAQ,CAARA,eAAAA,CAAAA,4BAAAA,EAAVM,IAAUN,CAAVM;AADJ,SAAA,MAEO;AACHA,UAAAA,OAAO,GAAGN,QAAQ,CAARA,aAAAA,CAAVM,IAAUN,CAAVM;AACH;AACJ;;AACD,WAAA,IAAA,GAAA,OAAA;AACH;;AACDC,IAAAA,eAAe,CAAA,IAAA,EAAO,KAAP,UAAA,EAAwB,KAAA,KAAA,CAAxB,QAAA,EAAA,KAAA,EAAfA,IAAe,CAAfA;AACA,QAAMC,IAAI,GAAG,KAAb,IAAA;;AAEM,QAAA,EAAA,GAAA,UAAA,CAAA,SAAA,CAAA;AAAA,QACFC,cAAAA,GAAAA,EAAAA,CADE,UAAA;AAAA,QAEFC,UAAAA,GAAAA,EAAAA,CAFE,MAAA;;AAIA,QAAA,EAAA,GAAA,UAAA,CAAA,KAAA,KAAA,CAAA;AAAA,QACFC,cAAAA,GAAAA,EAAAA,CADE,UAAA;AAAA,QAEFC,UAAAA,GAAAA,EAAAA,CAFE,MAAA;;AAINC,IAAAA,cAAc,CACVC,aAAa,CADH,cACG,CADH,EAEVA,aAAa,CAFH,cAEG,CAFH,EAAdD,IAAc,CAAdA;AAKAE,IAAAA,UAAU,CAAA,UAAA,EAAA,UAAA,EAAVA,IAAU,CAAVA;AAKAC,IAAAA,SAAS,CACLxB,SAAS,CAATA,KAAAA,IADK,EAAA,EAEL,KAAA,KAAA,CAAA,KAAA,IAFK,EAAA,EAATwB,IAAS,CAATA;AAKA/C,IAAAA,KAAK,CAALA,IAAAA,CAAW,YAAA;AACP,UAAA,OAAA,EAAa;AACTgC,QAAAA,KAAI,CAAJA,QAAAA;AADJ,OAAA,MAEO;AACHA,QAAAA,KAAI,CAAJA,QAAAA;AACH;AALLhC,KAAAA;AAOA,WAAA,IAAA;AArDG,GAAA;;AAuDA,EAAA,OAAA,CAAA,QAAA,GAAP,YAAA;AACI,QAAM4B,MAAM,GAAG,KAAf,MAAA;AACA,QAAMW,IAAI,GAAG,KAAb,IAAA;;AAEA,SAAK,IAAL,IAAA,IAAA,MAAA,EAA2B;AACvBA,MAAAA,IAAI,CAAJA,mBAAAA,CAAAA,IAAAA,EAA+BX,MAAM,CAArCW,IAAqC,CAArCA;AACH;;AACD,SAAA,UAAA,CAAA,OAAA,CAAwB,UAAA,QAAA,EAAA;AACpBS,MAAAA,QAAQ,CAARA,QAAAA;AADJ,KAAA;;AAGA,SAAA,MAAA,GAAA,EAAA;;AAEA,QAAI,CAAC,KAAA,KAAA,CAAL,eAAA,EAAiC;AAC7BT,MAAAA,IAAI,CAAJA,UAAAA,CAAAA,WAAAA,CAAAA,IAAAA;AACH;AAdE,GAAA;;AAgBC,EAAA,OAAA,CAAA,OAAA,GAAR,YAAA;AACI,QAAI,KAAA,MAAA,IAAe,KAAA,IAAA,KAAnB,KAAA,EAAwC;AACpC,aAAA,IAAA;AACH;;AACD,QAAMU,aAAa,GAAGC,iBAAiB,CAAC,KAAxC,SAAuC,CAAvC;AAEA,WAAOD,aAAa,IAAI,qBAAxB,aAAA;AANI,GAAA;;AAQZ,SAAA,eAAA;AAtGA,C,CAAA,Q,CAAA;;AAuGA,SAAA,iBAAA,CAAA,QAAA,EAAA;AACI,MAAI,CAAJ,QAAA,EAAe;AACX,WAAA,IAAA;AACH;;AACD,MAAMV,IAAI,GAAGS,QAAQ,CAArB,IAAA;;AACA,MAAIT,IAAI,YAAR,IAAA,EAA0B;AACtB,WAAA,IAAA;AACH;;AACD,SAAOW,iBAAiB,CAACF,QAAQ,CAAjC,SAAwB,CAAxB;AACH;;SACeG,W,CAAYC,I,EAAAA;AACxB,MAAI,CAAJ,IAAA,EAAW;AACP,WAAA,IAAA;AACH;;AACD,MAAIA,IAAI,YAAR,IAAA,EAA0B;AACtB,WAAA,IAAA;AACH;;AACD,MAAMC,SAAS,GAAGD,IAAI,CAAJA,UAAAA,CAAlB,UAAA;;AACA,MAAI,CAACC,SAAS,CAAd,MAAA,EAAuB;AACnB,WAAA,IAAA;AACH;;AACD,SAAOF,WAAW,CAACE,SAAS,CAATA,CAAS,CAATA,CAAnB,IAAkB,CAAlB;AACH;;AACD,IAAA,gBAAA,G;AAA+BxB,EAAAA,SAAAA,CAAAA,gBAAAA,EAAAA,MAAAA,CAAAA;;AAA/B,WAAA,gBAAA,GAAA;;AAYC;;;;AAXU,EAAA,OAAA,CAAA,OAAA,GAAP,UAAA,KAAA,EAAA;AACI,QAAMyB,QAAQ,GAAG,KAAA,IAAA,CAAU,KAA3B,KAAiB,CAAjB;AAEAhB,IAAAA,eAAe,CAAA,IAAA,EAAO,KAAP,UAAA,EAAwBgB,QAAQ,GAAG,CAAH,QAAG,CAAH,GAAhC,EAAA,EAAfhB,KAAe,CAAfA;AACA,WAAA,IAAA;AAJG,GAAA;;AAMA,EAAA,OAAA,CAAA,QAAA,GAAP,YAAA;AACI,SAAA,UAAA,CAAA,OAAA,CAAwB,UAAA,QAAA,EAAA;AACpBU,MAAAA,QAAQ,CAARA,QAAAA;AADJ,KAAA;AADG,GAAA;;AAKX,SAAA,gBAAA;AAZA,C,CAAA,Q,CAAA;;AAaA,IAAA,iBAAA,G;AAAgCnB,EAAAA,SAAAA,CAAAA,iBAAAA,EAAAA,MAAAA,CAAAA;;AAC5B,WAAA,iBAAA,CAAA,IAAA,EAAA;AAAA,QAAA,KAAA,GACI0B,MAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAAA,WAAAA,EAAAA,WAAAA,EAAAA,CAAAA,EAAAA,IAAAA,KADJ,IAAA;;AAEIvB,IAAAA,KAAI,CAAJA,IAAAA,GAAAA,IAAAA;;AACH;;;;AACM,EAAA,OAAA,CAAA,OAAA,GAAP,YAAA;AACI,WAAA,IAAA;AADG,GAAA;;AAGA,EAAA,OAAA,CAAA,QAAA,GAAP,YAAA;AACI;AADG,GAAA;;AAGX,SAAA,iBAAA;AAXA,C,CAAA,Q,CAAA;;AAYA,IAAA,iBAAA,G;AAAgCH,EAAAA,SAAAA,CAAAA,iBAAAA,EAAAA,MAAAA,CAAAA;;AAC5B,WAAA,iBAAA,CAAA,IAAA,EAAA,GAAA,EAAA,KAAA,EAAA,SAAA,EAAA,GAAA,EAAA,KAAA,EAAA;AAMI,QAAA,KAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,KAAA,GAAA,EAAA;;;WAEA0B,MAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAAA,GAAAA,EAAAA,KAAAA,EAAAA,SAAAA,EAAAA,GAAAA,EAAwCC,SAAS,CAAA,KAAA,EAAQxC,IAAI,CAA7DuC,YAAiD,CAAjDA,KAAAA,I;AACH;;;;AACM,EAAA,OAAA,CAAA,OAAA,GAAP,UAAA,SAAA,EAAA,SAAA,EAAA;AACI,WAAO,KAAA,IAAA,CAAA,qBAAA,CACHC,SAAS,CAAA,SAAA,EAAY,KAAA,IAAA,CADlB,YACM,CADN,EAEHC,SAAS,IAAI,KAAA,IAAA,CAFjB,KAAO,CAAP;AADG,GAAA;;AAMA,EAAA,OAAA,CAAA,OAAA,GAAP,UAAA,KAAA,EAAA,SAAA,EAAA,SAAA,EAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACI,SAAA,KAAA,GAAaD,SAAS,CAAC,KAAD,KAAA,EAAa,KAAA,IAAA,CAAnC,YAAsB,CAAtB;AACA,QAAM1B,OAAO,GAAG,CAAC,KAAjB,IAAA;;AAEA,QAAA,OAAA,EAAa;AACT,WAAA,IAAA,GAAY,IAAI,KAAJ,IAAA,CAAc,KAA1B,KAAY,CAAZ;AACA,WAAA,IAAA,CAAA,UAAA,GAAA,IAAA;AAFJ,KAAA,MAGO;AACH,WAAA,IAAA,CAAA,KAAA,GAAkB,KAAlB,KAAA;AACH;;AACD,QAAMS,IAAI,GAAG,KAAb,IAAA;AACA,QAAMmB,SAAS,GAAGnB,IAAI,CAAtB,KAAA;AACA,QAAMe,QAAQ,GAAGf,IAAI,CAArB,MAAiBA,EAAjB;;AAEA,QAAIe,QAAQ,IAAIA,QAAQ,CAApBA,KAAAA,IAA8B,CAACA,QAAQ,CAARA,KAAAA,CAAAA,QAAAA,CAAnC,MAAA,EAAmE;AAC/DA,MAAAA,QAAQ,CAARA,KAAAA,CAAAA,QAAAA,GAA0B,KAAA,KAAA,CAA1BA,QAAAA;AACH;;AACDhB,IAAAA,eAAe,CAAA,IAAA,EAEX,KAFW,UAAA,EAGXgB,QAAQ,GAAG,CAAH,QAAG,CAAH,GAHG,EAAA,EAAA,KAAA,EAAA,SAAA,EAAfhB,IAAe,CAAfA;AAQAtC,IAAAA,KAAK,CAALA,IAAAA,CAAW,YAAA;AACP,UAAA,OAAA,EAAa;AACTgC,QAAAA,KAAI,CAAJA,QAAAA;;AACAO,QAAAA,IAAI,CAAJA,iBAAAA;AAFJ,OAAA,MAGO;AACHP,QAAAA,KAAI,CAAJA,QAAAA;;AACAO,QAAAA,IAAI,CAAJA,kBAAAA,CAAAA,SAAAA,EAAAA,SAAAA;AACH;AAPLvC,KAAAA;AAzBG,GAAA;;AAmCA,EAAA,OAAA,CAAA,SAAA,GAAP,UAAA,SAAA,EAAA;AACI,QAAI,CAAJ,SAAA,EAAgB;AACZ;AACH;;AACD,QAAMuC,IAAI,GAAG,KAAb,IAAA;AACAA,IAAAA,IAAI,CAAJA,KAAAA,GAAAA,SAAAA;AALG,GAAA;;AAOA,EAAA,OAAA,CAAA,QAAA,GAAP,YAAA;AACI,SAAA,UAAA,CAAA,OAAA,CAAwB,UAAA,QAAA,EAAA;AACpBS,MAAAA,QAAQ,CAARA,QAAAA;AADJ,KAAA;;AAGAW,IAAAA,YAAY,CAAC,KAAA,IAAA,CAAbA,OAAY,CAAZA;AACA,SAAA,IAAA,CAAA,oBAAA;AALG,GAAA;;AAOX,SAAA,iBAAA;AAlEA,C,CAAA,Q,CAAA;;;AA0EI,WAAA,SAAA,CAAA,KAAA,EAAA;AAAmB,QAAA,KAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,KAAA,GAAA,EAAA;;;AAAA,SAAA,KAAA,GAAA,KAAA;AALZ,SAAA,KAAA,GAAA,EAAA;AAEA,SAAA,OAAA,GAAA,CAAA;AACA,SAAA,OAAA,GAAA,EAAA;AAEyC;;;;AACzC,EAAA,OAAA,CAAA,qBAAA,GAAP,UAAA,KAAA,EAAA,KAAA,EAAA;AACI,WAAA,IAAA;AADG,GAAA;;AAGA,EAAA,OAAA,CAAA,MAAA,GAAP,YAAA;AACI,WAAA,IAAA;AADG,GAAA;;AAGA,EAAA,OAAA,CAAA,QAAA,GAAP,UAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACI,QAAI,CAAC,KAAL,OAAA,EAAmB;AACf,WAAA,OAAA,GAAA,EAAA;AACH;;AACDA,IAAAA,YAAY,CAAC,KAAbA,OAAY,CAAZA;AAEA,SAAA,OAAA,GAAA,CAAA;AACA,SAAA,OAAA,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAmB,KAAKC,OAAxB,CAAA,EAAA,KAAA,CAAA;;AAEA,QAAI,CAAJ,aAAA,EAAoB;AAChB,WAAA,OAAA,GAAeC,UAAU,CAAC,YAAA;AACtB7B,QAAAA,KAAI,CAAJA,OAAAA,GAAAA,CAAAA;;AACAA,QAAAA,KAAI,CAAJA,UAAAA,CAAAA,QAAAA,EAAAA,aAAAA;AAFJ,OAAyB,CAAzB;AADJ,KAAA,MAKO;AACH,WAAA,UAAA,CAAA,QAAA,EAAA,aAAA;AACH;;AACD;AAjBG,GAAA;;AAmBA,EAAA,OAAA,CAAA,WAAA,GAAP,UAAA,QAAA,EAAA;AACI,SAAA,QAAA,CAAA,EAAA,EAAA,QAAA,EAAA,IAAA;AADG,GAAA;;AAGA,EAAA,OAAA,CAAA,iBAAA,GAAP,YAAA,CAAO,CAAA;;AACA,EAAA,OAAA,CAAA,kBAAA,GAAP,UAAA,SAAA,EAAA,SAAA,EAAA,CAAO,CAAA;;AACA,EAAA,OAAA,CAAA,oBAAA,GAAP,YAAA,CAAO,CAAA;;AACC,EAAA,OAAA,CAAA,UAAA,GAAR,UAAA,QAAA,EAAA,aAAA,EAAA;AACI,QAAMhC,KAAK,GAAX,EAAA;AACA,QAAMgD,QAAQ,GAAG,KAAjB,UAAA;AACA,QAAMc,QAAQ,GAAGxB,eAAe,CAC5BU,QAAQ,CADoB,SAAA,EAE5B,CAF4B,QAE5B,CAF4B,EAG5B,CAACA,QAAQ,CAHmB,QAG5B,CAH4B,EAAA,KAAA,EAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAKvB,KAAKe,KALkB,CAAA,EAKR,KALQ,OAAA,CAAA,EAAhC,aAAgC,CAAhC;;AAQA,QAAA,QAAA,EAAc;AACV,UAAA,QAAA,EAAc;AACV/D,QAAAA,KAAK,CAALA,IAAAA,CAAAA,QAAAA;AACH;;AACDgE,MAAAA,YAAY,CAAZA,KAAY,CAAZA;AACH;AAhBG,GAAA;;AAkBZ,SAAA,SAAA;AAAC,C;;;AACkCnC,EAAAA,SAAAA,CAAAA,aAAAA,EAAAA,MAAAA,CAAAA;;AAAnC,WAAA,aAAA,GAAA;;AAIC;;;;AAHU,EAAA,OAAA,CAAA,qBAAA,GAAP,UAAA,KAAA,EAAA,KAAA,EAAA;AACI,WAAOM,MAAM,CAAC,KAAD,KAAA,EAANA,KAAM,CAANA,IAA6BA,MAAM,CAAC,KAAD,KAAA,EAA1C,KAA0C,CAA1C;AADG,GAAA;;AAGX,SAAA,aAAA;AAJA,C,CAAmCN,S;;AAKnC,IAAA,OAAA,G;AAAsBA,EAAAA,SAAAA,CAAAA,OAAAA,EAAAA,MAAAA,CAAAA;;AAAtB,WAAA,OAAA,GAAA;;AAoBC;;;;AAlBU,EAAA,OAAA,CAAA,iBAAA,GAAP,YAAA;AACU,QAAA,EAAA,GAAA,KAAA,KAAA;AAAA,QAAEQ,OAAAA,GAAAA,EAAAA,CAAF,OAAA;AAAA,QAAW4B,SAAAA,GAAAA,EAAAA,CAAX,SAAA;AAEN,SAAA,eAAA,GAAuB,IAAA,iBAAA,CAAvB,SAAuB,CAAvB;AAEAC,IAAAA,cAAc,CAAA,OAAA,EAAA,SAAA,EAAqB,KAAnCA,eAAc,CAAdA;AALG,GAAA;;AAOA,EAAA,OAAA,CAAA,kBAAA,GAAP,YAAA;AACU,QAAA,EAAA,GAAA,KAAA,KAAA;AAAA,QAAE7B,OAAAA,GAAAA,EAAAA,CAAF,OAAA;AAAA,QAAW4B,SAAAA,GAAAA,EAAAA,CAAX,SAAA;AAENC,IAAAA,cAAc,CAAA,OAAA,EAAA,SAAA,EAAqB,KAAnCA,eAAc,CAAdA;AAHG,GAAA;;AAKA,EAAA,OAAA,CAAA,oBAAA,GAAP,YAAA;AACY,QAAA,SAAA,GAAA,KAAA,KAAA,CAAA,SAAA;AAERA,IAAAA,cAAc,CAAA,IAAA,EAAA,SAAA,EAAkB,KAAhCA,eAAc,CAAdA;AACA,SAAA,eAAA,GAAA,IAAA;AAJG,GAAA;;AAMX,SAAA,OAAA;AApBA,C,CAAA,a,CAAA;;AAqBA,SAAA,cAAA,CAAA,QAAA,EAAA,QAAA,EAAA,SAAA,EAAA;AAKI,MAAMlE,KAAK,GAAX,EAAA;AACAsC,EAAAA,eAAe,CAAA,QAAA,EAEXU,QAAQ,CAFG,UAAA,EAAA,QAAA,EAAA,KAAA,EAAfV,SAAe,CAAfA;AAOA0B,EAAAA,YAAY,CAAZA,KAAY,CAAZA;AACH;;AACD,SAAA,eAAA,CAAA,QAAA,EAAA,aAAA,EAAA;AAII,MAAMG,cAAc,GAAGnB,QAAQ,CAA/B,UAAA;AACA,MAAMoB,MAAM,GAAGD,cAAc,CAA7B,MAAA;;AAEA,OAAK,IAAIhF,CAAC,GAAGkF,aAAa,CAAbA,KAAAA,GAAb,CAAA,EAAsClF,CAAC,GAAvC,MAAA,EAAkD,EAAlD,CAAA,EAAuD;AACnD,QAAMkB,EAAE,GAAG8C,WAAW,CAACgB,cAAc,CAAdA,CAAc,CAAdA,CAAvB,IAAsB,CAAtB;;AAEA,QAAA,EAAA,EAAQ;AACJ,aAAA,EAAA;AACH;AACJ;;AACD,SAAA,IAAA;AACH;;AACD,SAAA,aAAA,CAAA,iBAAA,EAAA,SAAA,EAAA,QAAA,EAAA;AAKI,MAAMG,YAAY,GAAG,QAAQ,CAAR,GAAA,CAAa,UAAA,CAAA,EAAA;AAAK,WAAA,QAAQ,CAAR,CAAQ,CAAR,GAAA,IAAA,GAAqBC,CAAC,CAAtB,GAAA;AAAvC,GAAqB,CAArB;AACA,MAAMlF,KAAK,GAAGmF,QAAQ,CAAC,SAAS,CAAT,GAAA,CAAc,UAAA,CAAA,EAAA;AAAK,WAAA,CAAC,CAAD,GAAA;AAA1C,GAAuB,CAAD,CAAtB;AACA,MAAMjF,KAAK,GAAGiF,QAAQ,CAAtB,YAAsB,CAAtB;AACA,MAAMhF,MAAM,GAAGC,IAAI,CAAA,KAAA,EAAA,KAAA,EAAe,UAAA,GAAA,EAAA;AAAO,WAAA,GAAA;AAAzC,GAAmB,CAAnB;AAEAD,EAAAA,MAAM,CAANA,OAAAA,CAAAA,OAAAA,CAAuB,UAAA,KAAA,EAAA;AACnB6D,IAAAA,SAAS,CAATA,MAAAA,CAAAA,KAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,QAAAA;AADJ7D,GAAAA;AAGAA,EAAAA,MAAM,CAANA,OAAAA,CAAAA,OAAAA,CAAuB,UAAA,EAAA,EAAA;QAAEiF,IAAAA,GAAAA,EAAAA,CAAAA,CAAAA,C;QAAMC,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,C;AAC3B,QAAMC,gBAAgB,GAAGtB,SAAS,CAATA,MAAAA,CAAAA,IAAAA,EAAAA,CAAAA,EAAzB,CAAyBA,CAAzB;AAEAA,IAAAA,SAAS,CAATA,MAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,gBAAAA;AAEA,QAAMhD,EAAE,GAAG8C,WAAW,CAACwB,gBAAgB,CAAvC,IAAsB,CAAtB;AACA,QAAMC,IAAI,GAAGzB,WAAW,CAACE,SAAS,CAACqB,EAAE,GAAZrB,CAAS,CAATA,IAAqBA,SAAS,CAACqB,EAAE,GAAZrB,CAAS,CAATA,CAA9C,IAAwB,CAAxB;;AAEA,QAAA,EAAA,EAAQ;AACJhD,MAAAA,EAAE,CAAFA,UAAAA,CAAAA,YAAAA,CAAAA,EAAAA,EAAAA,IAAAA;AACH;AAVLb,GAAAA;AAYAA,EAAAA,MAAM,CAANA,KAAAA,CAAAA,OAAAA,CAAqB,UAAA,KAAA,EAAA;AACjB6D,IAAAA,SAAS,CAATA,MAAAA,CAAAA,KAAAA,EAAAA,CAAAA,EAA2BwB,cAAc,CAACzD,QAAQ,CAAT,KAAS,CAAT,EAAkBkD,YAAY,CAA9B,KAA8B,CAA9B,EAAA,KAAA,EAAzCjB,iBAAyC,CAAzCA;AADJ7D,GAAAA;AAGA,MAAMI,OAAO,GAAG,MAAM,CAAN,UAAA,CAAA,MAAA,CAAyB,UAAA,EAAA,EAAA;QAAEkF,CAAAA,GAAAA,EAAAA,CAAAA,CAAAA,C;QAAGJ,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,C;AAC1C,QAAMrE,EAAE,GAAGe,QAAQ,CAAnB,EAAmB,CAAnB;AACA,QAAMiD,aAAa,GAAGhB,SAAS,CAA/B,EAA+B,CAA/B;AACA,QAAMrC,IAAI,GAAGd,QAAQ,CAARA,EAAQ,CAARA,GAAe,UAAfA,EAAAA,GAA8BG,EAAE,CAA7C,IAAA;;AAEA,QAAIW,IAAI,KAAKqD,aAAa,CAA1B,IAAA,EAAiC;AAC7BA,MAAAA,aAAa,CAAbA,QAAAA;;AACAhB,MAAAA,SAAS,CAATA,MAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAwBwB,cAAc,CAAA,EAAA,EAAKP,YAAY,CAAjB,EAAiB,CAAjB,EAAA,EAAA,EAAtCjB,iBAAsC,CAAtCA;AACA,aAAA,IAAA;AACH;;AACDgB,IAAAA,aAAa,CAAbA,KAAAA,GAAAA,EAAAA;AACA,WAAA,KAAA;AAXJ,GAAgB,CAAhB;AAcA,SAAA,cAAA,CACO7E,MAAM,CAACE,KADd,EAEO,OAAO,CAAP,GAAA,CAAY,UAAA,EAAA,EAAA;QAAEoF,CAAAA,GAAAA,EAAAA,CAAAA,CAAAA,C;QAAGJ,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,C;AAAQ,WAAA,EAAA;AAFhC,GAEO,CAFP,CAAA;AAIH;;AACD,SAAA,eAAA,CAAA,iBAAA,EAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,SAAA,EAAA,aAAA,EAAA;AAQI,MAAMlF,MAAM,GAAGuF,aAAa,CAAA,iBAAA,EAAA,SAAA,EAA5B,QAA4B,CAA5B;AACA,MAAMC,OAAO,GAAG,SAAS,CAAT,MAAA,CAAiB,UAAA,aAAA,EAAA,CAAA,EAAA;AAC7B,WAAOX,aAAa,CAAbA,OAAAA,CAAAA,YAAAA,EAAoCjD,QAAQ,CAA5CiD,CAA4C,CAA5CA,EAAAA,SAAAA,EAAP,aAAOA,CAAP;AADJ,GAAgB,CAAhB;AAGA,MAAMpB,aAAa,GAAGC,iBAAiB,CAAvC,iBAAuC,CAAvC;;AAEA,MAAA,aAAA,EAAmB;AACf1D,IAAAA,MAAM,CAANA,OAAAA,GAAAA,OAAAA,CAAyB,UAAA,KAAA,EAAA;AACrB,UAAM6E,aAAa,GAAGhB,SAAS,CAA/B,KAA+B,CAA/B;AACA,UAAMhD,EAAE,GAAG8C,WAAW,CAACkB,aAAa,CAApC,IAAsB,CAAtB;;AAEA,UAAI,CAAJ,EAAA,EAAS;AACL;AACH;;AACD,UAAIpB,aAAa,KAAbA,EAAAA,IAAwB,CAAC5C,EAAE,CAA/B,UAAA,EAA4C;AACxC,YAAMiB,WAAW,GAAG2D,eAAe,CAAA,iBAAA,EAAnC,aAAmC,CAAnC;AACAhC,QAAAA,aAAa,CAAbA,YAAAA,CAAAA,EAAAA,EAAAA,WAAAA;AACH;AAVLzD,KAAAA;AAYH;;AACD,SAAOwF,OAAO,CAAPA,MAAAA,GAAP,CAAA;AACH;;AACD,SAAA,cAAA,CAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA;AAGI,MAAA,QAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAsBf,SAAiB,CAAvC,gBAAA;;;AAEA,MAAMiB,UAAU,GAAG,CAAC,CAApB,QAAA;;AAEA,MAAI,CAAJ,QAAA,EAAe;AACXlC,IAAAA,QAAQ,GAAG,IAAA,iBAAA,CAAXA,SAAW,CAAXA;AACH;;AACDmC,EAAAA,cAAc,CAAA,QAAA,EAAW9C,OAAO,GAAG,CAAH,OAAG,CAAH,GAAhC8C,EAAc,CAAdA;;AAEA,MAAI,CAAJ,UAAA,EAAiB;AACZlB,IAAAA,SAAiB,CAAjBA,gBAAAA,GAAAA,QAAAA;AACJ;;AACD,SAAA,QAAA;AACH;;SACemB,M,CAAO/C,O,EAAc4B,S,EAAoB/B,Q,EAAAA;AACrD,MAAMc,QAAQ,GAAIiB,SAAiB,CAAnC,gBAAA;;AACA,MAAI5B,OAAO,IAAI,CAAf,QAAA,EAA0B;AACtB4B,IAAAA,SAAS,CAATA,SAAAA,GAAAA,EAAAA;AACH;;AACDC,EAAAA,cAAc,CAAA,OAAA,EAAA,SAAA,EAAdA,QAAc,CAAdA;AACAhC,EAAAA,QAAQ,IAAIA,QAAZA,EAAAA;AACH;;SAEemD,Y,CAAahF,E,EAAS4D,S,EAAAA;AAClC,SAAOlD,aAAAA,CAACuE,OAADvE,EAACuE;AAAQjD,IAAAA,OAAO,EAAEhC,EAAjBiF;AAAqBrB,IAAAA,SAAS,EAAEA;AAAhCqB,GAADvE,CAAP;AACH;;IAEYwE,OAAO,GAAG,c","sourcesContent":["import { diff } from \"@egjs/list-differ\";\nimport { IObject, isUndefined, isString, isArray, decamelize, isNumber } from \"@daybrush/utils\";\nimport { CompatElement } from \"./types\";\n\nfunction isDiff(a: object, b: object) {\n    if (a === b) { return false; }\n    for (const i in a) {\n        if (!(i in b)) {\n            return true;\n        }\n    }\n    for (const i in b) {\n        if (a[i] !== b[i]) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction diffObject(a: object, b: object) {\n    const keys1 = Object.keys(a);\n    const keys2 = Object.keys(b);\n\n    const result = diff(keys1, keys2, key => key);\n\n    const added: IObject<any> = {};\n    const removed: IObject<any> = {};\n    const changed: IObject<any> = {};\n\n    result.added.forEach(index => {\n        const name = keys2[index];\n\n        added[name] = b[name];\n    });\n    result.removed.forEach(index => {\n        const name = keys1[index];\n\n        removed[name] = a[name];\n    });\n    result.maintained.forEach(([index]) => {\n        const name = keys1[index];\n        const values = [a[name], b[name]];\n\n        if (a[name] !== b[name]) {\n            changed[name] = values;\n        }\n    });\n    return {\n        added,\n        removed,\n        changed,\n    };\n}\nfunction executeHooks(hooks: Function[]) {\n    hooks.forEach(hook => {\n        hook();\n    });\n}\nfunction fillKeys(keys: any[]): string[] {\n    let index = 0;\n\n    return keys.map(key => key == null ? `$compat${++index}` : `${key}`);\n}\nfunction createProvider(el: CompatElement | string, key: string, index: number, container?: Provider) {\n    if (isString(el) || isNumber(el)) {\n        return new TextProvider(`text_${el}`, key, index, container, null, {});\n    }\n    const providerClass\n        = typeof el.type === \"string\"\n            ? ElementProvider\n            : el.type.prototype.render\n                ? ComponentProvider\n                : FunctionProvider;\n\n    return new providerClass(\n        el.type,\n        key,\n        index,\n        container,\n        el.ref,\n        el.props,\n    );\n}\nfunction flat(arr: any[]) {\n    let arr2 = [];\n\n    arr.forEach(el => {\n        arr2 = arr2.concat(isArray(el) ? flat(el) : el);\n    });\n\n    return arr2;\n}\nfunction getAttributes(props: IObject<any>) {\n    const { className, ...otherProps } = props;\n\n    if (className != null) {\n        otherProps.class = className;\n    }\n    delete otherProps.style;\n    delete otherProps.children;\n    return otherProps;\n}\nfunction fillProps(props: IObject<any>, defaultProps: IObject<any>) {\n    if (!defaultProps) {\n        return props;\n    }\n    for (const name in defaultProps) {\n        if (isUndefined(props[name])) {\n            props[name] = defaultProps[name];\n        }\n    }\n    return props;\n}\nexport function createElement(\n    type: any,\n    props: any,\n    ...children: any[]\n): CompatElement {\n    const { key, ref, ...otherProps } = props || {};\n\n    return {\n        type,\n        key,\n        ref,\n        props: { ...otherProps, children: flat(children).filter(child => child != null && child !== false) },\n    };\n}\nabstract class Provider<T extends Element | Component | Node = Element | Component | Node> {\n    public original: CompatElement | string;\n    public base: T;\n    public _providers: Array<Provider<any>> = [];\n    constructor(\n        public type: any,\n        public key: string,\n        public index: number,\n        public container?: Provider | null,\n        public ref?: (e: Element | Component | Node) => any,\n        public props: IObject<any> = {},\n    ) { }\n    public abstract _render(hooks: Function[], prevProps: any, nextState: any);\n    public abstract _unmount();\n    public _should(nextProps: any, nextState: any): boolean {\n        return true;\n    }\n    public _update(\n        hooks: Function[],\n        nextElement: CompatElement | string,\n        nextState?: any,\n        isForceUpdate?: boolean,\n    ) {\n        if (\n            this.base\n            && !isString(nextElement)\n            && !isForceUpdate\n            && !this._should(nextElement.props, nextState)\n        ) {\n            return false;\n        }\n        this.original = nextElement;\n        this._setState(nextState);\n        // render\n        const prevProps = this.props;\n\n        if (!isString(nextElement)) {\n            this.props = nextElement.props;\n            this.ref = nextElement.ref;\n        }\n        this._render(hooks, this.base ? prevProps : {}, nextState);\n        return true;\n    }\n    public _mounted() {\n        const ref = this.ref;\n        ref && ref(this.base);\n    }\n    public _setState(nextstate: IObject<any>) {\n        return;\n    }\n    public _updated() {\n        const ref = this.ref;\n        ref && ref(this.base);\n    }\n    public _destroy() {\n        const ref = this.ref;\n        ref && ref(null);\n    }\n}\nfunction diffAttributes(attrs1: IObject<any>, attrs2: IObject<any>, el: Element) {\n    const { added, removed, changed } = diffObject(attrs1, attrs2);\n    for (const name in added) {\n        el.setAttribute(name, added[name]);\n    }\n    for (const name in changed) {\n        el.setAttribute(name, changed[name][1]);\n    }\n    for (const name in removed) {\n        el.removeAttribute(name);\n    }\n}\nfunction diffEvents(\n    events1: IObject<any>,\n    events2: IObject<any>,\n    provier: ElementProvider,\n) {\n    const { added, removed, changed } = diffObject(events1, events2);\n\n    for (const name in removed) {\n        provier.removeEventListener(name);\n    }\n    for (const name in added) {\n        provier.addEventListener(name, added[name]);\n    }\n    for (const name in changed) {\n        provier.removeEventListener(name);\n        provier.addEventListener(name, changed[name][1]);\n    }\n    for (const name in removed) {\n        provier.removeEventListener(name);\n    }\n}\nfunction diffStyle(style1: IObject<any>, style2: IObject<any>, el: HTMLElement | SVGElement) {\n    const style = el.style;\n    const { added, removed, changed } = diffObject(style1, style2);\n\n    for (const beforeName in added) {\n        const name = decamelize(beforeName, \"-\");\n\n        if (style.setProperty) {\n            style.setProperty(name, added[beforeName]);\n        } else {\n            style[name] = added[beforeName];\n        }\n    }\n    for (const beforeName in changed) {\n        const name = decamelize(beforeName, \"-\");\n\n        if (style.setProperty) {\n            style.setProperty(name, changed[beforeName][1]);\n        } else {\n            style[name] = changed[beforeName][1];\n        }\n    }\n    for (const beforeName in removed) {\n        const name = decamelize(beforeName, \"-\");\n\n        if (style.removeProperty) {\n            style.removeProperty(name);\n        } else {\n            style[name] = \"\";\n        }\n    }\n}\nfunction splitProps(props: IObject<any>) {\n    const attributes = {};\n    const events = {};\n\n    for (const name in props) {\n        if (name.indexOf(\"on\") === 0) {\n            events[name.replace(\"on\", \"\").toLowerCase()] = props[name];\n        } else {\n            attributes[name] = props[name];\n        }\n    }\n    return {\n        attributes,\n        events,\n    };\n}\nclass TextProvider extends Provider<Node> {\n    public _render(hooks: Function[]) {\n        const isMount = !this.base;\n\n        if (isMount) {\n            this.base = document.createTextNode(this.type.replace(\"text_\", \"\"));\n        }\n        hooks.push(() => {\n            if (isMount) {\n                this._mounted();\n            } else {\n                this._updated();\n            }\n        });\n        return true;\n    }\n    public _unmount() {\n        this.base.parentNode.removeChild(this.base);\n    }\n}\nclass ElementProvider extends Provider<Element> {\n    public events: IObject<Function> = {};\n    public _isSVG = false;\n\n    public addEventListener(name, callback) {\n        const events = this.events;\n\n        events[name] = e => {\n            e.nativeEvent = e;\n            callback(e);\n        };\n        this.base.addEventListener(name, events[name] as any);\n    }\n    public removeEventListener(name) {\n        const events = this.events;\n\n        this.base.removeEventListener(name, events[name] as any);\n\n        delete events[name];\n    }\n    public _should(nextProps: any) {\n        return isDiff(this.props, nextProps);\n    }\n    public _render(hooks: Function[], prevProps: any) {\n        const isMount = !this.base;\n\n        if (isMount) {\n            const isSVG = this._hasSVG();\n\n            this._isSVG = isSVG;\n\n            let element = this.props.portalContainer;\n\n            if (!element) {\n                const type = this.type;\n                if (isSVG) {\n                    element = document.createElementNS(\"http://www.w3.org/2000/svg\", type);\n                } else {\n                    element = document.createElement(type);\n                }\n            }\n            this.base = element;\n        }\n        renderProviders(this, this._providers, this.props.children, hooks, null);\n        const base = this.base;\n\n        const {\n            attributes: prevAttributes,\n            events: prevEvents,\n        } = splitProps(prevProps);\n        const {\n            attributes: nextAttributes,\n            events: nextEvents,\n        } = splitProps(this.props);\n        diffAttributes(\n            getAttributes(prevAttributes),\n            getAttributes(nextAttributes),\n            base,\n        );\n        diffEvents(\n            prevEvents,\n            nextEvents,\n            this,\n        );\n        diffStyle(\n            prevProps.style || {},\n            this.props.style || {},\n            base as HTMLElement,\n        );\n        hooks.push(() => {\n            if (isMount) {\n                this._mounted();\n            } else {\n                this._updated();\n            }\n        });\n        return true;\n    }\n    public _unmount() {\n        const events = this.events;\n        const base = this.base;\n\n        for (const name in events) {\n            base.removeEventListener(name, events[name] as any);\n        }\n        this._providers.forEach(provider => {\n            provider._unmount();\n        });\n        this.events = {};\n\n        if (!this.props.portalContainer) {\n            base.parentNode.removeChild(base);\n        }\n    }\n    private _hasSVG() {\n        if (this._isSVG || this.type === \"svg\") {\n            return true;\n        }\n        const containerNode = findContainerNode(this.container);\n\n        return containerNode && \"ownerSVGElement\" in containerNode;\n    }\n}\nfunction findContainerNode(provider: Provider): Node | null {\n    if (!provider) {\n        return null;\n    }\n    const base = provider.base;\n    if (base instanceof Node) {\n        return base;\n    }\n    return findContainerNode(provider.container);\n}\nexport function findDOMNode(comp: Component | Node | null): Node | null {\n    if (!comp) {\n        return null;\n    }\n    if (comp instanceof Node) {\n        return comp;\n    }\n    const providers = comp.$_provider._providers;\n    if (!providers.length) {\n        return null;\n    }\n    return findDOMNode(providers[0].base);\n}\nclass FunctionProvider extends Provider<Component> {\n    public _render(hooks: Function[]) {\n        const template = this.type(this.props);\n\n        renderProviders(this, this._providers, template ? [template] : [], hooks);\n        return true;\n    }\n    public _unmount() {\n        this._providers.forEach(provider => {\n            provider._unmount();\n        });\n    }\n}\nclass ContainerProvider extends Provider<any> {\n    constructor(base: Element) {\n        super(\"container\", \"container\", 0, null);\n        this.base = base;\n    }\n    public _render() {\n        return true;\n    }\n    public _unmount() {\n        return;\n    }\n}\nclass ComponentProvider extends Provider<Component> {\n    constructor(\n        type: typeof Component,\n        key: string,\n        index: number,\n        container: Provider | null,\n        ref: (e: Element | Component | Node) => any,\n        props: IObject<any> = {},\n    ) {\n        super(type, key, index, container, ref, fillProps(props, type.defaultProps));\n    }\n    public _should(nextProps: any, nextState: any) {\n        return this.base.shouldComponentUpdate(\n            fillProps(nextProps, this.type.defaultProps),\n            nextState || this.base.state,\n        );\n    }\n    public _render(hooks: Function[], prevProps, nextState) {\n        this.props = fillProps(this.props, this.type.defaultProps);\n        const isMount = !this.base;\n\n        if (isMount) {\n            this.base = new this.type(this.props);\n            this.base.$_provider = this;\n        } else {\n            this.base.props = this.props;\n        }\n        const base = this.base;\n        const prevState = base.state;\n        const template = base.render();\n\n        if (template && template.props && !template.props.children.length) {\n            template.props.children = this.props.children;\n        }\n        renderProviders(\n            this,\n            this._providers,\n            template ? [template] : [],\n            hooks,\n            nextState,\n            null,\n        );\n        hooks.push(() => {\n            if (isMount) {\n                this._mounted();\n                base.componentDidMount();\n            } else {\n                this._updated();\n                base.componentDidUpdate(prevProps, prevState);\n            }\n        });\n    }\n    public _setState(nextState?: IObject<any>) {\n        if (!nextState) {\n            return;\n        }\n        const base = this.base;\n        base.state = nextState;\n    }\n    public _unmount() {\n        this._providers.forEach(provider => {\n            provider._unmount();\n        });\n        clearTimeout(this.base.$_timer);\n        this.base.componentWillUnmount();\n    }\n}\nexport class Component {\n    public static defaultProps?: IObject<any>;\n    public state: IObject<any> = {};\n    public $_provider: ComponentProvider;\n    public $_timer = 0;\n    public $_state: IObject<any> = {};\n\n    constructor(public props: IObject<any> = {}) { }\n    public shouldComponentUpdate(props?: any, state?: any): boolean {\n        return true;\n    }\n    public render() {\n        return null;\n    }\n    public setState(state: IObject<any>, callback?: Function, isForceUpdate?: boolean) {\n        if (!this.$_timer) {\n            this.$_state = {};\n        }\n        clearTimeout(this.$_timer);\n\n        this.$_timer = 0;\n        this.$_state = {...this.$_state, ...state};\n\n        if (!isForceUpdate) {\n            this.$_timer = setTimeout(() => {\n                this.$_timer = 0;\n                this.$_setState(callback, isForceUpdate);\n            });\n        } else {\n            this.$_setState(callback, isForceUpdate);\n        }\n        return;\n    }\n    public forceUpdate(callback?: Function) {\n        this.setState({}, callback, true);\n    }\n    public componentDidMount() { }\n    public componentDidUpdate(prevProps, prevState) { }\n    public componentWillUnmount() { }\n    private $_setState(callback?: Function, isForceUpdate?: boolean) {\n        const hooks: Function[] = [];\n        const provider = this.$_provider;\n        const isUpdate = renderProviders(\n            provider.container,\n            [provider],\n            [provider.original],\n            hooks,\n            { ...this.state, ...this.$_state },\n            isForceUpdate,\n        );\n        if (isUpdate) {\n            if (callback) {\n                hooks.push(callback);\n            }\n            executeHooks(hooks);\n        }\n    }\n}\nexport class PureComponent extends Component {\n    public shouldComponentUpdate(props?, state?) {\n        return isDiff(this.props, props) || isDiff(this.state, state);\n    }\n}\nclass _Portal extends PureComponent {\n    public _portalProvider: Provider;\n    public componentDidMount() {\n        const { element, container } = this.props;\n\n        this._portalProvider = new ContainerProvider(container);\n\n        renderProvider(element, container, this._portalProvider);\n    }\n    public componentDidUpdate() {\n        const { element, container } = this.props;\n\n        renderProvider(element, container, this._portalProvider);\n    }\n    public componentWillUnmount() {\n        const { container } = this.props;\n\n        renderProvider(null, container, this._portalProvider);\n        this._portalProvider = null;\n    }\n}\nfunction updateProvider(\n    provider: Provider,\n    children: Array<CompatElement | string>,\n    nextState?: any,\n) {\n    const hooks: Function[] = [];\n    renderProviders(\n        provider,\n        provider._providers,\n        children,\n        hooks,\n        nextState,\n    );\n    executeHooks(hooks);\n}\nfunction getNextSibiling(\n    provider: Provider,\n    childProvider: Provider,\n) {\n    const childProviders = provider._providers;\n    const length = childProviders.length;\n\n    for (let i = childProvider.index + 1; i < length; ++i) {\n        const el = findDOMNode(childProviders[i].base);\n\n        if (el) {\n            return el;\n        }\n    }\n    return null;\n}\nfunction diffProviders(\n    containerProvider: Provider,\n    providers: Provider[],\n    children: Array<CompatElement | string>,\n) {\n    const childrenKeys = children.map(p => isString(p) ? null : p.key);\n    const keys1 = fillKeys(providers.map(p => p.key));\n    const keys2 = fillKeys(childrenKeys);\n    const result = diff(keys1, keys2, key => key);\n\n    result.removed.forEach(index => {\n        providers.splice(index, 1)[0]._unmount();\n    });\n    result.ordered.forEach(([from, to]) => {\n        const childrenProvider = providers.splice(from, 1)[0];\n\n        providers.splice(to, 0, childrenProvider);\n\n        const el = findDOMNode(childrenProvider.base);\n        const next = findDOMNode(providers[to + 1] && providers[to + 1].base);\n\n        if (el) {\n            el.parentNode.insertBefore(el, next);\n        }\n    });\n    result.added.forEach(index => {\n        providers.splice(index, 0, createProvider(children[index], childrenKeys[index], index, containerProvider));\n    });\n    const changed = result.maintained.filter(([_, to]) => {\n        const el = children[to];\n        const childProvider = providers[to];\n        const type = isString(el) ? `text_${el}` : el.type;\n\n        if (type !== childProvider.type) {\n            childProvider._unmount();\n            providers.splice(to, 1, createProvider(el, childrenKeys[to], to, containerProvider));\n            return true;\n        }\n        childProvider.index = to;\n        return false;\n    });\n\n    return [\n        ...result.added,\n        ...changed.map(([_, to]) => to),\n    ];\n}\nfunction renderProviders(\n    containerProvider: Provider | null,\n    providers: Provider[],\n    children: Array<CompatElement | string>,\n    updatedHooks: Function[],\n    nextState?: any,\n    isForceUpdate?: boolean,\n) {\n    const result = diffProviders(containerProvider, providers, children);\n    const updated = providers.filter((childProvider, i) => {\n        return childProvider._update(updatedHooks, children[i], nextState, isForceUpdate);\n    });\n    const containerNode = findContainerNode(containerProvider);\n\n    if (containerNode) {\n        result.reverse().forEach(index => {\n            const childProvider = providers[index];\n            const el = findDOMNode(childProvider.base);\n\n            if (!el) {\n                return;\n            }\n            if (containerNode !== el && !el.parentNode) {\n                const nextElement = getNextSibiling(containerProvider, childProvider);\n                containerNode.insertBefore(el, nextElement);\n            }\n        });\n    }\n    return updated.length > 0;\n}\nfunction renderProvider(\n    element: any,\n    container: Element,\n    provider: Provider = (container as any).__REACT_COMPAT__,\n) {\n    const isProvider = !!provider;\n\n    if (!provider) {\n        provider = new ContainerProvider(container);\n    }\n    updateProvider(provider, element ? [element] : []);\n\n    if (!isProvider) {\n        (container as any).__REACT_COMPAT__ = provider;\n    }\n    return provider;\n}\nexport function render(element: any, container: Element, callback?: Function) {\n    const provider = (container as any).__REACT_COMPAT__;\n    if (element && !provider) {\n        container.innerHTML = \"\";\n    }\n    renderProvider(element, container, provider);\n    callback && callback();\n}\n\nexport function createPortal(el: any, container: Element) {\n    return <_Portal element={el} container={container} />;\n}\n\nexport const version = \"simple-1.1.0\"\n"]},"metadata":{},"sourceType":"module"}