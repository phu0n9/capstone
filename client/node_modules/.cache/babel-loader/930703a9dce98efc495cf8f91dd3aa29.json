{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\capstone\\\\schaeffler\\\\client\\\\src\\\\CarStatus.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport ReactSpeedometer from \"react-d3-speedometer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Status() {\n  _s();\n\n  const [socket, setSocket] = useState();\n  const [velocity, setVelocity] = useState(0);\n  const [location, setLocation] = useState(undefined);\n  const [connection, setConnection] = useState('offline');\n  const heroku = 'https://schaeffler.herokuapp.com/';\n  useEffect(() => {\n    const s = io('http://localhost:5000/');\n    setSocket(s);\n    return () => {\n      s.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    if (socket == null) return;\n\n    const handler = delta => {\n      setVelocity(delta['velocity']);\n      setLocation(delta['current location']);\n    };\n\n    socket.on('receive-raspberry', handler);\n    return () => {\n      socket.off('receive-raspberry', handler);\n    };\n  }, [socket, velocity, location]);\n  useEffect(() => {\n    if (socket == null) return;\n\n    const handler = delta => {\n      setConnection(delta);\n    };\n\n    socket.on('car-online', handler);\n    return () => {\n      socket.off('car-online', handler);\n    };\n  }, [socket, connection]);\n  useEffect(() => {\n    if (socket == null) return;\n\n    const handler = delta => {\n      setConnection(delta);\n    };\n\n    socket.on('car-offline', handler);\n    return () => {\n      socket.off('car-offline', handler);\n    };\n  }, [socket, connection]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"status-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"car.png\",\n        alt: \"car-img\",\n        className: \"img-oval\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"offline-dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Car is \", connection]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current location: \", location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactSpeedometer, {\n      width: 150,\n      height: 100,\n      maxValue: 50,\n      value: velocity,\n      needleColor: \"red\",\n      startColor: \"green\",\n      segments: 5,\n      endColor: \"blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Status, \"42mjasDaCdj7l4aCoxjSQpR9ywA=\");\n\n_c = Status;\n\nvar _c;\n\n$RefreshReg$(_c, \"Status\");","map":{"version":3,"sources":["C:/Users/Admin/Downloads/capstone/schaeffler/client/src/CarStatus.js"],"names":["React","useEffect","useState","io","ReactSpeedometer","Status","socket","setSocket","velocity","setVelocity","location","setLocation","undefined","connection","setConnection","heroku","s","disconnect","handler","delta","on","off"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react'\r\nimport {io} from 'socket.io-client'\r\nimport ReactSpeedometer from \"react-d3-speedometer\"\r\n\r\nexport default function Status() {\r\n    const [socket,setSocket] = useState()\r\n    const [velocity,setVelocity] = useState(0)\r\n    const [location,setLocation] = useState(undefined)\r\n    const [connection,setConnection] = useState('offline')\r\n    const heroku = 'https://schaeffler.herokuapp.com/'\r\n\r\n    useEffect(() => {\r\n        const s = io('http://localhost:5000/')\r\n        setSocket(s)\r\n        return () =>{\r\n            s.disconnect()  \r\n        }\r\n    }, [])  \r\n\r\n    useEffect(() =>{\r\n        if(socket == null) return\r\n\r\n        const handler = (delta) =>{\r\n            setVelocity(delta['velocity'])\r\n            setLocation(delta['current location'])\r\n        }\r\n        socket.on('receive-raspberry',handler)\r\n        return () =>{\r\n            socket.off('receive-raspberry',handler)\r\n        }\r\n    },[socket,velocity,location])\r\n\r\n    useEffect(() =>{\r\n        if (socket == null) return \r\n\r\n        const handler = (delta) =>{\r\n            setConnection(delta)\r\n        }\r\n        socket.on('car-online',handler)\r\n        return () =>{\r\n            socket.off('car-online',handler)\r\n        }\r\n    },[socket,connection])\r\n\r\n    useEffect(() =>{\r\n        if (socket == null) return \r\n\r\n        const handler = (delta) =>{\r\n            setConnection(delta)\r\n        }\r\n        socket.on('car-offline',handler)\r\n        return () =>{\r\n            socket.off('car-offline',handler)\r\n        }\r\n    },[socket,connection])\r\n\r\n    return (\r\n        <div className=\"status-wrapper\">\r\n            <div className=\"img-container\">\r\n                <img src=\"car.png\" alt=\"car-img\" className=\"img-oval\"/>\r\n                <div class=\"offline-dot\"/>\r\n            </div>\r\n            <p>Car is {connection}</p>\r\n            <p>Current location: {location}</p>\r\n            <ReactSpeedometer\r\n            width={150}\r\n            height={100}\r\n            maxValue={50}\r\n            value={velocity}\r\n            needleColor=\"red\"\r\n            startColor=\"green\"\r\n            segments={5}\r\n            endColor=\"blue\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}