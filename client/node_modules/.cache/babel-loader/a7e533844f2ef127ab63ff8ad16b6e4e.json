{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nexport default function InfinityScroll(pageNumber) {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [inventory, setInventory] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n  const [end, setEnd] = useState(false); // const [dataLength,setDataLength] = useState()\n\n  useEffect(() => {\n    setLoading(true);\n    setError(false);\n    axios({\n      method: 'GET',\n      url: 'http://localhost:5000/inventory',\n      params: {\n        page: pageNumber\n      }\n    }).then(res => {\n      setInventory(prevInventory => {\n        return [...new Set([...prevInventory, ...res.data.map(i => i)])];\n      });\n      setHasMore(res.data.length > 0);\n      setLoading(false);\n      setEnd(res.data.length < pageNumber);\n      setDataLength(res.data.length);\n      console.log(res.data);\n    }).catch(e => {\n      setError(true);\n    });\n  }, [pageNumber]);\n  return {\n    loading,\n    hasMore,\n    error,\n    inventory,\n    end,\n    dataLength\n  };\n}\n\n_s(InfinityScroll, \"8XKUpw6Uv25DElra9XAZ83C9C8g=\");\n\n_c = InfinityScroll;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfinityScroll\");","map":{"version":3,"sources":["C:/Users/Admin/Downloads/capstone/schaeffler/client/src/InfinityScroll.js"],"names":["React","useEffect","useState","axios","InfinityScroll","pageNumber","loading","setLoading","error","setError","inventory","setInventory","hasMore","setHasMore","end","setEnd","method","url","params","page","then","res","prevInventory","Set","data","map","i","length","setDataLength","console","log","catch","e","dataLength"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,cAAT,CAAwBC,UAAxB,EAAoC;AAAA;;AAC/C,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBL,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM,CAACM,KAAD,EAAOC,QAAP,IAAmBP,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAM,CAACQ,SAAD,EAAWC,YAAX,IAA2BT,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACU,OAAD,EAASC,UAAT,IAAuBX,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM,CAACY,GAAD,EAAKC,MAAL,IAAeb,QAAQ,CAAC,KAAD,CAA7B,CAL+C,CAM/C;;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACXM,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,QAAQ,CAAC,KAAD,CAAR;AAEAN,IAAAA,KAAK,CAAC;AACFa,MAAAA,MAAM,EAAC,KADL;AAEFC,MAAAA,GAAG,EAAE,iCAFH;AAGFC,MAAAA,MAAM,EAAC;AAACC,QAAAA,IAAI,EAACd;AAAN;AAHL,KAAD,CAAL,CAKCe,IALD,CAKMC,GAAG,IAAI;AACTV,MAAAA,YAAY,CAACW,aAAa,IAAG;AACzB,eAAO,CAAC,GAAG,IAAIC,GAAJ,CAAQ,CAAC,GAAGD,aAAJ,EAAkB,GAAGD,GAAG,CAACG,IAAJ,CAASC,GAAT,CAAaC,CAAC,IAAIA,CAAlB,CAArB,CAAR,CAAJ,CAAP;AACH,OAFW,CAAZ;AAGAb,MAAAA,UAAU,CAACQ,GAAG,CAACG,IAAJ,CAASG,MAAT,GAAkB,CAAnB,CAAV;AACApB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAQ,MAAAA,MAAM,CAACM,GAAG,CAACG,IAAJ,CAASG,MAAT,GAAkBtB,UAAnB,CAAN;AACAuB,MAAAA,aAAa,CAACP,GAAG,CAACG,IAAJ,CAASG,MAAV,CAAb;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYT,GAAG,CAACG,IAAhB;AACH,KAdD,EAeCO,KAfD,CAeOC,CAAC,IAAG;AACPvB,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAjBD;AAkBH,GAtBQ,EAsBP,CAACJ,UAAD,CAtBO,CAAT;AAuBA,SAAO;AAACC,IAAAA,OAAD;AAASM,IAAAA,OAAT;AAAiBJ,IAAAA,KAAjB;AAAuBE,IAAAA,SAAvB;AAAiCI,IAAAA,GAAjC;AAAqCmB,IAAAA;AAArC,GAAP;AACH;;GAhCuB7B,c;;KAAAA,c","sourcesContent":["import React,{useEffect,useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default function InfinityScroll(pageNumber) {\r\n    const [loading,setLoading] = useState(true)\r\n    const [error,setError] = useState(false)\r\n    const [inventory,setInventory] = useState([])\r\n    const [hasMore,setHasMore] = useState(false)\r\n    const [end,setEnd] = useState(false)\r\n    // const [dataLength,setDataLength] = useState()\r\n\r\n    useEffect(() =>{\r\n        setLoading(true)\r\n        setError(false)\r\n\r\n        axios({\r\n            method:'GET',\r\n            url: 'http://localhost:5000/inventory',\r\n            params:{page:pageNumber}\r\n        })\r\n        .then(res => {\r\n            setInventory(prevInventory =>{\r\n                return [...new Set([...prevInventory,...res.data.map(i => i)])]\r\n            })\r\n            setHasMore(res.data.length > 0)\r\n            setLoading(false)\r\n            setEnd(res.data.length < pageNumber)\r\n            setDataLength(res.data.length)\r\n            console.log(res.data)\r\n        })\r\n        .catch(e =>{\r\n            setError(true)\r\n        })\r\n    },[pageNumber])\r\n    return {loading,hasMore,error,inventory,end,dataLength}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}