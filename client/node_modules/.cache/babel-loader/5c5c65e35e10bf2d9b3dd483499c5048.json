{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\capstone\\\\schaeffler\\\\client\\\\src\\\\HomepageRightBody.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Mapping from './Mapping';\nimport ControlBox from './ControlBox';\nimport PictureGallery from './PictureGallery';\nimport Queue from './Components/Queue';\nimport ReactNotification from 'react-notifications-component';\nimport { store } from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\nimport Pusher from 'pusher-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RightBody({\n  setClickGallery,\n  clickGallery,\n  setQueueOnClick,\n  queueOnClick\n}) {\n  _s();\n\n  const [buttonSubmit, setButtonSubmit] = useState(false);\n  const [droneConnection, setDroneConnection] = useState(false);\n  const [carConnection, setCarConnection] = useState(false);\n  const [available, setAvailable] = useState();\n  const [executeonClick, setExecuteOnClick] = useState(false);\n  useEffect(() => {\n    const pusher = new Pusher(process.env.REACT_APP_PUSHER_KEY, {\n      'cluster': process.env.REACT_APP_PUSHER_CLUSTER,\n      forceTLS: true\n    });\n    const messageChannel = pusher.subscribe('droneMessage');\n    messageChannel.bind('send', function (data) {\n      setDroneConnection(JSON.parse(data.droneConnection));\n    });\n    return () => {\n      pusher.unsubscribe(messageChannel);\n      pusher.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    const pusher = new Pusher(process.env.REACT_APP_PUSHER_KEY, {\n      'cluster': process.env.REACT_APP_PUSHER_CLUSTER,\n      forceTLS: true\n    });\n    const messageChannel = pusher.subscribe('carMessage');\n    messageChannel.bind('send', function (data) {\n      setCarConnection(JSON.parse(data.carConnection));\n    });\n    return () => {\n      pusher.unsubscribe(messageChannel);\n      pusher.disconnect();\n    };\n  }, []);\n\n  function getNotification(title, message, messageType, duration, width) {\n    store.addNotification({\n      title: title,\n      message: message,\n      type: messageType,\n      container: \"bottom-right\",\n      insert: \"bottom\",\n      animationIn: [\"animated\", \"fadeIn\"],\n      animationOut: [\"animated\", \"fadeOut\"],\n      dismiss: {\n        duration: duration,\n        onScreen: true\n      },\n      width: width\n    });\n  }\n\n  useEffect(() => {\n    if (buttonSubmit === true && carConnection === false && !droneConnection === false) {\n      getNotification(\"Warning\", \"Device is not online but your search will be saved.\", \"warning\", 5000, 500);\n      setQueueOnClick(true);\n    }\n\n    if (droneConnection && carConnection) {\n      getNotification(\"Device Status\", \"Car and Drone are online\", \"success\", 5000, 400);\n    }\n\n    if (available === false) {\n      getNotification(\"Device Status\", \"Process are being executed. Try again later\", \"danger\", 5000, 400);\n    }\n\n    if (available === true) {\n      getNotification(\"Device Status\", \"Search can be performed now.\", \"success\", 5000, 400);\n    }\n  }, [buttonSubmit, carConnection, droneConnection, setQueueOnClick, available]);\n  useEffect(() => {\n    const pusher = new Pusher(process.env.REACT_APP_PUSHER_KEY, {\n      'cluster': process.env.REACT_APP_PUSHER_CLUSTER,\n      forceTLS: true\n    });\n    const messageChannel = pusher.subscribe('availability');\n    messageChannel.bind('keyword', function (data) {\n      console.log(data);\n      setAvailable(JSON.parse(data));\n    });\n    return () => {\n      pusher.unsubscribe(messageChannel);\n      pusher.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ControlBox, {\n      buttonSubmit: buttonSubmit,\n      setButtonSubmit: setButtonSubmit,\n      droneConnection: droneConnection,\n      carConnection: carConnection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Mapping, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), clickGallery ? /*#__PURE__*/_jsxDEV(PictureGallery, {\n      setClickGallery: setClickGallery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }, this) : \"\", queueOnClick ? /*#__PURE__*/_jsxDEV(Queue, {\n      setQueueOnClick: setQueueOnClick,\n      available: available\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(ReactNotification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RightBody, \"N+dbxXHRet9CKOdc0C7Gi4deKeE=\");\n\n_c = RightBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"RightBody\");","map":{"version":3,"sources":["C:/Users/Admin/Downloads/capstone/schaeffler/client/src/HomepageRightBody.js"],"names":["React","useState","useEffect","Mapping","ControlBox","PictureGallery","Queue","ReactNotification","store","Pusher","RightBody","setClickGallery","clickGallery","setQueueOnClick","queueOnClick","buttonSubmit","setButtonSubmit","droneConnection","setDroneConnection","carConnection","setCarConnection","available","setAvailable","executeonClick","setExecuteOnClick","pusher","process","env","REACT_APP_PUSHER_KEY","REACT_APP_PUSHER_CLUSTER","forceTLS","messageChannel","subscribe","bind","data","JSON","parse","unsubscribe","disconnect","getNotification","title","message","messageType","duration","width","addNotification","type","container","insert","animationIn","animationOut","dismiss","onScreen","console","log"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport Mapping from './Mapping'\r\nimport ControlBox from './ControlBox'\r\nimport PictureGallery from './PictureGallery'\r\nimport Queue from './Components/Queue'\r\nimport ReactNotification from 'react-notifications-component'\r\nimport {store} from 'react-notifications-component'\r\nimport 'react-notifications-component/dist/theme.css'\r\nimport Pusher from 'pusher-js'\r\n\r\nexport default function RightBody({setClickGallery,clickGallery,setQueueOnClick,queueOnClick}) {\r\n    const [buttonSubmit,setButtonSubmit] = useState(false)\r\n    const [droneConnection,setDroneConnection] = useState(false)\r\n    const [carConnection,setCarConnection] = useState(false)\r\n    const [available,setAvailable] = useState()\r\n    const [executeonClick,setExecuteOnClick] = useState(false)\r\n\r\n    useEffect(() =>{\r\n        const pusher = new Pusher(process.env.REACT_APP_PUSHER_KEY,{\r\n            'cluster':process.env.REACT_APP_PUSHER_CLUSTER,\r\n            forceTLS: true,\r\n        })\r\n\r\n        const messageChannel  = pusher.subscribe('droneMessage')\r\n        messageChannel.bind('send',function(data){\r\n            setDroneConnection(JSON.parse(data.droneConnection))\r\n        })\r\n        return () => {\r\n            pusher.unsubscribe(messageChannel)\r\n            pusher.disconnect()\r\n        }\r\n    },[])\r\n\r\n    useEffect(() =>{\r\n        const pusher = new Pusher(process.env.REACT_APP_PUSHER_KEY,{\r\n            'cluster':process.env.REACT_APP_PUSHER_CLUSTER,\r\n            forceTLS: true,\r\n        })\r\n\r\n        const messageChannel  = pusher.subscribe('carMessage')\r\n        messageChannel.bind('send',function(data){\r\n            setCarConnection(JSON.parse(data.carConnection))\r\n        })\r\n\r\n        return () => {\r\n            pusher.unsubscribe(messageChannel)\r\n            pusher.disconnect()\r\n        }\r\n    },[])\r\n\r\n    function getNotification(title,message,messageType,duration,width){\r\n        store.addNotification({\r\n            title:title,\r\n            message:message,\r\n            type: messageType,\r\n            container:\"bottom-right\",\r\n            insert:\"bottom\",\r\n            animationIn:[\"animated\",\"fadeIn\"],\r\n            animationOut:[\"animated\",\"fadeOut\"],\r\n            dismiss: {\r\n                duration: duration,\r\n                onScreen: true\r\n            },\r\n            width:width\r\n        })              \r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(buttonSubmit === true && carConnection === false && !droneConnection === false){\r\n            getNotification(\"Warning\",\"Device is not online but your search will be saved.\",\"warning\",5000,500)\r\n            setQueueOnClick(true)\r\n        }\r\n        if(droneConnection && carConnection){\r\n            getNotification(\"Device Status\",\"Car and Drone are online\",\"success\",5000,400)       \r\n        }\r\n        if(available === false){\r\n            getNotification(\"Device Status\",\"Process are being executed. Try again later\",\"danger\",5000,400)       \r\n        }\r\n        if(available === true){\r\n            getNotification(\"Device Status\",\"Search can be performed now.\",\"success\",5000,400)       \r\n        }\r\n    },[buttonSubmit,carConnection,droneConnection,setQueueOnClick,available])\r\n\r\n    useEffect(()=>{\r\n        const pusher = new Pusher(process.env.REACT_APP_PUSHER_KEY,{\r\n            'cluster':process.env.REACT_APP_PUSHER_CLUSTER,\r\n            forceTLS: true,\r\n        })\r\n    \r\n        const messageChannel  = pusher.subscribe('availability')\r\n        messageChannel.bind('keyword',function(data){\r\n            console.log(data)\r\n            setAvailable(JSON.parse(data))\r\n        })\r\n        return () => {\r\n            pusher.unsubscribe(messageChannel)\r\n            pusher.disconnect()\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <ControlBox buttonSubmit={buttonSubmit} setButtonSubmit={setButtonSubmit} droneConnection={droneConnection} carConnection={carConnection}/>\r\n            <Mapping/>\r\n            {clickGallery ? <PictureGallery setClickGallery={setClickGallery}/>: \"\"}\r\n            {queueOnClick ? <Queue setQueueOnClick={setQueueOnClick} available={available}/>: \"\"}\r\n            <ReactNotification/>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}