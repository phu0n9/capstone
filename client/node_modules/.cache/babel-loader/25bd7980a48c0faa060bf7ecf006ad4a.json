{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _intro = _interopRequireDefault(require(\"intro.js\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = require(\"react\");\n\nvar introJsPropTypes = _interopRequireWildcard(require(\"../../helpers/proptypes\"));\n\nvar introJsDefaultProps = _interopRequireWildcard(require(\"../../helpers/defaultProps\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Intro.js Hints Component.\n */\n\n\nvar Hints = /*#__PURE__*/function (_Component) {\n  _inherits(Hints, _Component);\n\n  var _super = _createSuper(Hints);\n  /**\n   * React Props\n   * @type {Object}\n   */\n\n  /**\n   * React Default Props\n   * @type {Object}\n   */\n\n  /**\n   * Creates a new instance of the component.\n   * @class\n   * @param {Object} props - The props of the component.\n   */\n\n\n  function Hints(props) {\n    var _this;\n\n    _classCallCheck(this, Hints);\n\n    _this = _super.call(this, props);\n    _this.introJs = null;\n    _this.isConfigured = false;\n\n    _this.installIntroJs();\n\n    return _this;\n  }\n  /**\n   * Lifecycle: componentDidMount.\n   * We use this event to enable Intro.js hints at mount time if enabled right from the start.\n   */\n\n\n  _createClass(Hints, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.enabled) {\n        this.configureIntroJs();\n        this.renderHints();\n      }\n    }\n    /**\n     * Lifecycle: componentDidUpdate.\n     * @param  {Object} prevProps - The previous props.\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          enabled = _this$props.enabled,\n          hints = _this$props.hints,\n          options = _this$props.options;\n\n      if (!this.isConfigured || prevProps.hints !== hints || prevProps.options !== options) {\n        this.configureIntroJs();\n        this.renderHints();\n      }\n\n      if (prevProps.enabled !== enabled) {\n        this.renderHints();\n      }\n    }\n    /**\n     * Lifecycle: componentWillUnmount.\n     * We use this even to hide the hints when the component is unmounted.\n     */\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.introJs.hideHints();\n    }\n    /**\n     * Installs Intro.js.\n     */\n\n  }, {\n    key: \"installIntroJs\",\n    value: function installIntroJs() {\n      this.introJs = (0, _intro[\"default\"])();\n      var _this$props2 = this.props,\n          onClick = _this$props2.onClick,\n          onClose = _this$props2.onClose;\n\n      if (onClick) {\n        this.introJs.onhintclick(onClick);\n      }\n\n      if (onClose) {\n        this.introJs.onhintclose(onClose);\n      }\n    }\n    /**\n     * Configures Intro.js if not already configured.\n     */\n\n  }, {\n    key: \"configureIntroJs\",\n    value: function configureIntroJs() {\n      var _this$props3 = this.props,\n          options = _this$props3.options,\n          hints = _this$props3.hints; // We need to remove all hints otherwise new hints won't be added.\n\n      this.introJs.removeHints();\n      this.introJs.setOptions(_objectSpread(_objectSpread({}, options), {}, {\n        hints: hints\n      }));\n      this.isConfigured = true;\n    }\n    /**\n     * Renders the Intro.js hints.\n     */\n\n  }, {\n    key: \"renderHints\",\n    value: function renderHints() {\n      var _this$props4 = this.props,\n          enabled = _this$props4.enabled,\n          hints = _this$props4.hints;\n\n      if (enabled && hints.length > 0) {\n        this.introJs.showHints();\n      } else if (!enabled) {\n        this.introJs.hideHints();\n      }\n    }\n    /**\n     * Renders the component.\n     * @return {null} We do not want to render anything.\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return Hints;\n}(_react.Component);\n\nexports[\"default\"] = Hints;\n\n_defineProperty(Hints, \"propTypes\", {\n  enabled: _propTypes[\"default\"].bool,\n  hints: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].shape({\n    element: _propTypes[\"default\"].string.isRequired,\n    hint: _propTypes[\"default\"].string.isRequired,\n    hintPosition: introJsPropTypes.hintPosition\n  })).isRequired,\n  onClick: _propTypes[\"default\"].func,\n  onClose: _propTypes[\"default\"].func,\n  options: introJsPropTypes.options\n});\n\n_defineProperty(Hints, \"defaultProps\", {\n  enabled: false,\n  onClick: null,\n  onClose: null,\n  options: introJsDefaultProps.options\n});","map":null,"metadata":{},"sourceType":"script"}