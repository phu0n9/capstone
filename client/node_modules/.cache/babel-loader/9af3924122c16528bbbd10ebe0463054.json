{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\n\nrequire('dotenv').config();\n\nexport default function PopUp() {\n  _s();\n\n  const [queue, setQueue] = useState([]);\n  const [error, setError] = useState(false);\n  const [landingStatus, setLandingStatus] = useState(\"up\");\n  const [searchStatus, setSearchStatus] = useState(\"available\");\n  const heroku = 'https://schaeffler.herokuapp.com/queue'; // 'http://localhost:5000/queue'\n\n  function getQueue() {\n    setError(false);\n    axios({\n      method: 'GET',\n      url: 'http://localhost:5000/queue'\n    }).then(res => {\n      setQueue(prevInventory => {\n        return [...new Set([...prevInventory, ...res.data.map(i => i)])];\n      });\n    }).catch(e => {\n      setError(true);\n      console.log('Error: ' + e);\n    });\n  }\n\n  useEffect(() => getQueue(), []);\n\n  function fetchChanges() {\n    setError(false);\n    axios({\n      method: 'GET',\n      url: heroku\n    }).then(res => {\n      setQueue(() => {\n        return [...new Set([...'', ...res.data.map(i => i)])];\n      });\n    }).catch(e => {\n      setError(true);\n      console.log('Error: ' + e);\n    });\n  }\n\n  useEffect(() => {\n    const channel = pusher.subscribe('tasks');\n    channel.bind('deleted', function () {\n      fetchChanges();\n    });\n    channel.bind('inserted', function () {\n      fetchChanges();\n    });\n    return () => channel.unbind();\n  }, []);\n  useEffect(() => {\n    const channel = pusher.subscribe('armarker');\n    channel.bind('land', function (data) {\n      setLandingStatus(data.landingStatus);\n    });\n    return () => channel.unbind();\n  }, []);\n  useEffect(() => {\n    const channel = pusher.subscribe('search');\n    channel.bind('keyword', function (data) {\n      setSearchStatus(\"searching\");\n    });\n    return () => channel.unbind();\n  }, []);\n  return {\n    queue,\n    error,\n    landingStatus,\n    searchStatus\n  };\n}\n\n_s(PopUp, \"/upWd/s3SJoFw2Xc6oGaWLoXZ/w=\");\n\n_c = PopUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopUp\");","map":{"version":3,"sources":["C:/Users/Admin/Downloads/capstone/schaeffler/client/src/PopUp.js"],"names":["useState","useEffect","axios","Pusher","require","config","PopUp","queue","setQueue","error","setError","landingStatus","setLandingStatus","searchStatus","setSearchStatus","heroku","getQueue","method","url","then","res","prevInventory","Set","data","map","i","catch","e","console","log","fetchChanges","channel","pusher","subscribe","bind","unbind"],"mappings":"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","sourcesContent":["import {useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport Pusher from 'pusher-js'\r\nrequire('dotenv').config()\r\n\r\nexport default function PopUp() {\r\n\r\n    const [queue,setQueue] = useState([])\r\n    const [error,setError] = useState(false)\r\n    const [landingStatus,setLandingStatus] = useState(\"up\")\r\n    const [searchStatus, setSearchStatus] = useState(\"available\")\r\n    const heroku = 'https://schaeffler.herokuapp.com/queue'\r\n    \r\n    // 'http://localhost:5000/queue'\r\n    function getQueue(){\r\n        setError(false)\r\n        axios({\r\n            method:'GET',\r\n            url: 'http://localhost:5000/queue',\r\n        })\r\n        .then(res => {\r\n            setQueue(prevInventory =>{\r\n                return [...new Set([...prevInventory,...res.data.map(i => i)])]\r\n            })\r\n        })\r\n        .catch(e =>{\r\n            setError(true)\r\n            console.log('Error: '+e)\r\n        })\r\n    }\r\n    useEffect(() => getQueue(),[])\r\n\r\n    function fetchChanges(){\r\n        setError(false)\r\n            axios({\r\n                method:'GET',\r\n                url: heroku,\r\n            })\r\n            .then(res => {\r\n                setQueue(() =>{\r\n                    return [...new Set([...'',...res.data.map(i => i)])]\r\n                })\r\n            })\r\n            .catch(e =>{\r\n                setError(true)\r\n                console.log('Error: '+e)\r\n            })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        const channel = pusher.subscribe('tasks')\r\n        channel.bind('deleted',function(){\r\n            fetchChanges()\r\n        })\r\n        channel.bind('inserted',function(){\r\n            fetchChanges()\r\n        })\r\n        return () => channel.unbind()\r\n    },[])\r\n\r\n    useEffect(() =>{\r\n        const channel = pusher.subscribe('armarker')\r\n        channel.bind('land',function(data){\r\n            setLandingStatus(data.landingStatus)\r\n        })\r\n        return () => channel.unbind()\r\n    },[])\r\n\r\n    useEffect(() =>{\r\n        const channel = pusher.subscribe('search')\r\n        channel.bind('keyword',function(data){\r\n            setSearchStatus(\"searching\")\r\n        })\r\n        return () => channel.unbind()\r\n    },[])\r\n\r\n    return {queue,error,landingStatus,searchStatus}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}