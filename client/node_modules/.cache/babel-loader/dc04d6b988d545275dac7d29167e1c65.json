{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useRef, useEffect } from 'react';\nimport infinityScroll from './InfinityScroll';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nexport default function PictureGallery({\n  setClickPhoto\n}) {\n  _s();\n\n  const observer = useRef();\n  const [pageNumber, setPageNumber] = useState(5);\n  const [keyword, setKeyword] = useState('');\n  const [selection, setSelection] = useState(\"location\");\n  const [enableCalendar, setEnableCalendar] = useState(false);\n  const [value, setCalendar] = useState(new Date());\n  const [buttonType, setButtonType] = useState(false);\n  const [keydown, setKeyDown] = useState(\"\");\n  const [state, setState] = useState(false);\n  const {\n    inventory,\n    hasMore,\n    error,\n    loading,\n    change\n  } = infinityScroll(pageNumber, keyword, selection);\n  const lastInventory = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) setPageNumber(prevInventory => prevInventory + 5);\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n\n  const handleItemSearch = e => {\n    setKeyword(e.target.value);\n  };\n\n  const handleSelection = e => {\n    setSelection(e.target.value);\n  };\n\n  useEffect(() => {\n    if (change) {\n      setKeyword(\"\");\n    }\n  }, [change]);\n  useEffect(() => {\n    switch (selection) {\n      case \"date\":\n        setEnableCalendar(true);\n        setKeyword(value.getFullYear() + '-' + (value.getMonth() + 1) + '-' + value.getDate());\n        setButtonType(true);\n        setState(false);\n        break;\n\n      case \"userId\":\n        setEnableCalendar(false);\n        setButtonType(true);\n\n        if (keyword !== undefined) {\n          setKeyword(localStorage.getItem('userId'));\n        }\n\n        setState(false);\n        break;\n\n      default:\n        if (keyword === localStorage.getItem('userId') || keyword === value.getFullYear() + '-' + (value.getMonth() + 1) + '-' + value.getDate()) {\n          setKeyword(\"\");\n        }\n\n        setEnableCalendar(false);\n        setButtonType(false);\n        setState(true);\n        break;\n    }\n  }, [selection, value, keyword]);\n  useEffect(() => {\n    if (keydown !== \"\" && keyword === \"\") {\n      setPageNumber(5);\n    }\n  }, [keydown, keyword]);\n\n  const handleKeyDown = e => {\n    setKeyDown(e.target.value);\n  };\n\n  return div // <div className=\"grid-item sidebar-wrapper\">\n  //     <div className=\"search-item-bar\">\n  //         {enableCalendar ?\n  //          <Calendar\n  //             className=\"calendar\"\n  //             onChange={setCalendar}\n  //             value={value}\n  //             next2Label=\"\"\n  //             prev2Label=\"\"\n  //         /> : \n  //         <input\n  //             type={buttonType ? \"hidden\": \"search\"}\n  //             placeholder=\"Search existing item\"\n  //             className=\"search-item\"\n  //             onChange={handleItemSearch}\n  //             value ={keyword}\n  //             disabled={buttonType ? \"disabled\": \"\"}\n  //             onKeyDown={handleKeyDown}\n  //         />}\n  //     <p className=\"sort-title\">Sort by:</p>\n  //     <select name=\"sort\" className=\"sort-select\" onChange={handleSelection} value={selection}>\n  //         <option value=\"location\" defaultValue>Location</option>\n  //         <option value=\"userId\">Create By You</option>\n  //         <option value=\"date\">Date</option>\n  //     </select>\n  //     </div>\n  //     {inventory.map((item,index)=>{\n  //         if(inventory.length === index +1){\n  //             return <div className=\"inventory-item\" key={index.toString()}>\n  //                 <div key={(index+1).toString()} ref={lastInventory}>Location: {item.location}</div>\n  //                 <div key={(index+2).toString()}>Create At: {item.createdAt.substring(0,10)}</div>\n  //                 <img key={item.photo} ref={lastInventory} src={`data:image/png;base64,${item.photo}`} alt=\"sideBarPhoto\" onClick={() => setClickPhoto(item.photo)} className=\"img-sideBar\"/>\n  //             </div>\n  //         }\n  //         else{\n  //             return <div className=\"inventory-item\" key={index.toString()}>\n  //                 <div key={(index+1).toString()}>Location: {item.location}</div>\n  //                 <div key={(index+2).toString()}>Create At: {item.createdAt.substring(0,10)}</div>\n  //                 <img key={item.photo} src={`data:image/png;base64,${item.photo}`} alt=\"sideBarPhoto\" onClick={() => setClickPhoto(item.photo)} className=\"img-sideBar\"/>\n  //             </div>\n  //         }\n  //     })}\n  //     {state ? <div>{loading && 'Loading...'}</div> : \"\"}\n  //     <div>{error && 'Error'}</div>\n  // </div>\n  ;\n}\n\n_s(PictureGallery, \"Z1usMNzArw++V8KRvR+pnA6E18o=\");\n\n_c = PictureGallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"PictureGallery\");","map":{"version":3,"sources":["C:/Users/Admin/Downloads/capstone/schaeffler/client/src/PictureGallery.js"],"names":["React","useCallback","useState","useRef","useEffect","infinityScroll","Calendar","PictureGallery","setClickPhoto","observer","pageNumber","setPageNumber","keyword","setKeyword","selection","setSelection","enableCalendar","setEnableCalendar","value","setCalendar","Date","buttonType","setButtonType","keydown","setKeyDown","state","setState","inventory","hasMore","error","loading","change","lastInventory","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevInventory","observe","handleItemSearch","e","target","handleSelection","getFullYear","getMonth","getDate","undefined","localStorage","getItem","handleKeyDown","div"],"mappings":"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","sourcesContent":["import React,{useCallback,useState,useRef,useEffect} from 'react'\r\nimport infinityScroll from './InfinityScroll'\r\nimport Calendar from 'react-calendar'\r\nimport 'react-calendar/dist/Calendar.css'\r\n\r\nexport default function PictureGallery({setClickPhoto}) {\r\n    const observer = useRef()\r\n    const [pageNumber,setPageNumber] = useState(5)\r\n    const [keyword,setKeyword] = useState('')\r\n    const [selection,setSelection] = useState(\"location\")\r\n    const [enableCalendar,setEnableCalendar] = useState(false)\r\n    const [value, setCalendar] = useState(new Date())\r\n    const [buttonType,setButtonType] = useState(false)\r\n    const [keydown,setKeyDown] = useState(\"\")\r\n    const [state,setState] = useState(false)\r\n    \r\n    const {\r\n        inventory,\r\n        hasMore,\r\n        error,\r\n        loading,change\r\n    } = infinityScroll(pageNumber,keyword,selection)\r\n    \r\n\r\n    const lastInventory= useCallback((node) =>{\r\n        if(loading) return\r\n        if(observer.current) observer.current.disconnect()\r\n        observer.current = new IntersectionObserver(entries =>{\r\n            if(entries[0].isIntersecting && hasMore) setPageNumber(prevInventory => prevInventory + 5)\r\n        })\r\n        if(node) observer.current.observe(node)\r\n    },[loading,hasMore])\r\n\r\n    const handleItemSearch = ((e) =>{\r\n        setKeyword(e.target.value)\r\n    })\r\n\r\n    const handleSelection = ((e) =>{\r\n        setSelection(e.target.value)\r\n    })\r\n\r\n    useEffect(() =>{\r\n        if (change){\r\n            setKeyword(\"\")\r\n        }\r\n    },[change])\r\n\r\n    useEffect(()=>{\r\n        \r\n        switch(selection){\r\n            case \"date\":\r\n                setEnableCalendar(true)\r\n                setKeyword(value.getFullYear()+'-' + (value.getMonth()+1) + '-'+value.getDate())\r\n                setButtonType(true) \r\n                setState(false)\r\n                break\r\n            case \"userId\":\r\n                setEnableCalendar(false)\r\n                setButtonType(true)\r\n                if (keyword !== undefined) {\r\n                    setKeyword(localStorage.getItem('userId'))\r\n                }\r\n                setState(false)\r\n                break\r\n            default:\r\n                if(keyword === localStorage.getItem('userId') || keyword === value.getFullYear()+'-' + (value.getMonth()+1) + '-'+value.getDate()) {\r\n                    setKeyword(\"\")\r\n                }\r\n                setEnableCalendar(false)\r\n                setButtonType(false)\r\n                setState(true)\r\n                break\r\n        }\r\n    },[selection,value,keyword])\r\n\r\n    useEffect(() =>{\r\n        if (keydown !== \"\" && keyword === \"\"){\r\n            setPageNumber(5)\r\n        }\r\n    },[keydown,keyword])\r\n\r\n    const handleKeyDown = ((e) =>{\r\n        setKeyDown(e.target.value)\r\n    })\r\n\r\n    return ( \r\n        div\r\n        // <div className=\"grid-item sidebar-wrapper\">\r\n        //     <div className=\"search-item-bar\">\r\n        //         {enableCalendar ?\r\n        //          <Calendar\r\n        //             className=\"calendar\"\r\n        //             onChange={setCalendar}\r\n        //             value={value}\r\n        //             next2Label=\"\"\r\n        //             prev2Label=\"\"\r\n        //         /> : \r\n        //         <input\r\n        //             type={buttonType ? \"hidden\": \"search\"}\r\n        //             placeholder=\"Search existing item\"\r\n        //             className=\"search-item\"\r\n        //             onChange={handleItemSearch}\r\n        //             value ={keyword}\r\n        //             disabled={buttonType ? \"disabled\": \"\"}\r\n        //             onKeyDown={handleKeyDown}\r\n        //         />}\r\n        //     <p className=\"sort-title\">Sort by:</p>\r\n        //     <select name=\"sort\" className=\"sort-select\" onChange={handleSelection} value={selection}>\r\n        //         <option value=\"location\" defaultValue>Location</option>\r\n        //         <option value=\"userId\">Create By You</option>\r\n        //         <option value=\"date\">Date</option>\r\n        //     </select>\r\n        //     </div>\r\n        //     {inventory.map((item,index)=>{\r\n        //         if(inventory.length === index +1){\r\n        //             return <div className=\"inventory-item\" key={index.toString()}>\r\n        //                 <div key={(index+1).toString()} ref={lastInventory}>Location: {item.location}</div>\r\n        //                 <div key={(index+2).toString()}>Create At: {item.createdAt.substring(0,10)}</div>\r\n        //                 <img key={item.photo} ref={lastInventory} src={`data:image/png;base64,${item.photo}`} alt=\"sideBarPhoto\" onClick={() => setClickPhoto(item.photo)} className=\"img-sideBar\"/>\r\n        //             </div>\r\n        //         }\r\n        //         else{\r\n        //             return <div className=\"inventory-item\" key={index.toString()}>\r\n        //                 <div key={(index+1).toString()}>Location: {item.location}</div>\r\n        //                 <div key={(index+2).toString()}>Create At: {item.createdAt.substring(0,10)}</div>\r\n        //                 <img key={item.photo} src={`data:image/png;base64,${item.photo}`} alt=\"sideBarPhoto\" onClick={() => setClickPhoto(item.photo)} className=\"img-sideBar\"/>\r\n        //             </div>\r\n        //         }\r\n        //     })}\r\n        //     {state ? <div>{loading && 'Loading...'}</div> : \"\"}\r\n        //     <div>{error && 'Error'}</div>\r\n        // </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}