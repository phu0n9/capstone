{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\capstone\\\\schaeffler\\\\client\\\\src\\\\Mapping.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Mapping() {\n  _s();\n\n  const canvas = useRef();\n  const imgRef = useRef();\n  const canvasWidth = 1000;\n  const canvasHeight = 900;\n  const racks = 9;\n  const rows = 16;\n  const cellSide = 2;\n\n  function makeArray(d1, d2) {\n    var arr = [];\n\n    for (let i = 0; i < d2; i++) {\n      arr.push(new Array(d1));\n    }\n\n    return arr;\n  } //   useEffect(() => {\n  // context.save()\n  // context.scale(pixelRatio, pixelRatio)\n  // context.fillStyle = \"hsl(0, 0%, 95%)\"\n  // context.fillRect(0, 0, width, height)\n  // context.strokeStyle = \"black\"\n  // context.beginPath()\n  // context.arc(width / 2, height / 2, width / 4, 0, Math.PI * 2)\n  // context.stroke()\n  // context.restore()\n  //   },[])\n  //   const dw = Math.floor(pixelRatio * width)\n  //   const dh = Math.floor(pixelRatio * height)\n  //   const style = { width, height }\n\n\n  const handleOnLoad = () => {\n    const context = canvas.current.getContext(\"2d\");\n    context.drawImage(imgRef.current, 10, 10, imgRef.current.width, imgRef.current.height);\n\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < racks; j++) {\n        let x = j * cellSide;\n        let y = i * cellSide;\n        const cellColor = '#e74c3c';\n        context.strokeStyle = \"#008000\";\n        context.beginPath();\n        context.fillStyle = cellColor;\n        context.fillRect(x, y, cellSide, cellSide);\n        context.stroke();\n      }\n    } // context.font = \"40px Courier\"\n    // context.fillText(\"mapping\", 210, 75)\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mapping\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvas,\n      width: canvasWidth,\n      height: canvasHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: imgRef,\n      src: \"mapping.png\",\n      alt: \"mapping\",\n      className: \"mapping-img\",\n      onLoad: handleOnLoad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Mapping, \"al8xOoonljcUj961N2xaTZAf1ls=\");\n\n_c = Mapping;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mapping\");","map":{"version":3,"sources":["C:/Users/Admin/Downloads/capstone/schaeffler/client/src/Mapping.js"],"names":["React","useRef","useState","useEffect","Mapping","canvas","imgRef","canvasWidth","canvasHeight","racks","rows","cellSide","makeArray","d1","d2","arr","i","push","Array","handleOnLoad","context","current","getContext","drawImage","width","height","j","x","y","cellColor","strokeStyle","beginPath","fillStyle","fillRect","stroke"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,MAAd,EAAqBC,QAArB,EAA8BC,SAA9B,QAA8C,OAA9C;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAE5B,QAAMC,MAAM,GAAGJ,MAAM,EAArB;AACA,QAAMK,MAAM,GAAGL,MAAM,EAArB;AACA,QAAMM,WAAW,GAAG,IAApB;AACA,QAAMC,YAAY,GAAG,GAArB;AACA,QAAMC,KAAK,GAAG,CAAd;AACA,QAAMC,IAAI,GAAG,EAAb;AACA,QAAMC,QAAQ,GAAG,CAAjB;;AAEE,WAASC,SAAT,CAAmBC,EAAnB,EAAuBC,EAAvB,EAA2B;AACvB,QAAIC,GAAG,GAAG,EAAV;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,EAAnB,EAAuBE,CAAC,EAAxB,EAA4B;AACxBD,MAAAA,GAAG,CAACE,IAAJ,CAAS,IAAIC,KAAJ,CAAUL,EAAV,CAAT;AACH;;AACD,WAAOE,GAAP;AACP,GAhB6B,CAiB9B;AACI;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACJ;AAEA;AACA;AACA;;;AAEA,QAAMI,YAAY,GAAG,MAAM;AACvB,UAAMC,OAAO,GAAGf,MAAM,CAACgB,OAAP,CAAeC,UAAf,CAA0B,IAA1B,CAAhB;AACAF,IAAAA,OAAO,CAACG,SAAR,CAAkBjB,MAAM,CAACe,OAAzB,EAAkC,EAAlC,EAAsC,EAAtC,EAAyCf,MAAM,CAACe,OAAP,CAAeG,KAAxD,EAA+DlB,MAAM,CAACe,OAAP,CAAeI,MAA9E;;AACA,SAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,IAApB,EAA0BM,CAAC,EAA3B,EAA+B;AAC3B,WAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjB,KAApB,EAA2BiB,CAAC,EAA5B,EAAgC;AAC5B,YAAIC,CAAC,GAAGD,CAAC,GAAGf,QAAZ;AACA,YAAIiB,CAAC,GAAGZ,CAAC,GAAGL,QAAZ;AAEA,cAAMkB,SAAS,GAAG,SAAlB;AACAT,QAAAA,OAAO,CAACU,WAAR,GAAsB,SAAtB;AACAV,QAAAA,OAAO,CAACW,SAAR;AACAX,QAAAA,OAAO,CAACY,SAAR,GAAoBH,SAApB;AACAT,QAAAA,OAAO,CAACa,QAAR,CAAiBN,CAAjB,EAAoBC,CAApB,EAAuBjB,QAAvB,EAAiCA,QAAjC;AACAS,QAAAA,OAAO,CAACc,MAAR;AACH;AACJ,KAfsB,CAgBvB;AACA;;AACH,GAlBD;;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAQ,MAAA,GAAG,EAAE7B,MAAb;AAAqB,MAAA,KAAK,EAAEE,WAA5B;AAAyC,MAAA,MAAM,EAAEC;AAAjD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,GAAG,EAAEF,MAAV;AAAkB,MAAA,GAAG,EAAC,aAAtB;AAAoC,MAAA,GAAG,EAAC,SAAxC;AAAkD,MAAA,SAAS,EAAC,aAA5D;AAA0E,MAAA,MAAM,EAAEa;AAAlF;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA5DuBf,O;;KAAAA,O","sourcesContent":["import React,{useRef,useState,useEffect} from 'react'\r\n\r\nexport default function Mapping() {\r\n\r\n      const canvas = useRef()\r\n      const imgRef = useRef()\r\n      const canvasWidth = 1000\r\n      const canvasHeight = 900\r\n      const racks = 9\r\n      const rows = 16\r\n      const cellSide = 2\r\n    \r\n        function makeArray(d1, d2) {\r\n            var arr = []\r\n            for(let i = 0; i < d2; i++) {\r\n                arr.push(new Array(d1))\r\n            }\r\n            return arr\r\n    }\r\n    //   useEffect(() => {\r\n        // context.save()\r\n        // context.scale(pixelRatio, pixelRatio)\r\n        // context.fillStyle = \"hsl(0, 0%, 95%)\"\r\n        // context.fillRect(0, 0, width, height)\r\n    \r\n        // context.strokeStyle = \"black\"\r\n        // context.beginPath()\r\n        // context.arc(width / 2, height / 2, width / 4, 0, Math.PI * 2)\r\n        // context.stroke()\r\n        // context.restore()\r\n    //   },[])\r\n    \r\n    //   const dw = Math.floor(pixelRatio * width)\r\n    //   const dh = Math.floor(pixelRatio * height)\r\n    //   const style = { width, height }\r\n\r\n    const handleOnLoad = () => {\r\n        const context = canvas.current.getContext(\"2d\")\r\n        context.drawImage(imgRef.current, 10, 10,imgRef.current.width, imgRef.current.height)\r\n        for (let i = 0; i < rows; i++) {    \r\n            for (let j = 0; j < racks; j++) {\r\n                let x = j * cellSide\r\n                let y = i * cellSide\r\n                \r\n                const cellColor = '#e74c3c'     \r\n                context.strokeStyle = \"#008000\";\r\n                context.beginPath()\r\n                context.fillStyle = cellColor\r\n                context.fillRect(x, y, cellSide, cellSide)\r\n                context.stroke()\r\n            }\r\n        }\r\n        // context.font = \"40px Courier\"\r\n        // context.fillText(\"mapping\", 210, 75)\r\n    }\r\n\r\n    return (\r\n        <div className=\"mapping\">\r\n            <canvas ref={canvas} width={canvasWidth} height={canvasHeight} />\r\n            <img ref={imgRef} src=\"mapping.png\" alt=\"mapping\" className=\"mapping-img\" onLoad={handleOnLoad}/>\r\n        </div>        \r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}