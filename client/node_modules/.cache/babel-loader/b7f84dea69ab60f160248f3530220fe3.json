{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\capstone\\\\schaeffler\\\\client\\\\src\\\\Mapping.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Mapping({\n  setPhoto,\n  setStatus\n}) {\n  _s();\n\n  // const [inventory, setInventory] = useState()\n  // const [file,setFile] = useState()\n  const [socket, setSocket] = useState(); // const [state,setBtn] = useState(false)\n  // const [map,setMap] = useState(new Map())\n\n  useEffect(() => {\n    const s = io(`http://localhost:5000/homepage`);\n    setSocket(s);\n    return () => {\n      s.disconnect();\n    };\n  }, []); // const handleChange = (event) => {\n  //     setInventory(event.target.value);\n  // }\n  // const handleFile = (event) =>{\n  //     setFile(event.target.value)\n  //     const reader = new FileReader();\n  //     const file = event.target.files[0];\n  //     reader.onloadend = () => {\n  //         setPhoto(reader.result);\n  //     };\n  //     reader.readAsDataURL(file);\n  // }\n  // useEffect(()=>{\n  //     if (socket == null || inventory == null || file == null || map == null) return\n  //     if(state === true && inventory !== null && file !== null){\n  //         map[String(inventory)] = file\n  //         socket.emit(\"send-changes\",map)\n  //         setMap(map)\n  //         setBtn(!state)\n  //         setInventory(\"\")\n  //         setFile(\"\")\n  //         setStatus(Object.keys(map)+\",\")\n  //     }\n  // },[inventory,socket,state,file,map])\n  // const handleInventory = () =>{\n  //     // map[String(inventory)] = file\n  //     setBtn(!state)\n  //     socket.emit('save-inventory',map)\n  //     setStatus(Object.keys(map))\n  // }\n  // useEffect(() =>{\n  //     if(socket == null) return\n  //     const handler = (delta) =>{\n  //         // setStatus(String(Object.keys(delta)))\n  //         // const reader = new FileReader()\n  //         // const file = Object.values(delta)\n  //         // reader.onloadend = () => {\n  //         //     setPhoto(reader.result)\n  //         // }\n  //         // reader.readAsDataURL(file)\n  //         setMap(delta)\n  //         console.log(\"this = \",delta)\n  //     }\n  //     socket.on('receive-changes',handler)\n  //     setStatus(Object.keys(map)+\",\")\n  //     return () =>{\n  //         socket.off('receive-changes',handler)\n  //     }\n  // },[socket,map])\n  //TODO: broadcast changes with the stack in the side bar\n  //  and communication with Raspberry Pi\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mapping-wrapper\",\n    children: \"Mapping\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Mapping, \"ABNkg0Z5Wq/qu1nsD2QFH53e40c=\");\n\n_c = Mapping;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mapping\");","map":{"version":3,"sources":["C:/Users/Admin/Downloads/capstone/schaeffler/client/src/Mapping.js"],"names":["React","useEffect","useState","io","useParams","Mapping","setPhoto","setStatus","socket","setSocket","s","disconnect"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAAQC,EAAR,QAAiB,kBAAjB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;;AAEA,eAAe,SAASC,OAAT,CAAiB;AAACC,EAAAA,QAAD;AAAUC,EAAAA;AAAV,CAAjB,EAAuC;AAAA;;AAClD;AACA;AACA,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBP,QAAQ,EAAnC,CAHkD,CAIlD;AACA;;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,CAAC,GAAGP,EAAE,CAAE,gCAAF,CAAZ;AACAM,IAAAA,SAAS,CAACC,CAAD,CAAT;AACA,WAAO,MAAK;AACRA,MAAAA,CAAC,CAACC,UAAF;AACH,KAFD;AAGH,GANQ,EAMN,EANM,CAAT,CARkD,CAgBlD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGJ;AACA;;AAEI,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GApFuBN,O;;KAAAA,O","sourcesContent":["import React,{useEffect,useState} from 'react'\r\nimport {io} from 'socket.io-client'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nexport default function Mapping({setPhoto,setStatus}) {\r\n    // const [inventory, setInventory] = useState()\r\n    // const [file,setFile] = useState()\r\n    const [socket,setSocket] = useState()\r\n    // const [state,setBtn] = useState(false)\r\n    // const [map,setMap] = useState(new Map())\r\n\r\n\r\n    useEffect(() => {\r\n        const s = io(`http://localhost:5000/homepage`)\r\n        setSocket(s)\r\n        return () =>{\r\n            s.disconnect()  \r\n        }\r\n    }, [])  \r\n\r\n    // const handleChange = (event) => {\r\n    //     setInventory(event.target.value);\r\n    // }\r\n\r\n    // const handleFile = (event) =>{\r\n    //     setFile(event.target.value)\r\n    //     const reader = new FileReader();\r\n    //     const file = event.target.files[0];\r\n    //     reader.onloadend = () => {\r\n    //         setPhoto(reader.result);\r\n    //     };\r\n    //     reader.readAsDataURL(file);\r\n    // }\r\n\r\n    // useEffect(()=>{\r\n    //     if (socket == null || inventory == null || file == null || map == null) return\r\n    //     if(state === true && inventory !== null && file !== null){\r\n    //         map[String(inventory)] = file\r\n    //         socket.emit(\"send-changes\",map)\r\n    //         setMap(map)\r\n    //         setBtn(!state)\r\n    //         setInventory(\"\")\r\n    //         setFile(\"\")\r\n    //         setStatus(Object.keys(map)+\",\")\r\n    //     }\r\n    // },[inventory,socket,state,file,map])\r\n\r\n    // const handleInventory = () =>{\r\n    //     // map[String(inventory)] = file\r\n    //     setBtn(!state)\r\n    //     socket.emit('save-inventory',map)\r\n    //     setStatus(Object.keys(map))\r\n    // }\r\n\r\n    // useEffect(() =>{\r\n    //     if(socket == null) return\r\n    //     const handler = (delta) =>{\r\n    //         // setStatus(String(Object.keys(delta)))\r\n    //         // const reader = new FileReader()\r\n    //         // const file = Object.values(delta)\r\n    //         // reader.onloadend = () => {\r\n    //         //     setPhoto(reader.result)\r\n    //         // }\r\n    //         // reader.readAsDataURL(file)\r\n    //         setMap(delta)\r\n    //         console.log(\"this = \",delta)\r\n    //     }\r\n    //     socket.on('receive-changes',handler)\r\n    //     setStatus(Object.keys(map)+\",\")\r\n    //     return () =>{\r\n    //         socket.off('receive-changes',handler)\r\n    //     }\r\n    // },[socket,map])\r\n\r\n\r\n//TODO: broadcast changes with the stack in the side bar\r\n//  and communication with Raspberry Pi\r\n \r\n    return (\r\n        <div className=\"mapping-wrapper\">\r\n            {/* <label htmlFor=\"inventoryName\">Inventory adress:</label><br></br>\r\n            <input type=\"text\" value={inventory} placeholder=\"Inventory\" onChange={handleChange}/><br></br>\r\n            <input type=\"file\" name=\"picture\" value={file} onChange={handleFile}/><br></br><span></span>\r\n            <input type=\"submit\" placeholder=\"Submit\" value=\"submit\" onClick={handleInventory}/>\r\n            <div>{inventory}</div>  */}\r\n            Mapping\r\n        </div> \r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}