{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nrequire('dotenv').config();\n\nexport default function PopUp() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [hasMore, setHasMore] = useState(false);\n  const [queue, setQueue] = useState([]);\n  const [error, setError] = useState(false);\n  const [landingStatus, setLandingStatus] = useState(\"up\");\n  const [searchStatus, setSearchStatus] = useState(\"available\");\n  const heroku = 'https://schaeffler.herokuapp.com/queue';\n  const {\n    isAuthenticated,\n    getAccessTokenSilently\n  } = useAuth0(); // 'http://localhost:5000/queue'\n\n  useEffect(() => {\n    async function getQueue() {\n      if (isAuthenticated) {\n        const token = await getAccessTokenSilently();\n        setError(false);\n        await axios({\n          method: 'GET',\n          // url: 'http://localhost:5000/queue',//change here\n          url: heroku,\n          //change here\n          headers: {\n            authorization: `Bearer ${token}`\n          }\n        }).then(res => {\n          setQueue(prevInventory => {\n            return [...new Set([...prevInventory, ...res.data.map(i => i)])];\n          });\n          setHasMore(res.data.length > 0);\n          setLoading(false);\n        }).catch(e => {\n          setError(true);\n          console.log('Error: ' + e);\n        });\n      }\n    }\n\n    setLoading(true);\n    setError(false);\n    getQueue();\n  }, [getAccessTokenSilently, isAuthenticated]);\n  useEffect(() => {\n    async function fetchChanges() {\n      if (isAuthenticated) {\n        const token = await getAccessTokenSilently();\n        setError(false);\n        await axios({\n          method: 'GET',\n          // url: 'http://localhost:5000/queue',//change here\n          url: heroku,\n          //change here\n          headers: {\n            authorization: `Bearer ${token}`\n          }\n        }).then(res => {\n          setQueue(() => {\n            return [...new Set([...'', ...res.data.map(i => i)])];\n          });\n        }).catch(e => {\n          setError(true);\n          console.log('Error: ' + e);\n        });\n      }\n    }\n\n    const pusher = new Pusher(process.env.REACT_APP_PUSHER_KEY, {\n      'cluster': process.env.REACT_APP_PUSHER_CLUSTER,\n      forceTLS: true\n    });\n    const channelTask = pusher.subscribe('tasks');\n    channelTask.bind('deleted', function () {\n      fetchChanges();\n    });\n    channelTask.bind('inserted', function () {\n      fetchChanges();\n    });\n    const channelLanding = pusher.subscribe('armarker');\n    channelLanding.bind('land', function (data) {\n      setLandingStatus(data.landingStatus);\n    });\n    const channelSearch = pusher.subscribe('search');\n    channelSearch.bind('keyword', function (data) {\n      if (data !== \"\") {\n        setSearchStatus(\"searching\");\n      } else setSearchStatus(\"done\");\n    });\n    return () => {\n      channelTask.unbind();\n      channelLanding.unbind();\n      channelSearch.unbind();\n    };\n  }, [getAccessTokenSilently, isAuthenticated]);\n  return {\n    queue,\n    error,\n    landingStatus,\n    searchStatus,\n    hasMore\n  };\n}\n\n_s(PopUp, \"ncagvkraExjlTjS82pc4kxKXhmQ=\", false, function () {\n  return [useAuth0];\n});\n\n_c = PopUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopUp\");","map":{"version":3,"sources":["C:/Users/Admin/Downloads/capstone/schaeffler/client/src/PopUp.js"],"names":["useState","useEffect","axios","Pusher","useAuth0","require","config","PopUp","loading","setLoading","hasMore","setHasMore","queue","setQueue","error","setError","landingStatus","setLandingStatus","searchStatus","setSearchStatus","heroku","isAuthenticated","getAccessTokenSilently","getQueue","token","method","url","headers","authorization","then","res","prevInventory","Set","data","map","i","length","catch","e","console","log","fetchChanges","pusher","process","env","REACT_APP_PUSHER_KEY","REACT_APP_PUSHER_CLUSTER","forceTLS","channelTask","subscribe","bind","channelLanding","channelSearch","unbind"],"mappings":"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","sourcesContent":["import {useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport Pusher from 'pusher-js'\r\nimport {useAuth0} from '@auth0/auth0-react'\r\n\r\nrequire('dotenv').config()\r\n\r\nexport default function PopUp() {\r\n    const [loading,setLoading] = useState(true)\r\n    const [hasMore,setHasMore] = useState(false)       \r\n    const [queue,setQueue] = useState([])\r\n    const [error,setError] = useState(false)\r\n    const [landingStatus,setLandingStatus] = useState(\"up\")\r\n    const [searchStatus, setSearchStatus] = useState(\"available\")\r\n    const heroku = 'https://schaeffler.herokuapp.com/queue'\r\n    const {isAuthenticated,getAccessTokenSilently} = useAuth0()\r\n    \r\n    // 'http://localhost:5000/queue'\r\n    \r\n    useEffect(() =>{\r\n        async function getQueue(){\r\n            if(isAuthenticated){\r\n                const token = await getAccessTokenSilently()\r\n                setError(false)\r\n                await axios({\r\n                    method:'GET',\r\n                    // url: 'http://localhost:5000/queue',//change here\r\n                    url: heroku,//change here\r\n                    headers: {\r\n                        authorization: `Bearer ${token}`\r\n                    }\r\n                })\r\n                .then(res => {\r\n                    setQueue(prevInventory =>{\r\n                        return [...new Set([...prevInventory,...res.data.map(i => i)])]\r\n                    })\r\n                    setHasMore(res.data.length > 0)\r\n                    setLoading(false)\r\n                })\r\n                .catch(e =>{\r\n                    setError(true)\r\n                    console.log('Error: '+e)\r\n                })\r\n            }\r\n        }\r\n        setLoading(true)\r\n        setError(false)\r\n        getQueue()\r\n    },[getAccessTokenSilently,isAuthenticated])\r\n\r\n    useEffect(() =>{\r\n        async function fetchChanges(){\r\n            if(isAuthenticated){\r\n                const token = await getAccessTokenSilently()\r\n                setError(false)\r\n                await axios({\r\n                    method:'GET',\r\n                    // url: 'http://localhost:5000/queue',//change here\r\n                    url: heroku, //change here\r\n                    headers: {\r\n                        authorization: `Bearer ${token}`\r\n                    }\r\n                })\r\n                .then(res => {\r\n                    setQueue(() =>{\r\n                        return [...new Set([...'',...res.data.map(i => i)])]\r\n                    })\r\n                })\r\n                .catch(e =>{\r\n                    setError(true)\r\n                    console.log('Error: '+e)\r\n                })\r\n            }\r\n        }\r\n        const pusher = new Pusher(process.env.REACT_APP_PUSHER_KEY,{\r\n            'cluster':process.env.REACT_APP_PUSHER_CLUSTER,\r\n            forceTLS: true,\r\n        })\r\n        const channelTask = pusher.subscribe('tasks')\r\n        channelTask.bind('deleted',function(){\r\n            fetchChanges()\r\n        })\r\n        channelTask.bind('inserted',function(){\r\n            fetchChanges()\r\n        })\r\n        const channelLanding = pusher.subscribe('armarker')\r\n        channelLanding.bind('land',function(data){\r\n            setLandingStatus(data.landingStatus)\r\n        })\r\n        const channelSearch = pusher.subscribe('search')\r\n        channelSearch.bind('keyword',function(data){\r\n            if (data !== \"\"){\r\n                setSearchStatus(\"searching\")\r\n            }\r\n            else setSearchStatus(\"done\")\r\n        })\r\n        return () => {\r\n            channelTask.unbind()\r\n            channelLanding.unbind()\r\n            channelSearch.unbind()\r\n        }\r\n    },[getAccessTokenSilently,isAuthenticated])\r\n\r\n    return {queue,error,landingStatus,searchStatus,hasMore}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}