{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\capstone\\\\schaeffler\\\\client\\\\src\\\\SidebarBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useRef, useEffect } from 'react';\nimport infinityScroll from './InfinityScroll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SidebarBox({\n  setClickPhoto\n}) {\n  _s();\n\n  const observer = useRef();\n  const [pageNumber, setPageNumber] = useState(5);\n  const {\n    inventory,\n    hasMore,\n    error,\n    loading,\n    change\n  } = infinityScroll(pageNumber);\n  const lastInventory = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) setPageNumber(prevInventory => prevInventory + 5);\n\n      if (change) {\n        setPageNumber(5);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n  useEffect(() => {\n    if (change) {\n      setPageNumber(5);\n    }\n  }, [change]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-item sidebar-wrapper\",\n    children: [inventory.map((item, index) => {\n      if (inventory.length === index + 1) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inventory-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            ref: lastInventory,\n            children: [\"Location: \", item.location]\n          }, item.location, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            ref: lastInventory,\n            src: item.photo,\n            alt: \"sideBarPhoto\",\n            onClick: () => setClickPhoto(item.photo),\n            className: \"img-sideBar\"\n          }, item.photo, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 28\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inventory-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Location: \", item.location]\n          }, item.location, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.photo,\n            alt: \"sideBarPhoto\",\n            onClick: () => setClickPhoto(item.photo),\n            className: \"img-sideBar\"\n          }, item.photo, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 28\n        }, this);\n      }\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: loading && 'Loading...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error && 'Error'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 14\n  }, this);\n}\n\n_s(SidebarBox, \"+yLQi3cmbToJTOa/lYhP75QWuGQ=\");\n\n_c = SidebarBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"SidebarBox\");","map":{"version":3,"sources":["C:/Users/Admin/Downloads/capstone/schaeffler/client/src/SidebarBox.js"],"names":["React","useCallback","useState","useRef","useEffect","infinityScroll","SidebarBox","setClickPhoto","observer","pageNumber","setPageNumber","inventory","hasMore","error","loading","change","lastInventory","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevInventory","observe","map","item","index","length","location","photo"],"mappings":"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","sourcesContent":["import React,{useCallback,useState,useRef,useEffect} from 'react'\r\nimport infinityScroll from './InfinityScroll'\r\n\r\nexport default function SidebarBox({setClickPhoto}) {\r\n    const observer = useRef()\r\n    const [pageNumber,setPageNumber] = useState(5)\r\n    \r\n    const {\r\n        inventory,\r\n        hasMore,\r\n        error,\r\n        loading,\r\n        change\r\n    } = infinityScroll(pageNumber)\r\n    \r\n\r\n    const lastInventory= useCallback((node) =>{\r\n        if(loading) return\r\n        if(observer.current) observer.current.disconnect()\r\n        observer.current = new IntersectionObserver(entries =>{\r\n            if(entries[0].isIntersecting && hasMore)\r\n            setPageNumber(prevInventory => prevInventory + 5)\r\n            if(change){\r\n                setPageNumber(5)\r\n            }\r\n        })\r\n        if(node) observer.current.observe(node)\r\n    },[loading,hasMore])\r\n\r\n    useEffect(() => {\r\n        if(change){\r\n            setPageNumber(5)\r\n        }\r\n    },[change])\r\n\r\n    return ( <div className=\"grid-item sidebar-wrapper\">\r\n            {inventory.map((item,index)=>{\r\n                if(inventory.length === index +1){\r\n                    return <div className=\"inventory-item\">\r\n                    <div key={item.location} ref={lastInventory}>Location: {item.location}</div>\r\n                    <img key={item.photo} ref={lastInventory} src={item.photo} alt=\"sideBarPhoto\" onClick={() => setClickPhoto(item.photo)} className=\"img-sideBar\"/>\r\n                </div>\r\n                }\r\n                else{\r\n                    return <div className=\"inventory-item\">\r\n                    <div key={item.location}>Location: {item.location}</div>\r\n                    <img key={item.photo} src={item.photo} alt=\"sideBarPhoto\" onClick={() => setClickPhoto(item.photo)} className=\"img-sideBar\"/>\r\n                </div>\r\n                }\r\n            })}\r\n            <div>{loading && 'Loading...'}</div>\r\n            <div>{error && 'Error'}</div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}