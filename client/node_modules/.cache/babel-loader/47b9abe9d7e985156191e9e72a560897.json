{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\capstone\\\\schaeffler\\\\client\\\\src\\\\SidebarBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useRef } from 'react';\nimport infinityScroll from './InfinityScroll';\nimport changes from './Changes';\nimport Pusher from 'pusher-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SidebarBox({\n  setClickPhoto\n}) {\n  _s();\n\n  const observer = useRef();\n  const [pageNumber, setPageNumber] = useState(1);\n  const {\n    inventory,\n    hasMore,\n    error,\n    loading\n  } = infinityScroll(pageNumber);\n  const {\n    change,\n    newError\n  } = changes(); // useCallback(() =>{\n  //     return () => channel.unbind('inserted')\n  // },[])\n  // const pusher = new Pusher('2ccb32686bdc0f96f50a',{\n  //     'cluster':'ap1',\n  //     encrypted:true\n  // })\n  // const channel = pusher.subscribe('tasks')\n  // channel.bind('inserted',function(){\n  //     console.log('here')\n  // })\n\n  const lastInventory = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) setPageNumber(prevInventory => prevInventory + 5);\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n  const newChanges = useCallback(node => {\n    if (change === undefined) return;\n  }, [change]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-item sidebar-wrapper\",\n    children: [change.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inventory-item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: newChanges,\n          children: [\"Location: \", item.location]\n        }, item.location, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 28\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: newError && 'Error'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), inventory.map((item, index) => {\n      if (inventory.length === index + 1) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inventory-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: lastInventory,\n            children: [\"Location: \", item.location]\n          }, item.location, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 28\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inventory-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Location: \", item.location]\n          }, item.location, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 28\n        }, this);\n      }\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: loading && 'Loading...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error && 'Error'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 14\n  }, this);\n}\n\n_s(SidebarBox, \"iV8IUbS2dn6UZdpldClfi0KUWaQ=\");\n\n_c = SidebarBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"SidebarBox\");","map":{"version":3,"sources":["C:/Users/Admin/Downloads/capstone/schaeffler/client/src/SidebarBox.js"],"names":["React","useCallback","useState","useRef","infinityScroll","changes","Pusher","SidebarBox","setClickPhoto","observer","pageNumber","setPageNumber","inventory","hasMore","error","loading","change","newError","lastInventory","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevInventory","observe","newChanges","undefined","map","item","index","location","length"],"mappings":"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","sourcesContent":["import React,{useCallback,useState,useRef} from 'react'\r\nimport infinityScroll from './InfinityScroll'\r\nimport changes from './Changes'\r\nimport Pusher from 'pusher-js'\r\n\r\nexport default function SidebarBox({setClickPhoto}) {\r\n    const observer = useRef()\r\n    const [pageNumber,setPageNumber] = useState(1)\r\n    \r\n    const {\r\n        inventory,\r\n        hasMore,\r\n        error,\r\n        loading\r\n    } = infinityScroll(pageNumber)\r\n\r\n    const {\r\n        change,\r\n        newError,\r\n    } = changes()\r\n\r\n    // useCallback(() =>{\r\n        \r\n    //     return () => channel.unbind('inserted')\r\n    // },[])\r\n    // const pusher = new Pusher('2ccb32686bdc0f96f50a',{\r\n    //     'cluster':'ap1',\r\n    //     encrypted:true\r\n    // })\r\n    // const channel = pusher.subscribe('tasks')\r\n    // channel.bind('inserted',function(){\r\n    //     console.log('here')\r\n    // })\r\n    \r\n\r\n    const lastInventory= useCallback((node) =>{\r\n        if(loading) return\r\n        if(observer.current) observer.current.disconnect()\r\n        observer.current = new IntersectionObserver(entries =>{\r\n            if(entries[0].isIntersecting && hasMore)\r\n            setPageNumber(prevInventory => prevInventory + 5)\r\n        })\r\n        if(node) observer.current.observe(node)\r\n    },[loading,hasMore])\r\n\r\n    const newChanges = useCallback((node) =>{\r\n        if (change === undefined) return\r\n    },[change])\r\n\r\n    return ( <div className=\"grid-item sidebar-wrapper\">\r\n        {change.map((item,index)=>{\r\n                    return <div className=\"inventory-item\">\r\n                    <div key={item.location} ref={newChanges}>Location: {item.location}</div>\r\n                    {/* <img key={item.photo} ref={newChanges}src={item.photo} alt=\"sideBarPhoto\" onClick={() => setClickPhoto(item.photo)} className=\"img-sideBar\"/> */}\r\n                </div>\r\n            })}\r\n            <div>{newError && 'Error'}</div>\r\n            {inventory.map((item,index)=>{\r\n                if(inventory.length === index +1){\r\n                    return <div className=\"inventory-item\">\r\n                    <div key={item.location} ref={lastInventory}>Location: {item.location}</div>\r\n                    {/* <img key={item.photo} ref={lastInventory} src={item.photo} alt=\"sideBarPhoto\" onClick={() => setClickPhoto(item.photo)} className=\"img-sideBar\"/> */}\r\n                </div>\r\n                }\r\n                else{\r\n                    return <div className=\"inventory-item\">\r\n                    <div key={item.location}>Location: {item.location}</div>\r\n                    {/* <img key={item.photo} src={item.photo} alt=\"sideBarPhoto\" onClick={() => setClickPhoto(item.photo)} className=\"img-sideBar\"/> */}\r\n                </div>\r\n                }\r\n            })}\r\n            <div>{loading && 'Loading...'}</div>\r\n            <div>{error && 'Error'}</div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}