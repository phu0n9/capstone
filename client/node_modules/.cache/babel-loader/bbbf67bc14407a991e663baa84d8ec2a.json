{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nexport default function InfinityScroll(pageNumber, keyword, selection) {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [inventory, setInventory] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n  const [change, setChange] = useState(false);\n  const heroku = 'https://schaeffler.herokuapp.com/inventory';\n\n  function fetchApi(URL, paramsDict) {\n    axios({\n      method: 'GET',\n      url: URL,\n      params: paramsDict\n    }).then(res => {\n      setInventory(() => {\n        return [...new Set([...'', ...res.data.map(i => i)])];\n      }); // setHasMore(res.data.length > 0)\n      // setLoading(false)\n    }).catch(e => {\n      setError(true);\n      console.log('Error: ' + e);\n    });\n  } // 'http://localhost:5000/inventory'\n\n\n  useEffect(() => {\n    const pusher = new Pusher('2ccb32686bdc0f96f50a', {\n      'cluster': 'ap1',\n      encrypted: true\n    });\n    const channel = pusher.subscribe('tasks');\n    channel.bind('inserted', function () {\n      fetchApi('http://localhost:5000/inventory', {\n        page: 5\n      });\n      setChange(true);\n    });\n    return () => channel.unbind('inserted');\n  }, []);\n  useEffect(() => {\n    if (keyword !== undefined) {\n      switch (selection) {\n        case \"location\":\n          fetchApi('http://localhost:5000/sort/sortByLocation', {\n            location: keyword\n          });\n          break;\n\n        case \"userId\":\n          fetchApi('http://localhost:5000/sort/sortByUserId', {\n            userId: keyword\n          });\n          break;\n\n        case \"date\":\n          fetchApi('http://localhost:5000/sort/sortByTime', {\n            time: keyword\n          });\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, [keyword, selection]);\n  useEffect(() => {\n    setLoading(true);\n    setError(false);\n\n    if (keyword === '') {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/inventory',\n        params: {\n          page: pageNumber\n        }\n      }).then(res => {\n        setInventory(prevInventory => {\n          return [...new Set([...prevInventory, ...res.data.map(i => i)])];\n        });\n        setHasMore(res.data.length > 0);\n        setLoading(false);\n        setChange(false);\n      }).catch(e => {\n        setError(true);\n        console.log('Error: ' + e);\n      });\n    }\n  }, [pageNumber, keyword]);\n  return {\n    loading,\n    hasMore,\n    error,\n    inventory,\n    change\n  };\n}\n\n_s(InfinityScroll, \"gmLHAJhoVvk8q5xfTEYCmJV0MaA=\");\n\n_c = InfinityScroll;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfinityScroll\");","map":{"version":3,"sources":["C:/Users/Admin/Downloads/capstone/schaeffler/client/src/InfinityScroll.js"],"names":["useEffect","useState","axios","Pusher","InfinityScroll","pageNumber","keyword","selection","loading","setLoading","error","setError","inventory","setInventory","hasMore","setHasMore","change","setChange","heroku","fetchApi","URL","paramsDict","method","url","params","then","res","Set","data","map","i","catch","e","console","log","pusher","encrypted","channel","subscribe","bind","page","unbind","undefined","location","userId","time","prevInventory","length"],"mappings":"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","sourcesContent":["import {useEffect,useState} from 'react'\r\nimport axios from 'axios'\r\nimport Pusher from 'pusher-js'\r\n\r\nexport default function InfinityScroll(pageNumber,keyword,selection) {\r\n    const [loading,setLoading] = useState(true)\r\n    const [error,setError] = useState(false)\r\n    const [inventory,setInventory] = useState([])\r\n    const [hasMore,setHasMore] = useState(false)       \r\n    const [change,setChange] = useState(false)\r\n    const heroku = 'https://schaeffler.herokuapp.com/inventory'\r\n\r\n    function fetchApi(URL,paramsDict){\r\n        axios({\r\n            method:'GET',\r\n            url: URL,\r\n            params:paramsDict\r\n        })\r\n        .then(res => {\r\n            setInventory(() =>{\r\n                return [...new Set([...'',...res.data.map(i => i)])]\r\n            })\r\n            // setHasMore(res.data.length > 0)\r\n            // setLoading(false)\r\n        })\r\n        .catch(e =>{\r\n            setError(true)\r\n            console.log('Error: '+e)\r\n        })\r\n    }\r\n    \r\n    // 'http://localhost:5000/inventory'\r\n    useEffect(() =>{\r\n        const pusher = new Pusher('2ccb32686bdc0f96f50a',{\r\n            'cluster':'ap1',\r\n            encrypted:true\r\n        })\r\n        const channel = pusher.subscribe('tasks')\r\n        channel.bind('inserted',function(){\r\n            fetchApi('http://localhost:5000/inventory',{page:5})\r\n            setChange(true)\r\n        })\r\n        return () => channel.unbind('inserted')\r\n    },[])\r\n\r\n\r\n    useEffect(() =>{\r\n        if(keyword !== undefined){\r\n            switch(selection){\r\n                case \"location\":\r\n                    fetchApi('http://localhost:5000/sort/sortByLocation',{location:keyword})\r\n                    break\r\n                case \"userId\":\r\n                    fetchApi('http://localhost:5000/sort/sortByUserId',{userId:keyword})\r\n                    break\r\n                case \"date\":\r\n                    fetchApi('http://localhost:5000/sort/sortByTime',{time:keyword})\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n    },[keyword,selection])\r\n\r\n    useEffect(() =>{\r\n        setLoading(true)\r\n        setError(false)\r\n        if(keyword === ''){\r\n            axios({\r\n                method:'GET',\r\n                url: 'http://localhost:5000/inventory',\r\n                params:{page:pageNumber}\r\n            })\r\n            .then(res => {\r\n                setInventory(prevInventory =>{\r\n                    return [...new Set([...prevInventory,...res.data.map(i => i)])]\r\n                })\r\n                    setHasMore(res.data.length > 0)\r\n                    setLoading(false)\r\n                    setChange(false)\r\n            })\r\n            .catch(e =>{\r\n                setError(true)\r\n                console.log('Error: '+e)\r\n            })\r\n        }\r\n    },[pageNumber,keyword])\r\n\r\n    return {loading,hasMore,error,inventory,change}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}