{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nexport default function Changes() {\n  _s();\n\n  const [error, setError] = useState(false);\n  const [change, setInventory] = useState([]);\n  useEffect(() => {\n    setError(false);\n    axios({\n      method: 'GET',\n      url: 'http://localhost:5000/changes'\n    }).then(res => {\n      setInventory(prevInventory => {\n        return [...new Set([...prevInventory, ...res.data.map(i => i)])];\n      });\n    }).catch(e => {\n      setError(true);\n      console.log('Error: ' + e);\n    });\n  }, []);\n  return {\n    error,\n    inventory\n  };\n}\n\n_s(Changes, \"5FMU/a4+9c80gfY4Et5OqqZ5adc=\");\n\n_c = Changes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Changes\");","map":{"version":3,"sources":["C:/Users/Admin/Downloads/capstone/schaeffler/client/src/Changes.js"],"names":["React","useEffect","useState","axios","Changes","error","setError","change","setInventory","method","url","then","res","prevInventory","Set","data","map","i","catch","e","console","log","inventory"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAM,CAACK,MAAD,EAAQC,YAAR,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACXK,IAAAA,QAAQ,CAAC,KAAD,CAAR;AAEAH,IAAAA,KAAK,CAAC;AACFM,MAAAA,MAAM,EAAC,KADL;AAEFC,MAAAA,GAAG,EAAE;AAFH,KAAD,CAAL,CAICC,IAJD,CAIMC,GAAG,IAAI;AACTJ,MAAAA,YAAY,CAACK,aAAa,IAAG;AACzB,eAAO,CAAC,GAAG,IAAIC,GAAJ,CAAQ,CAAC,GAAGD,aAAJ,EAAkB,GAAGD,GAAG,CAACG,IAAJ,CAASC,GAAT,CAAaC,CAAC,IAAIA,CAAlB,CAArB,CAAR,CAAJ,CAAP;AACH,OAFW,CAAZ;AAGH,KARD,EASCC,KATD,CASOC,CAAC,IAAG;AACPb,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAUF,CAAtB;AACH,KAZD;AAaH,GAhBQ,EAgBP,EAhBO,CAAT;AAiBA,SAAO;AAACd,IAAAA,KAAD;AAAOiB,IAAAA;AAAP,GAAP;AACH;;GAtBuBlB,O;;KAAAA,O","sourcesContent":["import React,{useEffect,useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default function Changes() {\r\n    const [error,setError] = useState(false)\r\n    const [change,setInventory] = useState([])\r\n\r\n    useEffect(() =>{\r\n        setError(false)\r\n\r\n        axios({\r\n            method:'GET',\r\n            url: 'http://localhost:5000/changes'\r\n        })\r\n        .then(res => {\r\n            setInventory(prevInventory =>{\r\n                return [...new Set([...prevInventory,...res.data.map(i => i)])]\r\n            })\r\n        })\r\n        .catch(e =>{\r\n            setError(true)\r\n            console.log('Error: '+e)\r\n        })\r\n    },[])\r\n    return {error,inventory}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}