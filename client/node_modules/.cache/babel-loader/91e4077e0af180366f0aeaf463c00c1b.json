{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\capstone\\\\schaeffler\\\\client\\\\src\\\\Mapping.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Mapping() {\n  _s();\n\n  const canvas = useRef();\n  const imgRef = useRef();\n  const canvasWidth = 1000;\n  const canvasHeight = 900;\n  const racks = 9;\n  const rows = 16;\n  let cellSide = 50;\n\n  function zeros(dimensions) {\n    var array = [];\n\n    for (var i = 0; i < dimensions[0]; ++i) {\n      array.push(dimensions.length == 1 ? 0 : zeros(dimensions.slice(1)));\n    }\n\n    return array;\n  } //   useEffect(() => {\n  // context.save()\n  // context.scale(pixelRatio, pixelRatio)\n  // context.fillStyle = \"hsl(0, 0%, 95%)\"\n  // context.fillRect(0, 0, width, height)\n  // context.strokeStyle = \"black\"\n  // context.beginPath()\n  // context.arc(width / 2, height / 2, width / 4, 0, Math.PI * 2)\n  // context.stroke()\n  // context.restore()\n  //   },[])\n  //   const dw = Math.floor(pixelRatio * width)\n  //   const dh = Math.floor(pixelRatio * height)\n  //   const style = { width, height }\n  // const array2D = [\n  //     ['R', 'Y', 'R'],\n  //     ['Y', 'R', 'Y'],\n  //     ['R', 'Y', 'R']\n  // ];\n\n\n  const handleOnLoad = () => {\n    const context = canvas.current.getContext(\"2d\");\n    context.drawImage(imgRef.current, 10, 10, imgRef.current.width, imgRef.current.height);\n\n    for (let i = 0; i < zeros([racks, rows]).length; i++) {\n      for (let j = 0; j < zeros([racks, rows])[i].length; j++) {\n        let x = j * 55 + 38;\n        let y = i * 20 + 55;\n        let cellColor = '#e74c3c';\n        console.log(i);\n\n        if (i % 2 === 0 && j % 2 === 0) {\n          cellColor = '#f1c40f';\n        }\n\n        if (i % 2 === 0) {\n          cellSide = 9;\n        }\n\n        context.beginPath();\n        context.fillStyle = cellColor;\n        context.fillRect(x, y, 20, cellSide);\n        context.stroke();\n      }\n    } // context.font = \"40px Courier\"\n    // context.fillText(\"mapping\", 210, 75)\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mapping\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvas,\n      width: canvasWidth,\n      height: canvasHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: imgRef,\n      src: \"mapping.png\",\n      alt: \"mapping\",\n      className: \"mapping-img\",\n      onLoad: handleOnLoad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Mapping, \"al8xOoonljcUj961N2xaTZAf1ls=\");\n\n_c = Mapping;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mapping\");","map":{"version":3,"sources":["C:/Users/Admin/Downloads/capstone/schaeffler/client/src/Mapping.js"],"names":["React","useRef","Mapping","canvas","imgRef","canvasWidth","canvasHeight","racks","rows","cellSide","zeros","dimensions","array","i","push","length","slice","handleOnLoad","context","current","getContext","drawImage","width","height","j","x","y","cellColor","console","log","beginPath","fillStyle","fillRect","stroke"],"mappings":"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","sourcesContent":["import React,{useRef} from 'react'\r\n\r\nexport default function Mapping() {\r\n\r\n      const canvas = useRef()\r\n      const imgRef = useRef()\r\n      const canvasWidth = 1000\r\n      const canvasHeight = 900\r\n      const racks = 9\r\n      const rows = 16\r\n      let cellSide = 50\r\n    \r\n      function zeros(dimensions) {\r\n        var array = []\r\n    \r\n        for (var i = 0; i < dimensions[0]; ++i) {\r\n            array.push(dimensions.length == 1 ? 0 : zeros(dimensions.slice(1)));\r\n        }\r\n    \r\n        return array\r\n    }\r\n    //   useEffect(() => {\r\n        // context.save()\r\n        // context.scale(pixelRatio, pixelRatio)\r\n        // context.fillStyle = \"hsl(0, 0%, 95%)\"\r\n        // context.fillRect(0, 0, width, height)\r\n    \r\n        // context.strokeStyle = \"black\"\r\n        // context.beginPath()\r\n        // context.arc(width / 2, height / 2, width / 4, 0, Math.PI * 2)\r\n        // context.stroke()\r\n        // context.restore()\r\n    //   },[])\r\n    \r\n    //   const dw = Math.floor(pixelRatio * width)\r\n    //   const dh = Math.floor(pixelRatio * height)\r\n    //   const style = { width, height }\r\n    // const array2D = [\r\n    //     ['R', 'Y', 'R'],\r\n    //     ['Y', 'R', 'Y'],\r\n    //     ['R', 'Y', 'R']\r\n    // ];\r\n\r\n    const handleOnLoad = () => {\r\n        const context = canvas.current.getContext(\"2d\")\r\n        context.drawImage(imgRef.current, 10, 10,imgRef.current.width, imgRef.current.height)\r\n        for (let i = 0; i < zeros([racks,rows]).length; i++) {    \r\n            for (let j = 0; j < zeros([racks,rows])[i].length; j++) {\r\n                let x = j * 55 + 38\r\n                let y = i * 20 + 55\r\n\r\n                let cellColor = '#e74c3c'    \r\n                console.log(i)\r\n\r\n                if (i % 2 === 0 && j % 2 === 0) {\r\n                    cellColor = '#f1c40f'\r\n                }\r\n\r\n                if (i % 2 === 0){\r\n                    cellSide = 9\r\n                }\r\n                \r\n                context.beginPath()\r\n                context.fillStyle = cellColor\r\n                context.fillRect(x, y, 20, cellSide)\r\n                context.stroke()\r\n            }\r\n        }\r\n        // context.font = \"40px Courier\"\r\n        // context.fillText(\"mapping\", 210, 75)\r\n    }\r\n\r\n    return (\r\n        <div className=\"mapping\">\r\n            <canvas ref={canvas} width={canvasWidth} height={canvasHeight} />\r\n            <img ref={imgRef} src=\"mapping.png\" alt=\"mapping\" className=\"mapping-img\" onLoad={handleOnLoad}/>\r\n        </div>        \r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}