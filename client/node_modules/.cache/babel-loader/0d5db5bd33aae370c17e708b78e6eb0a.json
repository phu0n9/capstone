{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nrequire('dotenv').config();\n\nexport default function PopUp() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [hasMore, setHasMore] = useState(false);\n  const [queue, setQueue] = useState([]);\n  const [error, setError] = useState(false);\n  const heroku = 'https://schaeffler.herokuapp.com/queue';\n  const {\n    isAuthenticated,\n    getAccessTokenSilently\n  } = useAuth0(); // 'http://localhost:5000/queue'\n\n  useEffect(() => {\n    async function getQueue() {\n      if (isAuthenticated) {\n        const token = await getAccessTokenSilently();\n        setError(false);\n        await axios({\n          method: 'GET',\n          url: 'http://localhost:5000/queue',\n          //change here\n          // url: heroku,//change here\n          headers: {\n            authorization: `Bearer ${token}`\n          }\n        }).then(res => {\n          setQueue(prevInventory => {\n            return [...new Set([...prevInventory, ...res.data.map(i => i)])];\n          });\n          setHasMore(res.data.length > 0);\n          setLoading(false);\n        }).catch(e => {\n          setError(true);\n          console.log('Error: ' + e);\n        });\n      }\n    }\n\n    setLoading(true);\n    setError(false);\n    getQueue();\n  }, [getAccessTokenSilently, isAuthenticated]);\n  useEffect(() => {\n    async function fetchChanges() {\n      if (isAuthenticated) {\n        const token = await getAccessTokenSilently();\n        setError(false);\n        axios({\n          method: 'GET',\n          url: 'http://localhost:5000/queue',\n          //change here\n          // url: heroku, //change here\n          headers: {\n            authorization: `Bearer ${token}`\n          }\n        }).then(res => {\n          setQueue(() => {\n            return [...new Set([...'', ...res.data.map(i => i)])];\n          });\n        }).catch(e => {\n          setError(true);\n          console.log('Error: ' + e);\n        });\n      }\n    }\n\n    const pusher = new Pusher(process.env.REACT_APP_PUSHER_KEY, {\n      'cluster': process.env.REACT_APP_PUSHER_CLUSTER,\n      forceTLS: true\n    });\n    const channelTask = pusher.subscribe('tasks');\n    channelTask.bind('deleted', function () {\n      fetchChanges();\n    });\n    channelTask.bind('inserted', function () {\n      fetchChanges();\n    });\n    return () => {\n      pusher.unsubscribe(channelTask);\n    };\n  }, [getAccessTokenSilently, isAuthenticated]);\n  return {\n    queue,\n    error,\n    hasMore,\n    loading\n  };\n}\n\n_s(PopUp, \"SVubOkPT/OlUWnu8GeBnU+isFkk=\", false, function () {\n  return [useAuth0];\n});\n\n_c = PopUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopUp\");","map":{"version":3,"sources":["C:/Users/Admin/Downloads/capstone/schaeffler/client/src/PopUp.js"],"names":["useState","useEffect","axios","Pusher","useAuth0","require","config","PopUp","loading","setLoading","hasMore","setHasMore","queue","setQueue","error","setError","heroku","isAuthenticated","getAccessTokenSilently","getQueue","token","method","url","headers","authorization","then","res","prevInventory","Set","data","map","i","length","catch","e","console","log","fetchChanges","pusher","process","env","REACT_APP_PUSHER_KEY","REACT_APP_PUSHER_CLUSTER","forceTLS","channelTask","subscribe","bind","unsubscribe"],"mappings":"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","sourcesContent":["import {useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport Pusher from 'pusher-js'\r\nimport {useAuth0} from '@auth0/auth0-react'\r\n\r\nrequire('dotenv').config()\r\n\r\nexport default function PopUp() {\r\n    const [loading,setLoading] = useState(true)\r\n    const [hasMore,setHasMore] = useState(false)       \r\n    const [queue,setQueue] = useState([])\r\n    const [error,setError] = useState(false)\r\n    const heroku = 'https://schaeffler.herokuapp.com/queue'\r\n    const {isAuthenticated,getAccessTokenSilently} = useAuth0()\r\n    \r\n    // 'http://localhost:5000/queue'\r\n    \r\n    useEffect(() =>{\r\n        async function getQueue(){\r\n            if(isAuthenticated){\r\n                const token = await getAccessTokenSilently()\r\n                setError(false)\r\n                await axios({\r\n                    method:'GET',\r\n                    url: 'http://localhost:5000/queue',//change here\r\n                    // url: heroku,//change here\r\n                    headers: {\r\n                        authorization: `Bearer ${token}`\r\n                    }\r\n                })\r\n                .then(res => {\r\n                    setQueue(prevInventory =>{\r\n                        return [...new Set([...prevInventory,...res.data.map(i => i)])]\r\n                    })\r\n                    setHasMore(res.data.length > 0)\r\n                    setLoading(false)\r\n                })\r\n                .catch(e =>{\r\n                    setError(true)\r\n                    console.log('Error: '+e)\r\n                })\r\n            }\r\n        }\r\n        setLoading(true)\r\n        setError(false)\r\n        getQueue()\r\n    },[getAccessTokenSilently,isAuthenticated])\r\n\r\n    useEffect(() =>{\r\n        async function fetchChanges(){\r\n            if(isAuthenticated){\r\n                const token = await getAccessTokenSilently()\r\n                setError(false)\r\n                axios({\r\n                    method:'GET',\r\n                    url: 'http://localhost:5000/queue',//change here\r\n                    // url: heroku, //change here\r\n                    headers: {\r\n                        authorization: `Bearer ${token}`\r\n                    }\r\n                })\r\n                .then(res => {\r\n                    setQueue(() =>{\r\n                        return [...new Set([...'',...res.data.map(i => i)])]\r\n                    })\r\n                })\r\n                .catch(e =>{\r\n                    setError(true)\r\n                    console.log('Error: '+e)\r\n                })\r\n            }\r\n        }\r\n        const pusher = new Pusher(process.env.REACT_APP_PUSHER_KEY,{\r\n            'cluster':process.env.REACT_APP_PUSHER_CLUSTER,\r\n            forceTLS: true,\r\n        })\r\n        const channelTask = pusher.subscribe('tasks')\r\n        channelTask.bind('deleted',function(){\r\n            fetchChanges()\r\n        })\r\n        channelTask.bind('inserted',function(){\r\n            fetchChanges()\r\n        })\r\n        return () => {\r\n            pusher.unsubscribe(channelTask)\r\n        }\r\n    },[getAccessTokenSilently,isAuthenticated])\r\n\r\n    return {queue,error,hasMore,loading}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}