{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\capstone\\\\schaeffler\\\\client\\\\src\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SearchBar({\n  setDeviceCheck,\n  deviceCheck,\n  setButtonSubmit,\n  buttonSubmit,\n  setQueueOnClick\n}) {\n  _s();\n\n  const {\n    user,\n    isAuthenticated,\n    getAccessTokenSilently\n  } = useAuth0();\n  const [keyword, setKeyword] = useState(\"\"); // const [userId,setUserId] = useState(user.sub)\n\n  const heroku = 'https://schaeffler.herokuapp.com/';\n\n  const onSearchClickButton = () => {\n    if (!deviceCheck) {\n      alert('Please make sure to choose the device.');\n    } else {\n      setButtonSubmit(true);\n      setDeviceCheck(false); // setUserId(user.sub)\n    }\n  };\n\n  const onSearching = event => setKeyword(event.target.value);\n\n  useEffect(() => {\n    async function getAccessToken(keyword, userId) {\n      if (isAuthenticated) {\n        const token = await getAccessTokenSilently();\n        const headers = {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }; // await axios.post('http://localhost:5000/search' //change here\n\n        await axios.post(heroku + 'search' //change here\n        , {\n          keyword: keyword,\n          userId: userId\n        }, {\n          headers: headers\n        } // url:  heroku+'search', //change here\n        ).then(() => {}).catch(err => console.log(err));\n      }\n    }\n\n    var regexp = /^\\d{1,2}\\.\\d{1,2}\\.\\d{1,2}?$/;\n\n    if (buttonSubmit === true) {\n      if (keyword !== \"\" && regexp.test(keyword)) {\n        // getAccessToken(keyword,userId)\n        setButtonSubmit(false);\n        setQueueOnClick(true);\n        setKeyword(\"\");\n        setUserId(\"\");\n      } else if (!regexp.test(keyword)) {\n        alert(\"Invalid keyword\");\n      } else {\n        alert(\"Please enter a keyword\");\n      }\n    } // userId\n\n  }, [keyword, buttonSubmit, setButtonSubmit, getAccessTokenSilently, isAuthenticated, setQueueOnClick]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"title-text\",\n      children: \"SEARCH TOOL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      placeholder: \"Search inventory\",\n      className: \"search-box\",\n      onChange: onSearching,\n      value: keyword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"search.png\",\n      alt: \"manifying-glass\",\n      className: \"search-btn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"radio-btn-wrapper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"search-btn\",\n      onClick: onSearchClickButton,\n      children: \"SEARCH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SearchBar, \"Y0c4wwT6Uc7sKtDivDPakjt6JSA=\", false, function () {\n  return [useAuth0];\n});\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/Admin/Downloads/capstone/schaeffler/client/src/SearchBar.js"],"names":["React","useEffect","useState","axios","useAuth0","SearchBar","setDeviceCheck","deviceCheck","setButtonSubmit","buttonSubmit","setQueueOnClick","user","isAuthenticated","getAccessTokenSilently","keyword","setKeyword","heroku","onSearchClickButton","alert","onSearching","event","target","value","getAccessToken","userId","token","headers","post","then","catch","err","console","log","regexp","test","setUserId"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react'\r\nimport axios from 'axios'\r\nimport {useAuth0} from '@auth0/auth0-react'\r\n\r\nexport default function SearchBar({setDeviceCheck,deviceCheck,setButtonSubmit,buttonSubmit,setQueueOnClick}) {\r\n    const {user,isAuthenticated,getAccessTokenSilently} = useAuth0()\r\n    const [keyword,setKeyword] = useState(\"\")\r\n    // const [userId,setUserId] = useState(user.sub)\r\n    const heroku = 'https://schaeffler.herokuapp.com/'\r\n\r\n\r\n    const onSearchClickButton = () => {\r\n        if(!deviceCheck){\r\n            alert('Please make sure to choose the device.')\r\n        }\r\n        else {\r\n            setButtonSubmit(true)\r\n            setDeviceCheck(false)\r\n            // setUserId(user.sub)\r\n        }\r\n    }\r\n\r\n    const onSearching = (event) =>setKeyword(event.target.value)\r\n\r\n    useEffect(() =>{\r\n       \r\n        async function getAccessToken(keyword,userId){\r\n            if(isAuthenticated){\r\n                const token = await getAccessTokenSilently()\r\n                const headers = {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n                // await axios.post('http://localhost:5000/search' //change here\r\n                await axios.post(heroku+'search' //change here\r\n                ,{keyword:keyword,userId:userId},{headers:headers}\r\n                    // url:  heroku+'search', //change here\r\n                ).then(() => {})\r\n                .catch(err => console.log(err))\r\n            }\r\n        }\r\n\r\n        var regexp = /^\\d{1,2}\\.\\d{1,2}\\.\\d{1,2}?$/\r\n        if(buttonSubmit === true){\r\n            if (keyword !== \"\" && regexp.test(keyword)){\r\n                // getAccessToken(keyword,userId)\r\n                setButtonSubmit(false)\r\n                setQueueOnClick(true)\r\n                setKeyword(\"\")\r\n                setUserId(\"\")\r\n            }\r\n            else if(!regexp.test(keyword)){\r\n                alert(\"Invalid keyword\")\r\n            }\r\n            else{\r\n                alert(\"Please enter a keyword\")\r\n            } \r\n        }\r\n        // userId\r\n    },[keyword,buttonSubmit,setButtonSubmit,getAccessTokenSilently,isAuthenticated,setQueueOnClick])\r\n\r\n    return (\r\n        <>\r\n            <p className=\"title-text\">SEARCH TOOL</p>\r\n            <input\r\n                type=\"search\"\r\n                placeholder=\"Search inventory\"\r\n                className=\"search-box\"\r\n                onChange={onSearching}\r\n                value={keyword}\r\n            />\r\n            <img src=\"search.png\" alt=\"manifying-glass\" className=\"search-btn\"/>\r\n            <div className=\"radio-btn-wrapper\"></div>\r\n            <button type=\"submit\" className=\"search-btn\" onClick={onSearchClickButton}>SEARCH</button>\r\n        </>\r\n       \r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}