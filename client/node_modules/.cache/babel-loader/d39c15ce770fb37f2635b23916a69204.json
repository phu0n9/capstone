{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\capstone\\\\schaeffler\\\\client\\\\src\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBar({\n  userId\n}) {\n  _s();\n\n  const [socket, setSocket] = useState();\n  const [pressed, setPress] = useState(false);\n  const [keyword, setKeyword] = useState();\n  const [buttonClicked, setButtonClicked] = useState(false); // const [clicked,setClicked] = useState(false)\n\n  const heroku = 'https://schaeffler.herokuapp.com/'; // 'http://localhost:5000/'\n\n  useEffect(() => {\n    const s = io('http://localhost:5000/');\n    setSocket(s);\n    return () => {\n      s.disconnect();\n    };\n  }, []);\n\n  const onPress = event => {\n    if (event.key === 'Enter') {\n      setPress(true);\n    }\n  };\n\n  const onSearchClickButton = () => {\n    // setClicked(true)\n    setButtonClicked(true);\n  };\n\n  const onSearching = event => {\n    setKeyword(event.target.value);\n  };\n\n  useEffect(() => {\n    if (socket === null || keyword === null) return;\n\n    if (pressed === true || buttonClicked === true) {\n      if (keyword !== \"\") {\n        const key = {\n          \"keyword\": keyword,\n          \"userId\": userId\n        };\n        socket.emit(\"begin-search\", key);\n        setPress(false);\n        setButtonClicked(false);\n        setKeyword(\"\");\n      } else {\n        alert(\"Please enter a keyword\");\n      }\n    }\n  }, [socket, keyword, pressed, userId, buttonClicked]); // const onInputClick = (()=>{\n  //     setClicked(true)\n  // })\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      placeholder: \"Search inventory\",\n      className: \"search-box\",\n      onChange: onSearching,\n      value: keyword,\n      onKeyPress: onPress // onClick={onInputClick}\n      // style = {clicked ? {width:450} : {width:300}}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"search-btn\",\n      onClick: onSearchClickButton,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"search.png\",\n        alt: \"manifying-glass\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchBar, \"meZSNcRBtwT2D6D79VBWzWf+DoI=\");\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/Admin/Downloads/capstone/schaeffler/client/src/SearchBar.js"],"names":["React","useEffect","useState","io","SearchBar","userId","socket","setSocket","pressed","setPress","keyword","setKeyword","buttonClicked","setButtonClicked","heroku","s","disconnect","onPress","event","key","onSearchClickButton","onSearching","target","value","emit","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAAQC,EAAR,QAAiB,kBAAjB;;AAEA,eAAe,SAASC,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAA6B;AAAA;;AAExC,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBL,QAAQ,EAAnC;AACA,QAAM,CAACM,OAAD,EAASC,QAAT,IAAqBP,QAAQ,CAAC,KAAD,CAAnC;AACA,QAAM,CAACQ,OAAD,EAASC,UAAT,IAAuBT,QAAQ,EAArC;AACA,QAAM,CAACU,aAAD,EAAeC,gBAAf,IAAmCX,QAAQ,CAAC,KAAD,CAAjD,CALwC,CAMxC;;AACA,QAAMY,MAAM,GAAG,mCAAf,CAPwC,CASxC;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMc,CAAC,GAAGZ,EAAE,CAAC,wBAAD,CAAZ;AACAI,IAAAA,SAAS,CAACQ,CAAD,CAAT;AACA,WAAO,MAAK;AACRA,MAAAA,CAAC,CAACC,UAAF;AACH,KAFD;AAGH,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMC,OAAO,GAAIC,KAAD,IAChB;AACI,QAAGA,KAAK,CAACC,GAAN,KAAc,OAAjB,EAAyB;AACrBV,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ,GALD;;AAOA,QAAMW,mBAAmB,GAAG,MAC5B;AACI;AACAP,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAJD;;AAMA,QAAMQ,WAAW,GAAIH,KAAD,IAAU;AAC1BP,IAAAA,UAAU,CAACO,KAAK,CAACI,MAAN,CAAaC,KAAd,CAAV;AACH,GAFD;;AAIAtB,EAAAA,SAAS,CAAC,MAAK;AACX,QAAIK,MAAM,KAAK,IAAX,IAAmBI,OAAO,KAAK,IAAnC,EAAyC;;AAEzC,QAAIF,OAAO,KAAK,IAAb,IAAwBI,aAAa,KAAK,IAA7C,EAAmD;AAC/C,UAAIF,OAAO,KAAK,EAAhB,EAAmB;AACf,cAAMS,GAAG,GAAG;AACR,qBAAUT,OADF;AAER,oBAASL;AAFD,SAAZ;AAIAC,QAAAA,MAAM,CAACkB,IAAP,CAAY,cAAZ,EAA2BL,GAA3B;AACAV,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACAI,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAF,QAAAA,UAAU,CAAC,EAAD,CAAV;AACH,OATD,MAUI;AACAc,QAAAA,KAAK,CAAC,wBAAD,CAAL;AACH;AACJ;AACJ,GAlBQ,EAkBP,CAACnB,MAAD,EAAQI,OAAR,EAAgBF,OAAhB,EAAwBH,MAAxB,EAA+BO,aAA/B,CAlBO,CAAT,CAnCwC,CAuDxC;AACA;AACA;;AAEA,sBACI;AAAA,4BACI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,WAAW,EAAC,kBAFhB;AAGI,MAAA,SAAS,EAAC,YAHd;AAII,MAAA,QAAQ,EAAES,WAJd;AAKI,MAAA,KAAK,EAAEX,OALX;AAMI,MAAA,UAAU,EAAEO,OANhB,CAOI;AACA;;AARJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,YAAhC;AAA6C,MAAA,OAAO,EAAEG,mBAAtD;AAAA,6BACI;AAAK,QAAA,GAAG,EAAC,YAAT;AAAsB,QAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GA7EuBhB,S;;KAAAA,S","sourcesContent":["import React,{useEffect,useState} from 'react'\r\nimport {io} from 'socket.io-client'\r\n\r\nexport default function SearchBar({userId}) {\r\n  \r\n    const [socket,setSocket] = useState()\r\n    const [pressed,setPress] = useState(false)\r\n    const [keyword,setKeyword] = useState()\r\n    const [buttonClicked,setButtonClicked] = useState(false)\r\n    // const [clicked,setClicked] = useState(false)\r\n    const heroku = 'https://schaeffler.herokuapp.com/'\r\n\r\n    // 'http://localhost:5000/'\r\n    useEffect(() => {\r\n        const s = io('http://localhost:5000/')\r\n        setSocket(s)\r\n        return () =>{\r\n            s.disconnect()  \r\n        }\r\n    }, []) \r\n\r\n    const onPress = (event) =>\r\n    {\r\n        if(event.key === 'Enter'){\r\n            setPress(true)\r\n        }\r\n    }\r\n\r\n    const onSearchClickButton = () =>\r\n    {\r\n        // setClicked(true)\r\n        setButtonClicked(true)\r\n    }\r\n\r\n    const onSearching = (event) =>{\r\n        setKeyword(event.target.value);\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if (socket === null || keyword === null) return\r\n\r\n        if((pressed === true ) || (buttonClicked === true)){\r\n            if (keyword !== \"\"){\r\n                const key = {\r\n                    \"keyword\":keyword,\r\n                    \"userId\":userId\r\n                }\r\n                socket.emit(\"begin-search\",key)\r\n                setPress(false)\r\n                setButtonClicked(false)\r\n                setKeyword(\"\")\r\n            }\r\n            else{\r\n                alert(\"Please enter a keyword\")\r\n            } \r\n        }\r\n    },[socket,keyword,pressed,userId,buttonClicked])\r\n\r\n    // const onInputClick = (()=>{\r\n    //     setClicked(true)\r\n    // })\r\n\r\n    return (\r\n        <span >\r\n            <input\r\n                type=\"search\"\r\n                placeholder=\"Search inventory\"\r\n                className=\"search-box\"\r\n                onChange={onSearching}\r\n                value={keyword}\r\n                onKeyPress={onPress}\r\n                // onClick={onInputClick}\r\n                // style = {clicked ? {width:450} : {width:300}}\r\n            />\r\n            <button type=\"button\" className=\"search-btn\" onClick={onSearchClickButton}>          \r\n                <img src=\"search.png\" alt=\"manifying-glass\" />\r\n            </button>\r\n        \r\n        </span>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}