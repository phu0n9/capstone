{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\capstone\\\\schaeffler\\\\client\\\\src\\\\PictureGallery.js\";\n// import React,{useCallback,useState,useRef,useEffect} from 'react'\nimport React from 'react'; // import infinityScroll from './InfinityScroll'\n// import Calendar from 'react-calendar'\n// import 'react-calendar/dist/Calendar.css'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PictureGallery({\n  setClickPhoto,\n  setClickGallery\n}) {\n  // const observer = useRef()\n  // const [pageNumber,setPageNumber] = useState(5)\n  // const [keyword,setKeyword] = useState('')\n  // const [selection,setSelection] = useState(\"location\")\n  // const [enableCalendar,setEnableCalendar] = useState(false)\n  // const [value, setCalendar] = useState(new Date())\n  // const [buttonType,setButtonType] = useState(false)\n  // const [keydown,setKeyDown] = useState(\"\")\n  // const [state,setState] = useState(false)\n  // const {\n  //     inventory,\n  //     hasMore,\n  //     error,\n  //     loading,change\n  // } = infinityScroll(pageNumber,keyword,selection)\n  // const lastInventory= useCallback((node) =>{\n  //     if(loading) return\n  //     if(observer.current) observer.current.disconnect()\n  //     observer.current = new IntersectionObserver(entries =>{\n  //         if(entries[0].isIntersecting && hasMore) setPageNumber(prevInventory => prevInventory + 5)\n  //     })\n  //     if(node) observer.current.observe(node)\n  // },[loading,hasMore])\n  // const handleItemSearch = ((e) =>{\n  //     setKeyword(e.target.value)\n  // })\n  // const handleSelection = ((e) =>{\n  //     setSelection(e.target.value)\n  // })\n  // useEffect(() =>{\n  //     if (change){\n  //         setKeyword(\"\")\n  //     }\n  // },[change])\n  // useEffect(()=>{\n  //     switch(selection){\n  //         case \"date\":\n  //             setEnableCalendar(true)\n  //             setKeyword(value.getFullYear()+'-' + (value.getMonth()+1) + '-'+value.getDate())\n  //             setButtonType(true) \n  //             setState(false)\n  //             break\n  //         case \"userId\":\n  //             setEnableCalendar(false)\n  //             setButtonType(true)\n  //             if (keyword !== undefined) {\n  //                 setKeyword(localStorage.getItem('userId'))\n  //             }\n  //             setState(false)\n  //             break\n  //         default:\n  //             if(keyword === localStorage.getItem('userId') || keyword === value.getFullYear()+'-' + (value.getMonth()+1) + '-'+value.getDate()) {\n  //                 setKeyword(\"\")\n  //             }\n  //             setEnableCalendar(false)\n  //             setButtonType(false)\n  //             setState(true)\n  //             break\n  //     }\n  // },[selection,value,keyword])\n  // useEffect(() =>{\n  //     if (keydown !== \"\" && keyword === \"\"){\n  //         setPageNumber(5)\n  //     }\n  // },[keydown,keyword])\n  // const handleKeyDown = ((e) =>{\n  //     setKeyDown(e.target.value)\n  // })\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"picture-slider\",\n      children: \"picture slider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"picture-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-info\",\n        children: \"item info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-picture\",\n        children: \"item picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"close-btn\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"close.png\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this) // <div className=\"grid-item sidebar-wrapper\">\n  //     <div className=\"search-item-bar\">\n  //         {enableCalendar ?\n  //          <Calendar\n  //             className=\"calendar\"\n  //             onChange={setCalendar}\n  //             value={value}\n  //             next2Label=\"\"\n  //             prev2Label=\"\"\n  //         /> : \n  //         <input\n  //             type={buttonType ? \"hidden\": \"search\"}\n  //             placeholder=\"Search existing item\"\n  //             className=\"search-item\"\n  //             onChange={handleItemSearch}\n  //             value ={keyword}\n  //             disabled={buttonType ? \"disabled\": \"\"}\n  //             onKeyDown={handleKeyDown}\n  //         />}\n  //     <p className=\"sort-title\">Sort by:</p>\n  //     <select name=\"sort\" className=\"sort-select\" onChange={handleSelection} value={selection}>\n  //         <option value=\"location\" defaultValue>Location</option>\n  //         <option value=\"userId\">Create By You</option>\n  //         <option value=\"date\">Date</option>\n  //     </select>\n  //     </div>\n  //     {inventory.map((item,index)=>{\n  //         if(inventory.length === index +1){\n  //             return <div className=\"inventory-item\" key={index.toString()}>\n  //                 <div key={(index+1).toString()} ref={lastInventory}>Location: {item.location}</div>\n  //                 <div key={(index+2).toString()}>Create At: {item.createdAt.substring(0,10)}</div>\n  //                 <img key={item.photo} ref={lastInventory} src={`data:image/png;base64,${item.photo}`} alt=\"sideBarPhoto\" onClick={() => setClickPhoto(item.photo)} className=\"img-sideBar\"/>\n  //             </div>\n  //         }\n  //         else{\n  //             return <div className=\"inventory-item\" key={index.toString()}>\n  //                 <div key={(index+1).toString()}>Location: {item.location}</div>\n  //                 <div key={(index+2).toString()}>Create At: {item.createdAt.substring(0,10)}</div>\n  //                 <img key={item.photo} src={`data:image/png;base64,${item.photo}`} alt=\"sideBarPhoto\" onClick={() => setClickPhoto(item.photo)} className=\"img-sideBar\"/>\n  //             </div>\n  //         }\n  //     })}\n  //     {state ? <div>{loading && 'Loading...'}</div> : \"\"}\n  //     <div>{error && 'Error'}</div>\n  // </div>\n  ;\n}\n_c = PictureGallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"PictureGallery\");","map":{"version":3,"sources":["C:/Users/Admin/Downloads/capstone/schaeffler/client/src/PictureGallery.js"],"names":["React","PictureGallery","setClickPhoto","setClickGallery"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;;;AAEA,eAAe,SAASC,cAAT,CAAwB;AAACC,EAAAA,aAAD;AAAeC,EAAAA;AAAf,CAAxB,EAAyD;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAAA,6BAA8B;AAAK,QAAA,GAAG,EAAC,WAAT;AAAqB,QAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CASI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArDJ;AAuDH;KAvIuBF,c","sourcesContent":["// import React,{useCallback,useState,useRef,useEffect} from 'react'\r\nimport React from 'react'\r\n// import infinityScroll from './InfinityScroll'\r\n// import Calendar from 'react-calendar'\r\n// import 'react-calendar/dist/Calendar.css'\r\n\r\nexport default function PictureGallery({setClickPhoto,setClickGallery}) {\r\n    // const observer = useRef()\r\n    // const [pageNumber,setPageNumber] = useState(5)\r\n    // const [keyword,setKeyword] = useState('')\r\n    // const [selection,setSelection] = useState(\"location\")\r\n    // const [enableCalendar,setEnableCalendar] = useState(false)\r\n    // const [value, setCalendar] = useState(new Date())\r\n    // const [buttonType,setButtonType] = useState(false)\r\n    // const [keydown,setKeyDown] = useState(\"\")\r\n    // const [state,setState] = useState(false)\r\n    \r\n    // const {\r\n    //     inventory,\r\n    //     hasMore,\r\n    //     error,\r\n    //     loading,change\r\n    // } = infinityScroll(pageNumber,keyword,selection)\r\n    \r\n\r\n    // const lastInventory= useCallback((node) =>{\r\n    //     if(loading) return\r\n    //     if(observer.current) observer.current.disconnect()\r\n    //     observer.current = new IntersectionObserver(entries =>{\r\n    //         if(entries[0].isIntersecting && hasMore) setPageNumber(prevInventory => prevInventory + 5)\r\n    //     })\r\n    //     if(node) observer.current.observe(node)\r\n    // },[loading,hasMore])\r\n\r\n    // const handleItemSearch = ((e) =>{\r\n    //     setKeyword(e.target.value)\r\n    // })\r\n\r\n    // const handleSelection = ((e) =>{\r\n    //     setSelection(e.target.value)\r\n    // })\r\n\r\n    // useEffect(() =>{\r\n    //     if (change){\r\n    //         setKeyword(\"\")\r\n    //     }\r\n    // },[change])\r\n\r\n    // useEffect(()=>{\r\n        \r\n    //     switch(selection){\r\n    //         case \"date\":\r\n    //             setEnableCalendar(true)\r\n    //             setKeyword(value.getFullYear()+'-' + (value.getMonth()+1) + '-'+value.getDate())\r\n    //             setButtonType(true) \r\n    //             setState(false)\r\n    //             break\r\n    //         case \"userId\":\r\n    //             setEnableCalendar(false)\r\n    //             setButtonType(true)\r\n    //             if (keyword !== undefined) {\r\n    //                 setKeyword(localStorage.getItem('userId'))\r\n    //             }\r\n    //             setState(false)\r\n    //             break\r\n    //         default:\r\n    //             if(keyword === localStorage.getItem('userId') || keyword === value.getFullYear()+'-' + (value.getMonth()+1) + '-'+value.getDate()) {\r\n    //                 setKeyword(\"\")\r\n    //             }\r\n    //             setEnableCalendar(false)\r\n    //             setButtonType(false)\r\n    //             setState(true)\r\n    //             break\r\n    //     }\r\n    // },[selection,value,keyword])\r\n\r\n    // useEffect(() =>{\r\n    //     if (keydown !== \"\" && keyword === \"\"){\r\n    //         setPageNumber(5)\r\n    //     }\r\n    // },[keydown,keyword])\r\n\r\n    // const handleKeyDown = ((e) =>{\r\n    //     setKeyDown(e.target.value)\r\n    // })\r\n\r\n    return ( \r\n        <div className=\"gallery-wrapper\">\r\n            <div className=\"picture-slider\">picture slider</div>\r\n            <div className=\"picture-info\">\r\n                <div className=\"item-info\">item info</div>\r\n                <div className=\"item-picture\">item picture</div>\r\n            </div>\r\n            <button className=\"close-btn\"><img src=\"close.png\" alt=\"\" /></button>\r\n        </div>\r\n        // <div className=\"grid-item sidebar-wrapper\">\r\n        //     <div className=\"search-item-bar\">\r\n        //         {enableCalendar ?\r\n        //          <Calendar\r\n        //             className=\"calendar\"\r\n        //             onChange={setCalendar}\r\n        //             value={value}\r\n        //             next2Label=\"\"\r\n        //             prev2Label=\"\"\r\n        //         /> : \r\n        //         <input\r\n        //             type={buttonType ? \"hidden\": \"search\"}\r\n        //             placeholder=\"Search existing item\"\r\n        //             className=\"search-item\"\r\n        //             onChange={handleItemSearch}\r\n        //             value ={keyword}\r\n        //             disabled={buttonType ? \"disabled\": \"\"}\r\n        //             onKeyDown={handleKeyDown}\r\n        //         />}\r\n        //     <p className=\"sort-title\">Sort by:</p>\r\n        //     <select name=\"sort\" className=\"sort-select\" onChange={handleSelection} value={selection}>\r\n        //         <option value=\"location\" defaultValue>Location</option>\r\n        //         <option value=\"userId\">Create By You</option>\r\n        //         <option value=\"date\">Date</option>\r\n        //     </select>\r\n        //     </div>\r\n        //     {inventory.map((item,index)=>{\r\n        //         if(inventory.length === index +1){\r\n        //             return <div className=\"inventory-item\" key={index.toString()}>\r\n        //                 <div key={(index+1).toString()} ref={lastInventory}>Location: {item.location}</div>\r\n        //                 <div key={(index+2).toString()}>Create At: {item.createdAt.substring(0,10)}</div>\r\n        //                 <img key={item.photo} ref={lastInventory} src={`data:image/png;base64,${item.photo}`} alt=\"sideBarPhoto\" onClick={() => setClickPhoto(item.photo)} className=\"img-sideBar\"/>\r\n        //             </div>\r\n        //         }\r\n        //         else{\r\n        //             return <div className=\"inventory-item\" key={index.toString()}>\r\n        //                 <div key={(index+1).toString()}>Location: {item.location}</div>\r\n        //                 <div key={(index+2).toString()}>Create At: {item.createdAt.substring(0,10)}</div>\r\n        //                 <img key={item.photo} src={`data:image/png;base64,${item.photo}`} alt=\"sideBarPhoto\" onClick={() => setClickPhoto(item.photo)} className=\"img-sideBar\"/>\r\n        //             </div>\r\n        //         }\r\n        //     })}\r\n        //     {state ? <div>{loading && 'Loading...'}</div> : \"\"}\r\n        //     <div>{error && 'Error'}</div>\r\n        // </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}