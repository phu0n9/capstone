{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\capstone\\\\schaeffler\\\\client\\\\src\\\\Mapping.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Mapping() {\n  _s();\n\n  const canvas = useRef();\n  const imgRef = useRef();\n  const droneRef = useRef();\n  const canvasWidth = 1000;\n  const canvasHeight = 900;\n  const cellSide = 20;\n  const [droneX, setDroneX] = useState(900);\n  const [droneY, setDroneY] = useState(500);\n  const [rackDes, setRackDes] = useState(5);\n  const rowDes = 15;\n  const margin = 90; //   function zeros(dimensions) {\n  //     var array = []\n  //     for (var i = 0; i < dimensions[0]; ++i) {\n  //         array.push(dimensions.length == 1 ? 0 : zeros(dimensions.slice(1)));\n  //     }\n  //     return array\n  // }\n  // const draw = (context) => {\n  // for (let i = 0; i < zeros([racks,rows]).length; i++) {    \n  //     for (let j = 0; j < zeros([racks,rows])[i].length; j++) {\n  //         let x = j * 55 + 38\n  //         let y = i * cellSide + 55\n  //         let count = 110\n  //         let cellColor = '#fffff'    \n  //         if (i % 2 === 0 && j % 2 === 0) {\n  //             cellColor = '#f1c40f'\n  //         }\n  //         if (i !== 0 && i !== 1){\n  //             y = i * cellSide + count\n  //             count += 60\n  //             if(i !== 2 && i !== 3){\n  //                 y = i * cellSide + count\n  //                 count += 60\n  //                 if (i !== 4 && i !== 5){\n  //                     y = i * cellSide + count\n  //                     count += 60\n  //                     if (i === 8){\n  //                         y = i * cellSide + count\n  //                     }\n  //                 }\n  //             }\n  //         }\n  //     }\n  // }\n  // }\n  // const drawItem = (context) =>{\n  //     const desX = rowDes * 55 + 38\n  //     rackDes = rackDes - 1 \n  //     // if(rackDes === 0 || rackDes === 1){\n  //         droneY = rackDes * cellSide + 220\n  //         console.log(droneY)\n  //     // }\n  //     // else{\n  //     //     droneY = rackDes * cellSide + Math.trunc(rackDes/2) * margin\n  //     // }\n  //     if(desX === droneX){\n  //         droneX = desX\n  //     }\n  //     while (desX < droneX){\n  //         droneX -= 1\n  //         context.beginPath()\n  //         context.drawImage(droneRef.current,droneX,droneY,droneRef.current.width,droneRef.current.height)\n  //     }\n  // }\n  // const handleMapOnLoad = () => {\n  //     const context = canvas.current.getContext(\"2d\")\n  //     draw(context)\n  // }\n  // const handleItemOnLoad = () =>{\n  //     const context = canvas.current.getContext(\"2d\")\n  //     drawItem(context)\n  // }\n\n  function movingDrone(droneItem, context) {\n    droneItem.onload = () => {\n      const desX = rowDes * 55 + 38;\n      setRackDes(rackDes - 1);\n      setDroneY(rackDes * cellSide + 220);\n      console.log(droneY);\n\n      if (desX < droneX) {\n        setDroneX(droneX - 1);\n        context.beginPath();\n        context.drawImage(droneRef.current, droneX, droneY, droneRef.current.width, droneRef.current.height);\n      } else {\n        setDroneX(desX);\n      }\n    };\n  }\n\n  useEffect(() => {\n    const context = canvas.current.getContext(\"2d\");\n    const img = imgRef.current;\n    const droneItem = droneRef.current;\n\n    if (context) {\n      img.onload = () => {\n        context.drawImage(imgRef.current, 10, 10, imgRef.current.width, imgRef.current.height);\n      };\n    }\n  }, [rackDes, droneX, droneY]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mapping\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvas,\n      width: canvasWidth,\n      height: canvasHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: imgRef,\n      src: \"mapping.png\",\n      alt: \"mapping\",\n      className: \"mapping-img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: droneRef,\n      src: \"drone.png\",\n      alt: \"drone\",\n      className: \"drone-piece\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Mapping, \"X6a6QwPoKrhU+jS8UXqbMca/L/I=\");\n\n_c = Mapping;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mapping\");","map":{"version":3,"sources":["C:/Users/Admin/Downloads/capstone/schaeffler/client/src/Mapping.js"],"names":["React","useRef","useEffect","useState","Mapping","canvas","imgRef","droneRef","canvasWidth","canvasHeight","cellSide","droneX","setDroneX","droneY","setDroneY","rackDes","setRackDes","rowDes","margin","movingDrone","droneItem","context","onload","desX","console","log","beginPath","drawImage","current","width","height","getContext","img"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,MAAd,EAAqBC,SAArB,EAA+BC,QAA/B,QAA8C,OAA9C;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAE5B,QAAMC,MAAM,GAAGJ,MAAM,EAArB;AACA,QAAMK,MAAM,GAAGL,MAAM,EAArB;AACA,QAAMM,QAAQ,GAAGN,MAAM,EAAvB;AACA,QAAMO,WAAW,GAAG,IAApB;AACA,QAAMC,YAAY,GAAG,GAArB;AACA,QAAMC,QAAQ,GAAG,EAAjB;AACA,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBT,QAAQ,CAAC,GAAD,CAAnC;AACA,QAAM,CAACU,MAAD,EAAQC,SAAR,IAAqBX,QAAQ,CAAC,GAAD,CAAnC;AACA,QAAM,CAACY,OAAD,EAASC,UAAT,IAAuBb,QAAQ,CAAC,CAAD,CAArC;AACA,QAAMc,MAAM,GAAG,EAAf;AACA,QAAMC,MAAM,GAAG,EAAf,CAZ4B,CAc9B;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACI;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA,WAASC,WAAT,CAAqBC,SAArB,EAA+BC,OAA/B,EAAuC;AACnCD,IAAAA,SAAS,CAACE,MAAV,GAAmB,MAAK;AACpB,YAAMC,IAAI,GAAGN,MAAM,GAAG,EAAT,GAAc,EAA3B;AACAD,MAAAA,UAAU,CAACD,OAAO,GAAE,CAAV,CAAV;AACAD,MAAAA,SAAS,CAACC,OAAO,GAAGL,QAAV,GAAqB,GAAtB,CAAT;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;;AACA,UAAIU,IAAI,GAAGZ,MAAX,EAAkB;AACdC,QAAAA,SAAS,CAACD,MAAM,GAAE,CAAT,CAAT;AACAU,QAAAA,OAAO,CAACK,SAAR;AACAL,QAAAA,OAAO,CAACM,SAAR,CAAkBpB,QAAQ,CAACqB,OAA3B,EAAmCjB,MAAnC,EAA0CE,MAA1C,EAAiDN,QAAQ,CAACqB,OAAT,CAAiBC,KAAlE,EAAwEtB,QAAQ,CAACqB,OAAT,CAAiBE,MAAzF;AACH,OAJD,MAKI;AACAlB,QAAAA,SAAS,CAACW,IAAD,CAAT;AACH;AACJ,KAbD;AAcH;;AAEDrB,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMmB,OAAO,GAAGhB,MAAM,CAACuB,OAAP,CAAeG,UAAf,CAA0B,IAA1B,CAAhB;AACA,UAAMC,GAAG,GAAG1B,MAAM,CAACsB,OAAnB;AACA,UAAMR,SAAS,GAAGb,QAAQ,CAACqB,OAA3B;;AACA,QAAGP,OAAH,EAAW;AACPW,MAAAA,GAAG,CAACV,MAAJ,GAAa,MAAK;AACdD,QAAAA,OAAO,CAACM,SAAR,CAAkBrB,MAAM,CAACsB,OAAzB,EAAkC,EAAlC,EAAsC,EAAtC,EAAyCtB,MAAM,CAACsB,OAAP,CAAeC,KAAxD,EAA+DvB,MAAM,CAACsB,OAAP,CAAeE,MAA9E;AACH,OAFD;AAKH;AAEJ,GAZQ,EAYP,CAACf,OAAD,EAASJ,MAAT,EAAgBE,MAAhB,CAZO,CAAT;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAQ,MAAA,GAAG,EAAER,MAAb;AAAqB,MAAA,KAAK,EAAEG,WAA5B;AAAyC,MAAA,MAAM,EAAEC;AAAjD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,GAAG,EAAEH,MAAV;AAAkB,MAAA,GAAG,EAAC,aAAtB;AAAoC,MAAA,GAAG,EAAC,SAAxC;AAAkD,MAAA,SAAS,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,GAAG,EAAEC,QAAV;AAAoB,MAAA,GAAG,EAAC,WAAxB;AAAoC,MAAA,GAAG,EAAC,OAAxC;AAAgD,MAAA,SAAS,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA5HuBH,O;;KAAAA,O","sourcesContent":["import React,{useRef,useEffect,useState} from 'react'\r\n\r\nexport default function Mapping() {\r\n\r\n      const canvas = useRef()\r\n      const imgRef = useRef()\r\n      const droneRef = useRef()\r\n      const canvasWidth = 1000\r\n      const canvasHeight = 900\r\n      const cellSide = 20\r\n      const [droneX,setDroneX] = useState(900)\r\n      const [droneY,setDroneY] = useState(500)\r\n      const [rackDes,setRackDes] = useState(5)\r\n      const rowDes = 15\r\n      const margin = 90\r\n    \r\n    //   function zeros(dimensions) {\r\n    //     var array = []\r\n    \r\n    //     for (var i = 0; i < dimensions[0]; ++i) {\r\n    //         array.push(dimensions.length == 1 ? 0 : zeros(dimensions.slice(1)));\r\n    //     }\r\n    \r\n    //     return array\r\n    // }\r\n\r\n    // const draw = (context) => {\r\n        // for (let i = 0; i < zeros([racks,rows]).length; i++) {    \r\n        //     for (let j = 0; j < zeros([racks,rows])[i].length; j++) {\r\n        //         let x = j * 55 + 38\r\n        //         let y = i * cellSide + 55\r\n        //         let count = 110\r\n\r\n        //         let cellColor = '#fffff'    \r\n\r\n        //         if (i % 2 === 0 && j % 2 === 0) {\r\n        //             cellColor = '#f1c40f'\r\n        //         }\r\n               \r\n        //         if (i !== 0 && i !== 1){\r\n        //             y = i * cellSide + count\r\n        //             count += 60\r\n        //             if(i !== 2 && i !== 3){\r\n        //                 y = i * cellSide + count\r\n        //                 count += 60\r\n        //                 if (i !== 4 && i !== 5){\r\n        //                     y = i * cellSide + count\r\n        //                     count += 60\r\n        //                     if (i === 8){\r\n        //                         y = i * cellSide + count\r\n        //                     }\r\n        //                 }\r\n        //             }\r\n        //         }\r\n        //     }\r\n        // }\r\n    // }\r\n\r\n    // const drawItem = (context) =>{\r\n    //     const desX = rowDes * 55 + 38\r\n    //     rackDes = rackDes - 1 \r\n    //     // if(rackDes === 0 || rackDes === 1){\r\n    //         droneY = rackDes * cellSide + 220\r\n    //         console.log(droneY)\r\n    //     // }\r\n    //     // else{\r\n    //     //     droneY = rackDes * cellSide + Math.trunc(rackDes/2) * margin\r\n    //     // }\r\n    //     if(desX === droneX){\r\n    //         droneX = desX\r\n    //     }\r\n    //     while (desX < droneX){\r\n    //         droneX -= 1\r\n    //         context.beginPath()\r\n    //         context.drawImage(droneRef.current,droneX,droneY,droneRef.current.width,droneRef.current.height)\r\n    //     }\r\n\r\n    // }\r\n    \r\n    // const handleMapOnLoad = () => {\r\n    //     const context = canvas.current.getContext(\"2d\")\r\n    //     draw(context)\r\n    // }\r\n\r\n    // const handleItemOnLoad = () =>{\r\n    //     const context = canvas.current.getContext(\"2d\")\r\n    //     drawItem(context)\r\n    // }\r\n    function movingDrone(droneItem,context){\r\n        droneItem.onload = () =>{\r\n            const desX = rowDes * 55 + 38\r\n            setRackDes(rackDes -1)\r\n            setDroneY(rackDes * cellSide + 220)\r\n            console.log(droneY)\r\n            if (desX < droneX){\r\n                setDroneX(droneX -1)\r\n                context.beginPath()\r\n                context.drawImage(droneRef.current,droneX,droneY,droneRef.current.width,droneRef.current.height)\r\n            }\r\n            else{\r\n                setDroneX(desX)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const context = canvas.current.getContext(\"2d\")\r\n        const img = imgRef.current\r\n        const droneItem = droneRef.current\r\n        if(context){\r\n            img.onload = () =>{\r\n                context.drawImage(imgRef.current, 10, 10,imgRef.current.width, imgRef.current.height)\r\n            }\r\n    \r\n           \r\n        }\r\n        \r\n    },[rackDes,droneX,droneY])\r\n\r\n    return (\r\n        <div className=\"mapping\">\r\n            <canvas ref={canvas} width={canvasWidth} height={canvasHeight} />\r\n            <img ref={imgRef} src=\"mapping.png\" alt=\"mapping\" className=\"mapping-img\" />\r\n            <img ref={droneRef} src=\"drone.png\" alt=\"drone\" className=\"drone-piece\"/>\r\n        </div>        \r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}