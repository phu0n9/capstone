{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\capstone\\\\schaeffler\\\\client\\\\src\\\\Mapping.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Mapping() {\n  _s();\n\n  const canvas = useRef();\n  const imgRef = useRef();\n  const droneRef = useRef();\n  const canvasWidth = 1000;\n  const canvasHeight = 900;\n  let cellSide = 20;\n  let droneX = 900;\n  let droneY = 500;\n  let rackDes = 9;\n  const rowDes = 15;\n  const margin = 70; //   function zeros(dimensions) {\n  //     var array = []\n  //     for (var i = 0; i < dimensions[0]; ++i) {\n  //         array.push(dimensions.length == 1 ? 0 : zeros(dimensions.slice(1)));\n  //     }\n  //     return array\n  // }\n\n  const draw = context => {\n    context.drawImage(imgRef.current, 10, 10, imgRef.current.width, imgRef.current.height); // for (let i = 0; i < zeros([racks,rows]).length; i++) {    \n    //     for (let j = 0; j < zeros([racks,rows])[i].length; j++) {\n    //         let x = j * 55 + 38\n    //         let y = i * cellSide + 55\n    //         let count = 110\n    //         let cellColor = '#fffff'    \n    //         if (i % 2 === 0 && j % 2 === 0) {\n    //             cellColor = '#f1c40f'\n    //         }\n    //         if (i !== 0 && i !== 1){\n    //             y = i * cellSide + count\n    //             count += 60\n    //             if(i !== 2 && i !== 3){\n    //                 y = i * cellSide + count\n    //                 count += 60\n    //                 if (i !== 4 && i !== 5){\n    //                     y = i * cellSide + count\n    //                     count += 60\n    //                     if (i === 8){\n    //                         y = i * cellSide + count\n    //                     }\n    //                 }\n    //             }\n    //         }\n    //     }\n    // }\n  };\n\n  const drawItem = context => {\n    const desX = rowDes * 55 + 38;\n    rackDes = rackDes - 1;\n\n    if (rackDes === 0 || rackDes === 1) {\n      droneY = rackDes * cellSide + 55;\n    } // else{\n    //     droneY = rackDes * cellSide + Math.trunc(rackDes/2) * margin\n    // }\n\n\n    if (desX === droneX) {\n      droneX = desX;\n    }\n\n    while (desX < droneX) {\n      droneX -= 1;\n      context.beginPath();\n      context.drawImage(droneRef.current, droneX, droneY, droneRef.current.width, droneRef.current.height);\n    }\n  };\n\n  const handleMapOnLoad = () => {\n    const context = canvas.current.getContext(\"2d\");\n    draw(context);\n  };\n\n  const handleItemOnLoad = () => {\n    const context = canvas.current.getContext(\"2d\");\n    drawItem(context);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mapping\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvas,\n      width: canvasWidth,\n      height: canvasHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: imgRef,\n      src: \"mapping.png\",\n      alt: \"mapping\",\n      className: \"mapping-img\",\n      onLoad: handleMapOnLoad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: droneRef,\n      src: \"drone.png\",\n      alt: \"drone\",\n      className: \"drone-piece\",\n      onLoad: handleItemOnLoad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Mapping, \"weMB46W/JJy7UGNWSGFJ2SQsNHg=\");\n\n_c = Mapping;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mapping\");","map":{"version":3,"sources":["C:/Users/Admin/Downloads/capstone/schaeffler/client/src/Mapping.js"],"names":["React","useRef","useEffect","useState","Mapping","canvas","imgRef","droneRef","canvasWidth","canvasHeight","cellSide","droneX","droneY","rackDes","rowDes","margin","draw","context","drawImage","current","width","height","drawItem","desX","beginPath","handleMapOnLoad","getContext","handleItemOnLoad"],"mappings":"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","sourcesContent":["import React,{useRef,useEffect,useState} from 'react'\r\n\r\nexport default function Mapping() {\r\n\r\n      const canvas = useRef()\r\n      const imgRef = useRef()\r\n      const droneRef = useRef()\r\n      const canvasWidth = 1000\r\n      const canvasHeight = 900\r\n      let cellSide = 20\r\n      let droneX = 900\r\n      let droneY = 500\r\n      let rackDes = 9\r\n      const rowDes = 15\r\n      const margin = 70\r\n    \r\n    //   function zeros(dimensions) {\r\n    //     var array = []\r\n    \r\n    //     for (var i = 0; i < dimensions[0]; ++i) {\r\n    //         array.push(dimensions.length == 1 ? 0 : zeros(dimensions.slice(1)));\r\n    //     }\r\n    \r\n    //     return array\r\n    // }\r\n\r\n    const draw = (context) => {\r\n        context.drawImage(imgRef.current, 10, 10,imgRef.current.width, imgRef.current.height)\r\n        // for (let i = 0; i < zeros([racks,rows]).length; i++) {    \r\n        //     for (let j = 0; j < zeros([racks,rows])[i].length; j++) {\r\n        //         let x = j * 55 + 38\r\n        //         let y = i * cellSide + 55\r\n        //         let count = 110\r\n\r\n        //         let cellColor = '#fffff'    \r\n\r\n        //         if (i % 2 === 0 && j % 2 === 0) {\r\n        //             cellColor = '#f1c40f'\r\n        //         }\r\n               \r\n        //         if (i !== 0 && i !== 1){\r\n        //             y = i * cellSide + count\r\n        //             count += 60\r\n        //             if(i !== 2 && i !== 3){\r\n        //                 y = i * cellSide + count\r\n        //                 count += 60\r\n        //                 if (i !== 4 && i !== 5){\r\n        //                     y = i * cellSide + count\r\n        //                     count += 60\r\n        //                     if (i === 8){\r\n        //                         y = i * cellSide + count\r\n        //                     }\r\n        //                 }\r\n        //             }\r\n        //         }\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    const drawItem = (context) =>{\r\n        const desX = rowDes * 55 + 38\r\n        rackDes = rackDes - 1 \r\n        if(rackDes === 0 || rackDes === 1){\r\n            droneY = rackDes * cellSide + 55\r\n        }\r\n        // else{\r\n        //     droneY = rackDes * cellSide + Math.trunc(rackDes/2) * margin\r\n        // }\r\n        if(desX === droneX){\r\n            droneX = desX\r\n        }\r\n        while (desX < droneX){\r\n            droneX -= 1\r\n            context.beginPath()\r\n            context.drawImage(droneRef.current,droneX,droneY,droneRef.current.width,droneRef.current.height)\r\n        }\r\n\r\n    }\r\n    \r\n    const handleMapOnLoad = () => {\r\n        const context = canvas.current.getContext(\"2d\")\r\n        draw(context)\r\n    }\r\n\r\n    const handleItemOnLoad = () =>{\r\n        const context = canvas.current.getContext(\"2d\")\r\n        drawItem(context)\r\n    }\r\n\r\n    return (\r\n        <div className=\"mapping\">\r\n            <canvas ref={canvas} width={canvasWidth} height={canvasHeight} />\r\n            <img ref={imgRef} src=\"mapping.png\" alt=\"mapping\" className=\"mapping-img\" onLoad={handleMapOnLoad}/>\r\n            <img ref={droneRef} src=\"drone.png\" alt=\"drone\" className=\"drone-piece\" onLoad={handleItemOnLoad}/>\r\n        </div>        \r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}